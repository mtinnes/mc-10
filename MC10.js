/*
MC10, based on work by Chris Mennie
Copyright (C) 2012 Mike Tinnes [www.catalystllc.biz]

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/*
Contributions by Greg Dionne
5/18/17 - audio processing
5/21/17 - video mode support
5/28/17 - float address bus on unconnected memory (0x0020-0x007F,0x0100-0x4000)
        - properly support video colors in SG6 with restricted MC6847 CSS pin.
        - add partial support for reading keyboard strobe from 0x9000-0xbfff.
1/10/17 - fix carry on negate instructions
2/16/17 - use direct page address for BASIC load start address
*/

function FiniteBuffer(n) {
    this._array = new Array(n);
    this.start = 0;
    this.length = 0;
    this.capacity = n;
}

FiniteBuffer.prototype.clear = function () {
    this.start = 0;
    this.length = 0;
};

FiniteBuffer.prototype.get = function (i) {
    if (i < 0 || i >= this.length)
        return undefined;
    return this._array[(this.start + i + this.capacity) % this.capacity];
};

FiniteBuffer.prototype.pull = function () {
    if (this.length == 0)
        return undefined;
    var value = this._array[this.start];
    this.start = (this.start + 1) % this.capacity;
    this.length = this.length - 1;
    return value;
};

FiniteBuffer.prototype.push = function (v) {
    if (this.length < this.capacity) {
        this._array[(this.start + this.length + this.capacity) % this.capacity] = v;
        this.length++;
    } else {
        this.start++;
        if (this.start >= this.capacity) {
            this.start = 0;
        }
        this._array[(this.start + this.length + this.capacity) % this.capacity] = v;
    }
};


var MC10 = function (opts) {
    this.opts = {
        maxRam: 0x8fff,
        preferredFrameRate: 60
    };
    if (typeof opts != 'undefined') {
        var key;
        for (key in this.opts) {
            if (typeof opts[key] != 'undefined') {
                this.opts[key] = opts[key];
            }
        }
    }
    this.maxRam = this.opts.maxRam;
    this.clockRate = 890000;
    this.frameTime = Math.round(1000 / this.opts.preferredFrameRate);
    this.actualFrameRate = 1000 / this.frameTime;
    this.cpu = new MC10.MC6803(this);
    this.vdg = new MC10.MC6847(this);
    this.kbd = new MC10.KBD(this);
    this.cassette = new MC10.Cassette(this);
};

// BASIC ROM
MC10.ROM = [0xF2, 0xBA, 0xF3, 0x35, 0xF2, 0xD5, 0x42, 0x15, 0xF6, 0x2A, 0xF5, 0x4D, 0xF0, 0xB9, 0xF5, 0xC9, 0xF6, 0x8C, 0xF6, 0x86, 0xF6, 0xD2, 0xEF, 0x5F, 0xEE, 0x82, 0xEC, 0xED, 0xEF, 0x1C, 0xEE, 0xA2, 0xEE, 0x8E, 0xEE, 0xAD, 0xEE, 0xC8, 0xEE, 0xCF, 0xFB, 0x9C, 0xFC, 0x11, 0xFB, 0xED, 0xEC, 0xDB, 0x79, 0xEF, 0x80, 0x79, 0xEF, 0x75, 0x7B, 0xF0, 0xF1, 0x7B, 0xF1, 0xC8, 0x7F, 0xF5, 0x56, 0x50, 0xEA, 0x8E, 0x46, 0xEA, 0x8D, 0x46, 0x4F, 0xD2, 0x47, 0x4F, 0x54, 0xCF, 0x47, 0x4F, 0x53, 0x55, 0xC2, 0x52, 0x45, 0xCD, 0x49, 0xC6, 0x44, 0x41, 0x54, 0xC1, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x4F, 0xCE, 0x49, 0x4E, 0x50, 0x55, 0xD4, 0x45, 0x4E, 0xC4, 0x4E, 0x45, 0x58, 0xD4, 0x44, 0x49, 0xCD, 0x52, 0x45, 0x41, 0xC4, 0x4C, 0x45, 0xD4, 0x52, 0x55, 0xCE, 0x52, 0x45, 0x53, 0x54, 0x4F, 0x52, 0xC5, 0x52, 0x45, 0x54, 0x55, 0x52, 0xCE, 0x53, 0x54, 0x4F, 0xD0, 0x50, 0x4F, 0x4B, 0xC5, 0x43, 0x4F, 0x4E, 0xD4, 0x4C, 0x49, 0x53, 0xD4, 0x43, 0x4C, 0x45, 0x41, 0xD2, 0x4E, 0x45, 0xD7, 0x43, 0x4C, 0x4F, 0x41, 0xC4, 0x43, 0x53, 0x41, 0x56, 0xC5, 0x4C, 0x4C, 0x49, 0x53, 0xD4, 0x4C, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x53, 0x45, 0xD4, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x43, 0x4C, 0xD3, 0x53, 0x4F, 0x55, 0x4E, 0xC4, 0x45, 0x58, 0x45, 0xC3, 0x53, 0x4B, 0x49, 0x50, 0xC6, 0x54, 0x41, 0x42, 0xA8, 0x54, 0xCF, 0x54, 0x48, 0x45, 0xCE, 0x4E, 0x4F, 0xD4, 0x53, 0x54, 0x45, 0xD0, 0x4F, 0x46, 0xC6, 0xAB, 0xAD, 0xAA, 0xAF, 0xDE, 0x41, 0x4E, 0xC4, 0x4F, 0xD2, 0xBE, 0xBD, 0xBC, 0x53, 0x47, 0xCE, 0x49, 0x4E, 0xD4, 0x41, 0x42, 0xD3, 0x55, 0x53, 0xD2, 0x52, 0x4E, 0xC4, 0x53, 0x51, 0xD2, 0x4C, 0x4F, 0xC7, 0x45, 0x58, 0xD0, 0x53, 0x49, 0xCE, 0x43, 0x4F, 0xD3, 0x54, 0x41, 0xCE, 0x50, 0x45, 0x45, 0xCB, 0x4C, 0x45, 0xCE, 0x53, 0x54, 0x52, 0xA4, 0x56, 0x41, 0xCC, 0x41, 0x53, 0xC3, 0x43, 0x48, 0x52, 0xA4, 0x4C, 0x45, 0x46, 0x54, 0xA4, 0x52, 0x49, 0x47, 0x48, 0x54, 0xA4, 0x4D, 0x49, 0x44, 0xA4, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x56, 0x41, 0x52, 0x50, 0x54, 0xD2, 0x49, 0x4E, 0x4B, 0x45, 0x59, 0xA4, 0x4D, 0x45, 0xCD, 0x00, 0xE4, 0xC4, 0xE6, 0x1A, 0xE6, 0x04, 0xE6, 0x85, 0xE6, 0x72, 0xE6, 0x51, 0xE7, 0x1F, 0xE6, 0x92, 0xE7, 0xDE, 0xE5, 0x7F, 0xE8, 0xBB, 0xEB, 0x12, 0xE8, 0x0E, 0xE6, 0xD3, 0xE5, 0xFA, 0xE5, 0x60, 0xE6, 0x31, 0xE5, 0x7E, 0xEF, 0x66, 0xE5, 0xA6, 0xE4, 0x0D, 0xE5, 0xB8, 0xE3, 0xCD, 0xFD, 0x5C, 0xFC, 0x3B, 0xE4, 0x0B, 0xE7, 0x1C, 0xFB, 0x25, 0xFB, 0x55, 0xFB, 0xBF, 0xFF, 0xA5, 0xFC, 0x04, 0xFE, 0x2F, 0x4E, 0x46, 0x53, 0x4E, 0x52, 0x47, 0x4F, 0x44, 0x46, 0x43, 0x4F, 0x56, 0x4F, 0x4D, 0x55, 0x4C, 0x42, 0x53, 0x44, 0x44, 0x2F, 0x30, 0x49, 0x44, 0x54, 0x4D, 0x4F, 0x53, 0x4C, 0x53, 0x53, 0x54, 0x43, 0x4E, 0x49, 0x4F, 0x46, 0x4D, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x00, 0x20, 0x49, 0x4E, 0x20, 0x00, 0x0D, 0x4F, 0x4B, 0x0D, 0x00, 0x0D, 0x42, 0x52, 0x45, 0x41, 0x4B, 0x00, 0x81, 0x3A, 0x24, 0x0B, 0x81, 0x20, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0x80, 0x30, 0x80, 0xD0, 0x39, 0x30, 0xC6, 0x04, 0x3A, 0xC6, 0x12, 0xDF, 0x89, 0xA6, 0x00, 0x80, 0x80, 0x26, 0x14, 0xEE, 0x01, 0xDF, 0x8B, 0xDE, 0xB5, 0x27, 0x08, 0x9C, 0x8B, 0x27, 0x08, 0x8D, 0x3B, 0x20, 0xE6, 0xDE, 0x8B, 0xDF, 0xB5, 0xDE, 0x89, 0x4D, 0x39, 0x8D, 0x1E, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x9E, 0xBB, 0xDE, 0xBD, 0x08, 0x09, 0xA6, 0x00, 0x36, 0x9C, 0xC1, 0x26, 0xF8, 0x31, 0x9F, 0xBF, 0x9E, 0x91, 0x32, 0x06, 0x39, 0x4F, 0x58, 0xD3, 0x99, 0xC3, 0x00, 0x3A, 0x25, 0x13, 0x9F, 0x91, 0x93, 0x91, 0x24, 0x0D, 0xD3, 0x91, 0x39, 0x4F, 0xDF, 0x89, 0xD3, 0x89, 0xDD, 0x8B, 0xDE, 0x8B, 0x39, 0xC6, 0x0C, 0xBD, 0x42, 0x97, 0xBD, 0x42, 0x9A, 0xBD, 0xFC, 0x86, 0xB6, 0x42, 0x6E, 0x27, 0x03, 0xBD, 0xE3, 0xCF, 0xBD, 0xE3, 0xEE, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0xBD, 0xE7, 0xBC, 0xCE, 0xE1, 0x8A, 0x3A, 0xA6, 0x00, 0xBD, 0xE7, 0xBE, 0xA6, 0x01, 0xBD, 0xE7, 0xBE, 0xCE, 0xE1, 0xAF, 0xBD, 0xE7, 0xA8, 0xDE, 0xE2, 0x08, 0x27, 0x03, 0xBD, 0xF4, 0x12, 0xBD, 0xE7, 0x6A, 0xCE, 0xE1, 0xBC, 0xBD, 0xE7, 0xA8, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xBD, 0xFA, 0xA4, 0x25, 0xF6, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0x27, 0xEF, 0x25, 0x06, 0xBD, 0xE3, 0x11, 0x7E, 0xE5, 0x3D, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0xFF, 0x42, 0xB0, 0xBD, 0xE3, 0x11, 0xD7, 0x82, 0xBD, 0xE3, 0xB9, 0x25, 0x1C, 0xDC, 0xC1, 0xA3, 0x00, 0xD3, 0x95, 0xDD, 0x95, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0xAE, 0x00, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x95, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xB6, 0x42, 0xB2, 0x27, 0x25, 0xDC, 0x95, 0xDD, 0xBD, 0xDB, 0x82, 0x89, 0x00, 0xDD, 0xBB, 0xBD, 0xE1, 0xFE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x8E, 0x42, 0xAD, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBF, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xDE, 0xBB, 0xDF, 0x95, 0xBD, 0xE3, 0xD9, 0x8D, 0x03, 0x7E, 0xE2, 0x7A, 0xDE, 0x93, 0xEC, 0x00, 0x26, 0x01, 0x39, 0x3C, 0xC6, 0x04, 0x3A, 0x08, 0xA6, 0x00, 0x26, 0xFB, 0x08, 0x3C, 0x30, 0xEC, 0x00, 0xEE, 0x02, 0xED, 0x00, 0x38, 0x31, 0x31, 0x20, 0xE4, 0x7F, 0x00, 0x85, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0x42, 0xB1, 0xDF, 0xDE, 0x9F, 0x91, 0x07, 0x97, 0x87, 0x01, 0x0F, 0x9E, 0xF4, 0x33, 0xC1, 0x20, 0x27, 0x38, 0xD7, 0x81, 0xC1, 0x22, 0x27, 0x5B, 0x96, 0x85, 0x26, 0x2E, 0xC1, 0x3F, 0x26, 0x04, 0xC6, 0x86, 0x20, 0x26, 0xC1, 0x30, 0x25, 0x04, 0xC1, 0x3C, 0x25, 0x1E, 0x5D, 0x2B, 0x19, 0xCE, 0xE0, 0x44, 0x9E, 0xF4, 0x5F, 0x08, 0x32, 0x81, 0x20, 0x27, 0xFB, 0xA0, 0x00, 0x27, 0xF6, 0x81, 0x80, 0x26, 0x35, 0xCA, 0x80, 0xDE, 0xDE, 0x8C, 0xC6, 0x21, 0x9F, 0xF4, 0x9E, 0x91, 0x96, 0x87, 0x06, 0x08, 0xDF, 0xDE, 0xE7, 0x00, 0x27, 0x38, 0xC0, 0x3A, 0x27, 0x04, 0xC1, 0x4B, 0x26, 0x02, 0xD7, 0x85, 0xC0, 0x49, 0x26, 0xA3, 0xD7, 0x81, 0x0F, 0x9E, 0xF4, 0x33, 0x5D, 0x27, 0xDB, 0xD1, 0x81, 0x27, 0xD7, 0x08, 0xE7, 0x00, 0x20, 0xF3, 0x9E, 0xF4, 0x5C, 0xA6, 0x00, 0x08, 0x2A, 0xFB, 0xA6, 0x00, 0x26, 0xB2, 0x9F, 0xF4, 0x9E, 0x91, 0xBD, 0x42, 0xA3, 0x9E, 0xF4, 0x33, 0x20, 0xB5, 0xE7, 0x01, 0xE7, 0x02, 0xDC, 0xDE, 0x83, 0x42, 0xAD, 0xCE, 0x42, 0xB1, 0xDF, 0xF4, 0x39, 0xDE, 0x93, 0xEC, 0x00, 0x27, 0x0A, 0xDC, 0xA5, 0xA3, 0x02, 0x23, 0x05, 0xEE, 0x00, 0x20, 0xF2, 0x0D, 0xDF, 0xC1, 0x39, 0x26, 0xFB, 0xDE, 0x93, 0x6F, 0x00, 0x08, 0x6F, 0x00, 0x08, 0xDF, 0x95, 0xDE, 0x93, 0x09, 0xDF, 0xF4, 0xBD, 0x42, 0x8E, 0xDE, 0xA1, 0xDF, 0x9D, 0xBD, 0xE5, 0x60, 0xDE, 0x95, 0xDF, 0x97, 0xDF, 0x99, 0xCE, 0x42, 0x41, 0xFF, 0x42, 0x3D, 0x38, 0x9E, 0x9B, 0x4F, 0x36, 0x97, 0xA7, 0x97, 0xA8, 0x97, 0x86, 0xB7, 0x42, 0x6E, 0x6E, 0x00, 0xC6, 0xFE, 0xD7, 0xE8, 0x7E, 0x00, 0xF3, 0x8D, 0xF7, 0x07, 0x36, 0x8D, 0xF7, 0xBD, 0xE6, 0xB2, 0x8D, 0xA3, 0x32, 0x06, 0x3C, 0x27, 0x16, 0xBD, 0x00, 0xF3, 0x27, 0x16, 0x81, 0xA8, 0x26, 0x0A, 0xBD, 0x00, 0xEB, 0x27, 0x08, 0xBD, 0xE6, 0xB2, 0x27, 0x08, 0x7E, 0xEA, 0x3C, 0xCE, 0xFF, 0xFF, 0xDF, 0xA5, 0x38, 0x31, 0x31, 0xBD, 0xE7, 0x6A, 0xBD, 0xE5, 0x66, 0xEC, 0x00, 0x26, 0x06, 0x7F, 0x00, 0xE8, 0x7E, 0xE2, 0x71, 0xEC, 0x02, 0x93, 0xA5, 0x22, 0xF4, 0xEC, 0x02, 0x3C, 0xBD, 0xF4, 0x19, 0x38, 0x08, 0x08, 0x08, 0x08, 0xDF, 0x89, 0x7F, 0x42, 0x84, 0x86, 0x20, 0x8C, 0x86, 0x21, 0xDE, 0x89, 0x84, 0x7F, 0xBD, 0xE7, 0xBE, 0xA6, 0x00, 0x08, 0x4D, 0x27, 0xC8, 0xF6, 0x42, 0x84, 0x81, 0x22, 0x26, 0x05, 0xC8, 0x01, 0xF7, 0x42, 0x84, 0x81, 0x3A, 0x26, 0x09, 0xC5, 0x01, 0x26, 0x05, 0xC4, 0xFD, 0xF7, 0x42, 0x84, 0x4D, 0x2A, 0xDB, 0x5D, 0x26, 0xD8, 0x81, 0x85, 0x26, 0x02, 0xCA, 0x02, 0x81, 0x83, 0x26, 0x02, 0xCA, 0x04, 0xF7, 0x42, 0x84, 0xBD, 0x42, 0xA6, 0x81, 0xC8, 0x22, 0xBC, 0x8D, 0x0A, 0xA6, 0x00, 0x2B, 0xB8, 0x08, 0xBD, 0xE7, 0xBE, 0x20, 0xF6, 0x80, 0x7F, 0xDF, 0x89, 0xCE, 0xE0, 0x45, 0x4A, 0x26, 0x01, 0x39, 0x6D, 0x00, 0x08, 0x2A, 0xFB, 0x20, 0xF5, 0x86, 0x80, 0x97, 0x86, 0xBD, 0xE6, 0xD3, 0xBD, 0xE1, 0xD8, 0x38, 0x26, 0x04, 0xDE, 0x89, 0x3A, 0x35, 0xC6, 0x09, 0xBD, 0xE2, 0x1A, 0xBD, 0xE6, 0x56, 0x3C, 0xDE, 0xE2, 0x3C, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xE9, 0x0E, 0xBD, 0xE9, 0x0C, 0xD6, 0xCE, 0xCA, 0x7F, 0xD4, 0xCA, 0xD7, 0xCA, 0xCE, 0xE4, 0xFA, 0x7E, 0xE9, 0xA4, 0xCE, 0xF0, 0x8B, 0xBD, 0xF2, 0x51, 0xBD, 0x00, 0xF3, 0x81, 0xA5, 0x26, 0x06, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xF2, 0xAD, 0xBD, 0xE9, 0xA2, 0xDE, 0xB5, 0x3C, 0x86, 0x80, 0x36, 0x8D, 0x4B, 0xDE, 0xF4, 0xDF, 0xA9, 0xA6, 0x00, 0x27, 0x07, 0x81, 0x3A, 0x27, 0x16, 0x7E, 0xEA, 0x3C, 0x08, 0xA6, 0x00, 0x08, 0xAA, 0x00, 0xB7, 0x42, 0x83, 0x27, 0x54, 0x08, 0xEC, 0x00, 0xDD, 0xE2, 0x08, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0x8D, 0x02, 0x20, 0xD5, 0x27, 0x71, 0xBD, 0x42, 0xA0, 0x4D, 0x2B, 0x03, 0x7E, 0xE6, 0xD3, 0x81, 0xA0, 0x22, 0xD4, 0x48, 0x16, 0xCE, 0xE1, 0x48, 0x3A, 0xEE, 0x00, 0xBD, 0x00, 0xEB, 0x6E, 0x00, 0xDE, 0x93, 0x09, 0xDF, 0xAD, 0x39, 0xBD, 0xF8, 0x79, 0x27, 0x0B, 0x81, 0x03, 0x27, 0x0F, 0x81, 0x13, 0x27, 0x04, 0xB7, 0x42, 0x7F, 0x39, 0xBD, 0xF8, 0x83, 0x27, 0xFB, 0x20, 0xED, 0x0D, 0x26, 0x36, 0xDE, 0xF4, 0xDF, 0xA9, 0x76, 0x42, 0x83, 0x38, 0xDE, 0xE2, 0x08, 0x27, 0x07, 0x09, 0xDF, 0xA3, 0xDE, 0xA9, 0xDF, 0xA7, 0x7F, 0x00, 0xE8, 0xCE, 0xE1, 0xC0, 0x7D, 0x42, 0x83, 0x2A, 0x03, 0x7E, 0xE2, 0x66, 0x7E, 0xE2, 0x71, 0x26, 0x0F, 0xC6, 0x20, 0xDE, 0xA7, 0x26, 0x03, 0x7E, 0xE2, 0x38, 0xDF, 0xF4, 0xDE, 0xA3, 0xDF, 0xE2, 0x39, 0x27, 0x3A, 0xBD, 0xEB, 0xBD, 0x37, 0x36, 0xDE, 0xA1, 0xDF, 0xCC, 0xBD, 0x00, 0xF3, 0x27, 0x12, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDE, 0xCC, 0x09, 0xDF, 0xCC, 0xFC, 0x42, 0x50, 0x93, 0xCC, 0x25, 0x1D, 0xDC, 0xCC, 0x37, 0x36, 0x30, 0xA3, 0x02, 0x25, 0x14, 0xED, 0x02, 0x83, 0x00, 0x3A, 0x25, 0x0D, 0x93, 0x95, 0x25, 0x09, 0x38, 0xDF, 0xA1, 0x38, 0xDF, 0x9B, 0x7E, 0xE3, 0xDE, 0x7E, 0xE2, 0x36, 0x26, 0x03, 0x7E, 0xE3, 0xD9, 0xBD, 0xE3, 0xDE, 0x20, 0x0E, 0xC6, 0x03, 0xBD, 0xE2, 0x1A, 0xDE, 0xF4, 0x3C, 0xDE, 0xE2, 0x3C, 0x86, 0x82, 0x36, 0xBD, 0x00, 0xF3, 0x8D, 0x03, 0x7E, 0xE5, 0x19, 0xBD, 0xE6, 0xB2, 0x8D, 0x3A, 0x08, 0xDC, 0xA5, 0x93, 0xE2, 0x22, 0x02, 0xDE, 0x93, 0xBD, 0xE3, 0xBB, 0x25, 0x15, 0x09, 0xDF, 0xF4, 0x39, 0x26, 0xFD, 0x86, 0xFF, 0x97, 0xB5, 0xBD, 0xE1, 0xD8, 0x35, 0x81, 0x02, 0x27, 0x0B, 0xC6, 0x04, 0x8C, 0xC6, 0x0E, 0x7E, 0xE2, 0x38, 0x7E, 0xEA, 0x3C, 0x32, 0x38, 0xDF, 0xE2, 0x38, 0xDF, 0xF4, 0x8D, 0x03, 0xDF, 0xF4, 0x39, 0xC6, 0x3A, 0x86, 0x5F, 0xD7, 0x80, 0x5F, 0xDE, 0xF4, 0x17, 0xD6, 0x80, 0x97, 0x80, 0xA6, 0x00, 0x27, 0xED, 0x11, 0x27, 0xEA, 0x08, 0x81, 0x22, 0x27, 0xEF, 0x20, 0xF2, 0xBD, 0xE9, 0x0C, 0xBD, 0x00, 0xF3, 0x81, 0x81, 0x27, 0x05, 0xC6, 0xA3, 0xBD, 0xEA, 0x31, 0x96, 0xC9, 0x26, 0x05, 0x8D, 0xD2, 0xDF, 0xF4, 0x39, 0xBD, 0x00, 0xF3, 0x25, 0x8B, 0x7E, 0xE5, 0x44, 0xBD, 0xEF, 0x0D, 0x36, 0x81, 0x82, 0x27, 0x04, 0x81, 0x81, 0x26, 0xA9, 0x7A, 0x00, 0xCD, 0x26, 0x04, 0x32, 0x7E, 0xE5, 0x46, 0xBD, 0x00, 0xEB, 0x8D, 0x06, 0x81, 0x2C, 0x27, 0xEE, 0x31, 0x39, 0xCE, 0x00, 0x00, 0xDF, 0xA5, 0x24, 0xF8, 0x80, 0x30, 0x97, 0x80, 0xDC, 0xA5, 0x81, 0x18, 0x22, 0xD9, 0x05, 0x05, 0xD3, 0xA5, 0x05, 0xDB, 0x80, 0x89, 0x00, 0xDD, 0xA5, 0xBD, 0x00, 0xEB, 0x20, 0xE4, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0x96, 0x84, 0x36, 0xBD, 0xE9, 0x1A, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x27, 0x2F, 0xDE, 0xCC, 0xDC, 0x9B, 0xA3, 0x02, 0x24, 0x13, 0xDC, 0x95, 0x93, 0xCC, 0x22, 0x0D, 0xE6, 0x00, 0xBD, 0xEC, 0xFC, 0xDE, 0xC7, 0xBD, 0xEE, 0x38, 0xCE, 0x00, 0xD0, 0xDF, 0xC7, 0xBD, 0xEE, 0x70, 0xDE, 0xC7, 0xA6, 0x00, 0x36, 0xEC, 0x02, 0xDE, 0xB5, 0xED, 0x02, 0x32, 0xA7, 0x00, 0x39, 0x7E, 0xF2, 0x70, 0xBD, 0xE4, 0x04, 0x8D, 0x04, 0x7F, 0x00, 0xE8, 0x39, 0x27, 0x3F, 0x81, 0x40, 0x26, 0x0B, 0xBD, 0xFC, 0x29, 0xBD, 0x00, 0xF3, 0x27, 0x33, 0xBD, 0xEA, 0x2F, 0x27, 0x3B, 0x81, 0xA1, 0x27, 0x50, 0x81, 0x2C, 0x27, 0x34, 0x81, 0x3B, 0x27, 0x5E, 0xBD, 0xE9, 0x1A, 0x96, 0x84, 0x36, 0x26, 0x06, 0xBD, 0xF4, 0x26, 0xBD, 0xED, 0x05, 0x8D, 0x57, 0x33, 0x5D, 0x26, 0x09, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0x15, 0x8D, 0x58, 0xBD, 0x00, 0xF3, 0x26, 0xD2, 0x86, 0x0D, 0x20, 0x54, 0xBD, 0xFA, 0x7B, 0x27, 0xF7, 0x96, 0xE6, 0x26, 0xF3, 0x39, 0xBD, 0xFA, 0x7B, 0x27, 0x0A, 0xD6, 0xE6, 0xD1, 0xE5, 0x25, 0x06, 0x8D, 0xE5, 0x20, 0x1F, 0xD6, 0xE6, 0xD0, 0xE4, 0x24, 0xFC, 0x50, 0x20, 0x11, 0xBD, 0xEF, 0x0A, 0x81, 0x29, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0xBD, 0xFA, 0x7B, 0xD0, 0xE6, 0x23, 0x05, 0x8D, 0x1A, 0x5A, 0x26, 0xFB, 0xBD, 0x00, 0xEB, 0x7E, 0xE7, 0x36, 0xBD, 0xED, 0x06, 0xBD, 0xEE, 0x56, 0x5C, 0x5A, 0x27, 0xC1, 0xA6, 0x00, 0x08, 0x8D, 0x07, 0x20, 0xF6, 0x86, 0x20, 0x8C, 0x86, 0x3F, 0x7E, 0xF9, 0xC6, 0x3F, 0x52, 0x45, 0x44, 0x4F, 0x0D, 0x00, 0x96, 0x87, 0x27, 0x07, 0xDE, 0xAB, 0xDF, 0xE2, 0x7E, 0xEA, 0x3C, 0xCE, 0xE7, 0xC0, 0xBD, 0xE7, 0xA8, 0xDE, 0xA9, 0xDF, 0xF4, 0x39, 0xC6, 0x16, 0xDE, 0xE2, 0x08, 0x26, 0x03, 0x7E, 0xE2, 0x38, 0x81, 0x22, 0x26, 0x0B, 0xBD, 0xEA, 0x07, 0xC6, 0x3B, 0xBD, 0xEA, 0x31, 0xBD, 0xE7, 0xAB, 0x8D, 0x06, 0xC6, 0x2C, 0xE7, 0x00, 0x20, 0x12, 0xBD, 0xE7, 0xBC, 0xBD, 0xE7, 0xB9, 0xBD, 0xFA, 0xA4, 0x24, 0xD3, 0x38, 0x7E, 0xE5, 0x85, 0xDE, 0xAD, 0x86, 0x4F, 0x97, 0x87, 0xDF, 0xAF, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xDE, 0xF4, 0xDF, 0xA5, 0xDE, 0xAF, 0xA6, 0x00, 0x26, 0x09, 0x96, 0x87, 0x26, 0x4E, 0xBD, 0xE7, 0xBC, 0x8D, 0xD1, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0xD6, 0x84, 0x27, 0x1C, 0xDE, 0xF4, 0x97, 0x80, 0x81, 0x22, 0x27, 0x07, 0x09, 0x86, 0x3A, 0x97, 0x80, 0x86, 0x2C, 0x97, 0x81, 0xBD, 0xED, 0x0C, 0xBD, 0xEF, 0x3E, 0xBD, 0xE6, 0xEA, 0x20, 0x06, 0xBD, 0xF3, 0x59, 0xBD, 0xF2, 0x70, 0xBD, 0x00, 0xF3, 0x27, 0x07, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE7, 0xC8, 0xDE, 0xF4, 0xDF, 0xAF, 0xDE, 0xA5, 0xDF, 0xF4, 0xBD, 0x00, 0xF3, 0x27, 0x25, 0xBD, 0xEA, 0x2F, 0x20, 0x9F, 0xDF, 0xF4, 0xBD, 0xE6, 0x56, 0x08, 0x4D, 0x26, 0x0F, 0xC6, 0x06, 0xA6, 0x00, 0xAA, 0x01, 0x27, 0x46, 0xEC, 0x02, 0xDD, 0xAB, 0xC6, 0x04, 0x3A, 0xA6, 0x00, 0x81, 0x85, 0x26, 0xE2, 0x20, 0x97, 0xDE, 0xAF, 0xD6, 0x87, 0x27, 0x03, 0x7E, 0xE5, 0x63, 0xA6, 0x00, 0x27, 0x06, 0xCE, 0xE8, 0xAA, 0x7E, 0xE7, 0xA8, 0x39, 0x3F, 0x45, 0x58, 0x54, 0x52, 0x41, 0x20, 0x49, 0x47, 0x4E, 0x4F, 0x52, 0x45, 0x44, 0x0D, 0x00, 0x26, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x03, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE1, 0xD8, 0x27, 0x04, 0xC6, 0x00, 0x20, 0x47, 0x35, 0x08, 0x08, 0x08, 0xBD, 0xF2, 0x51, 0x30, 0xA6, 0x08, 0x97, 0xCE, 0xDE, 0xB5, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x70, 0x30, 0xC6, 0x09, 0x3A, 0xBD, 0xF2, 0xD9, 0x30, 0xE0, 0x08, 0x27, 0x0C, 0xEE, 0x0E, 0xDF, 0xE2, 0x30, 0xEE, 0x10, 0xDF, 0xF4, 0x7E, 0xE5, 0x19, 0xC6, 0x12, 0x3A, 0x35, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x26, 0xF2, 0xBD, 0x00, 0xEB, 0x8D, 0xB6, 0x8D, 0x0C, 0x6D, 0x0D, 0x76, 0x00, 0x84, 0x28, 0x95, 0xC6, 0x18, 0x7E, 0xE2, 0x38, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0x4F, 0xC6, 0x37, 0x36, 0xC6, 0x01, 0xBD, 0xE2, 0x1A, 0xBD, 0xE9, 0xE5, 0x7F, 0x00, 0xB9, 0xBD, 0x00, 0xF3, 0x80, 0xAE, 0x25, 0x14, 0x81, 0x03, 0x24, 0x10, 0x81, 0x01, 0x49, 0x98, 0xB9, 0x91, 0xB9, 0x25, 0x59, 0x97, 0xB9, 0xBD, 0x00, 0xEB, 0x20, 0xE8, 0xD6, 0xB9, 0x26, 0x2B, 0x24, 0x66, 0x8B, 0x07, 0x24, 0x62, 0x99, 0x84, 0x26, 0x03, 0x7E, 0xEE, 0x06, 0x89, 0xFF, 0x16, 0x48, 0x1B, 0x16, 0xCE, 0xE0, 0x30, 0x3A, 0x32, 0xA1, 0x00, 0x24, 0x53, 0x8D, 0xA3, 0x36, 0x8D, 0x23, 0xDE, 0xB7, 0x32, 0x26, 0x18, 0x4D, 0x27, 0x6C, 0x20, 0x4D, 0x78, 0x00, 0x84, 0x59, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0xE9, 0x88, 0xD7, 0xB9, 0x20, 0xDC, 0x64, 0xEA, 0xAE, 0xA1, 0x00, 0x24, 0x36, 0x20, 0xDA, 0xEC, 0x01, 0x37, 0x36, 0x8D, 0x07, 0xD6, 0xB9, 0x20, 0x86, 0x7E, 0xEA, 0x3C, 0xD6, 0xCE, 0xA6, 0x00, 0x38, 0x37, 0xD6, 0xCD, 0x37, 0xD6, 0xCC, 0x37, 0xD6, 0xCB, 0x37, 0xD6, 0xCA, 0x37, 0xD6, 0xC9, 0x37, 0x6E, 0x00, 0xCE, 0x00, 0x00, 0x32, 0x4D, 0x27, 0x26, 0x81, 0x64, 0x27, 0x03, 0xBD, 0xE9, 0x0E, 0xDF, 0xB7, 0x33, 0x81, 0x5A, 0x27, 0x1A, 0x81, 0x7D, 0x27, 0x16, 0x54, 0xD7, 0x88, 0x32, 0x33, 0xDD, 0xD6, 0x38, 0xDF, 0xD8, 0x33, 0xD7, 0xDA, 0x33, 0xD7, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xD6, 0xC9, 0x39, 0xBD, 0x42, 0x94, 0x7F, 0x00, 0x84, 0x8D, 0x4C, 0x24, 0x03, 0x7E, 0xF3, 0x59, 0xBD, 0xEB, 0x76, 0x24, 0x52, 0x81, 0x2E, 0x27, 0xF4, 0x81, 0xA8, 0x27, 0x42, 0x81, 0xA7, 0x27, 0xE2, 0x81, 0x22, 0x26, 0x08, 0xDE, 0xF4, 0xBD, 0xED, 0x06, 0x7E, 0xEF, 0x3E, 0x81, 0xA4, 0x26, 0x0D, 0x86, 0x5A, 0xBD, 0xE9, 0x21, 0xBD, 0xEB, 0xC7, 0x43, 0x53, 0x7E, 0xEC, 0xE3, 0x80, 0xB1, 0x24, 0x31, 0x8D, 0x06, 0xBD, 0xE9, 0x1A, 0xC6, 0x29, 0x8C, 0xC6, 0x28, 0x8C, 0xC6, 0x2C, 0x3C, 0xDE, 0xF4, 0xE1, 0x00, 0x38, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0xC6, 0x02, 0x7E, 0xE2, 0x38, 0x86, 0x7D, 0xBD, 0xE9, 0x21, 0x7E, 0xF5, 0x93, 0xBD, 0xEB, 0x1B, 0xDF, 0xCC, 0x96, 0x84, 0x26, 0x92, 0x7E, 0xF2, 0x51, 0x16, 0x58, 0x8D, 0xE0, 0x37, 0xC1, 0x22, 0x25, 0x21, 0xC1, 0x2C, 0x24, 0x1F, 0x8D, 0xC8, 0x33, 0xC1, 0x28, 0x24, 0x19, 0x37, 0xBD, 0xE9, 0x1A, 0x8D, 0xC0, 0xBD, 0xE9, 0x0F, 0x32, 0xDE, 0xCC, 0x3C, 0x36, 0xBD, 0xEF, 0x0D, 0x32, 0x37, 0x16, 0x20, 0x03, 0x8D, 0xA3, 0x33, 0xCE, 0xE0, 0x00, 0x3A, 0xEE, 0x00, 0xAD, 0x00, 0x7E, 0xE9, 0x0E, 0x86, 0x4F, 0x97, 0x82, 0xBD, 0xEB, 0xC7, 0xDD, 0x80, 0xBD, 0xF2, 0x8B, 0xBD, 0xEB, 0xC7, 0x7D, 0x00, 0x82, 0x26, 0x06, 0x94, 0x80, 0xD4, 0x81, 0x20, 0x04, 0x9A, 0x80, 0xDA, 0x81, 0x7E, 0xEC, 0xE3, 0xBD, 0xE9, 0x10, 0x26, 0x10, 0x96, 0xDB, 0x8A, 0x7F, 0x94, 0xD7, 0x97, 0xD7, 0xCE, 0x00, 0xD6, 0xBD, 0xF2, 0xD9, 0x20, 0x40, 0x7F, 0x00, 0x84, 0x7A, 0x00, 0xB9, 0xBD, 0xEE, 0x56, 0xD7, 0xD0, 0xDF, 0xD2, 0xDE, 0xD9, 0xBD, 0xEE, 0x58, 0x96, 0xD0, 0x10, 0x27, 0x07, 0x86, 0x01, 0x24, 0x03, 0xD6, 0xD0, 0x40, 0x97, 0xCE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0xD2, 0x5C, 0x09, 0x5A, 0x26, 0x04, 0xD6, 0xCE, 0x20, 0x0B, 0x32, 0x08, 0xA1, 0x00, 0x27, 0xF3, 0xC6, 0xFF, 0x24, 0x01, 0x50, 0x9E, 0x91, 0x32, 0x06, 0xCB, 0x01, 0x59, 0xD4, 0x88, 0x27, 0x02, 0xC6, 0xFF, 0x7E, 0xF2, 0xBC, 0xBD, 0xEA, 0x2F, 0x16, 0x8D, 0x0A, 0xBD, 0x00, 0xF3, 0x26, 0xF5, 0x39, 0x5F, 0xBD, 0x00, 0xF3, 0xD7, 0x83, 0x97, 0xB1, 0xBD, 0x00, 0xF3, 0x8D, 0x4E, 0x24, 0x03, 0x7E, 0xEA, 0x3C, 0x5F, 0xD7, 0x84, 0xBD, 0x00, 0xEB, 0x25, 0x04, 0x8D, 0x3F, 0x25, 0x0A, 0x16, 0xBD, 0x00, 0xEB, 0x25, 0xFB, 0x8D, 0x35, 0x24, 0xF7, 0x81, 0x24, 0x26, 0x08, 0x73, 0x00, 0x84, 0xCB, 0x80, 0xBD, 0x00, 0xEB, 0xD7, 0xB2, 0xD6, 0x86, 0x5A, 0x26, 0x03, 0x7E, 0xEC, 0x07, 0x9B, 0x86, 0x80, 0x28, 0x26, 0x03, 0x7E, 0xEB, 0xDE, 0x7F, 0x00, 0x86, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x14, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x3F, 0xC6, 0x07, 0x3A, 0x20, 0xF1, 0x81, 0x41, 0x25, 0x04, 0x80, 0x5B, 0x80, 0xA5, 0x39, 0x38, 0x3C, 0x8C, 0xEA, 0x4C, 0x26, 0x04, 0xCE, 0xEB, 0xB7, 0x39, 0xDC, 0x99, 0xDD, 0xBD, 0xC3, 0x00, 0x07, 0xDD, 0xBB, 0xDE, 0x97, 0xDF, 0xC1, 0xBD, 0xE1, 0xFE, 0xDE, 0xBB, 0xDF, 0x99, 0xDE, 0xBF, 0xDF, 0x97, 0xDE, 0xC1, 0xDC, 0xB1, 0xED, 0x00, 0x4F, 0x5F, 0xED, 0x02, 0xED, 0x04, 0xA7, 0x06, 0x08, 0x08, 0xDF, 0xB3, 0x39, 0x90, 0x80, 0x00, 0x00, 0x00, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xE9, 0x0E, 0x96, 0xCE, 0x2B, 0x67, 0xBD, 0xE9, 0x0E, 0x96, 0xC9, 0x81, 0x90, 0x25, 0x08, 0xCE, 0xEB, 0xB5, 0xBD, 0xF2, 0xD9, 0x26, 0x56, 0xBD, 0xF3, 0x0B, 0xDC, 0xCC, 0x39, 0xDE, 0x83, 0x3C, 0x5F, 0x37, 0xDE, 0xB1, 0x3C, 0x8D, 0xD2, 0x38, 0xDF, 0xB1, 0x33, 0x5C, 0xD7, 0x82, 0x32, 0x33, 0xDE, 0xCC, 0x3C, 0x37, 0x36, 0xD6, 0x82, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0xE3, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0x83, 0xC6, 0xFF, 0x37, 0xDE, 0x97, 0x9C, 0x99, 0x27, 0x25, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x07, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0x20, 0xEF, 0xC6, 0x12, 0x32, 0x4D, 0x27, 0xBC, 0x96, 0x83, 0x26, 0x0B, 0xD6, 0x82, 0xE1, 0x04, 0x27, 0x5C, 0xC6, 0x10, 0x8C, 0xC6, 0x08, 0x7E, 0xE2, 0x38, 0x32, 0x4D, 0x27, 0xF7, 0xCC, 0x00, 0x05, 0xDD, 0xDE, 0xDC, 0xB1, 0xED, 0x00, 0xD6, 0x82, 0xE7, 0x04, 0xBD, 0xE2, 0x1A, 0xDF, 0xBB, 0xC6, 0x0B, 0x4F, 0x7D, 0x00, 0x83, 0x27, 0x05, 0x32, 0x33, 0xC3, 0x00, 0x01, 0xED, 0x05, 0x8D, 0x5F, 0xDD, 0xDE, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE6, 0xBD, 0xE2, 0x2D, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xBD, 0xE2, 0x1E, 0x83, 0x00, 0x35, 0xDD, 0x99, 0x4F, 0x09, 0xA7, 0x05, 0x9C, 0x89, 0x26, 0xF9, 0xDE, 0xBB, 0x96, 0x99, 0x93, 0xBB, 0xED, 0x02, 0x96, 0x83, 0x26, 0x31, 0xE6, 0x04, 0xD7, 0x82, 0x4F, 0x5F, 0xDD, 0xDE, 0x32, 0x33, 0xDD, 0xCC, 0x37, 0x36, 0xA3, 0x05, 0x24, 0x3F, 0xDC, 0xDE, 0x32, 0x33, 0x27, 0x04, 0x8D, 0x18, 0xD3, 0xCC, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE3, 0xDD, 0x89, 0x05, 0x05, 0xD3, 0x89, 0xC3, 0x00, 0x05, 0xBD, 0xE2, 0x2D, 0xDF, 0xB3, 0x39, 0x86, 0x10, 0x97, 0xBF, 0xEC, 0x05, 0xDD, 0x91, 0x4F, 0x5F, 0x05, 0x25, 0x12, 0x78, 0x00, 0xDF, 0x79, 0x00, 0xDE, 0x24, 0x04, 0xD3, 0x91, 0x25, 0x06, 0x7A, 0x00, 0xBF, 0x26, 0xEC, 0x39, 0x7E, 0xEC, 0x2B, 0x9F, 0x91, 0xDC, 0x91, 0x93, 0x99, 0x21, 0x4F, 0x7F, 0x00, 0x84, 0xDD, 0xCA, 0xC6, 0x90, 0x7E, 0xF2, 0xC3, 0xBD, 0xE9, 0x0E, 0xCE, 0x43, 0x34, 0xBD, 0xF4, 0x29, 0x38, 0xCE, 0x43, 0x33, 0x20, 0x0A, 0xDF, 0xC7, 0x8D, 0x5F, 0xDF, 0xD2, 0xD7, 0xD0, 0x39, 0x09, 0x86, 0x22, 0x97, 0x80, 0x97, 0x81, 0x08, 0xDF, 0xDC, 0xDF, 0xD2, 0xC6, 0xFF, 0x5C, 0xA6, 0x00, 0x27, 0x0E, 0x08, 0x91, 0x80, 0x27, 0x04, 0x91, 0x81, 0x26, 0xF2, 0x81, 0x22, 0x27, 0x01, 0x09, 0xDF, 0xDE, 0xD7, 0xD0, 0x37, 0xDC, 0xDC, 0x83, 0x43, 0x34, 0x33, 0x22, 0x07, 0x8D, 0xC7, 0xDE, 0xDC, 0xBD, 0xEE, 0x3A, 0xFE, 0x42, 0x3D, 0x8C, 0x42, 0x50, 0x26, 0x05, 0xC6, 0x1E, 0x7E, 0xE2, 0x38, 0x96, 0xD0, 0xA7, 0x00, 0xDC, 0xD2, 0xED, 0x02, 0x86, 0xFF, 0x97, 0x84, 0xFF, 0x42, 0x3F, 0xDF, 0xCC, 0xC6, 0x05, 0x3A, 0xFF, 0x42, 0x3D, 0x39, 0x7F, 0x00, 0x85, 0x37, 0x4F, 0xDD, 0x89, 0xDC, 0x9D, 0x93, 0x89, 0x93, 0x9B, 0x25, 0x0B, 0xD3, 0x9B, 0xDD, 0x9D, 0xDE, 0x9D, 0x08, 0xDF, 0x9F, 0x33, 0x39, 0xC6, 0x1A, 0x73, 0x00, 0x85, 0x27, 0xC4, 0x8D, 0x03, 0x33, 0x20, 0xDD, 0xDE, 0xA1, 0xDF, 0x9D, 0x4F, 0x5F, 0xDD, 0xC5, 0xDE, 0x9B, 0xDF, 0xC1, 0xCE, 0x42, 0x41, 0xBC, 0x42, 0x3D, 0x27, 0x04, 0x8D, 0x32, 0x20, 0xF7, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x04, 0x8D, 0x22, 0x20, 0xF8, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x27, 0x38, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x27, 0xE8, 0x8D, 0x08, 0x20, 0xF8, 0xA6, 0x01, 0x08, 0x08, 0x2A, 0x16, 0xE6, 0x00, 0x27, 0x12, 0xEC, 0x02, 0x93, 0x9D, 0x22, 0x0C, 0xEC, 0x02, 0x93, 0xC1, 0x23, 0x06, 0xDF, 0xC5, 0xEC, 0x02, 0xDD, 0xC1, 0xC6, 0x05, 0x3A, 0x39, 0xDE, 0xC5, 0x27, 0xFB, 0x4F, 0xE6, 0x00, 0x5A, 0xD3, 0xC1, 0xDD, 0xBD, 0xDE, 0x9D, 0xDF, 0xBB, 0xBD, 0xE2, 0x00, 0xDE, 0xC5, 0xDC, 0xBF, 0xED, 0x02, 0xDE, 0xBF, 0x09, 0x7E, 0xED, 0x87, 0xDE, 0xCC, 0x3C, 0xBD, 0xE9, 0xE5, 0xBD, 0xE9, 0x0F, 0x38, 0xDF, 0xDC, 0xE6, 0x00, 0xDE, 0xCC, 0xEB, 0x00, 0x24, 0x05, 0xC6, 0x1C, 0x7E, 0xE2, 0x38, 0xBD, 0xEC, 0xFC, 0xDE, 0xDC, 0xE6, 0x00, 0x8D, 0x10, 0xDE, 0xC7, 0x8D, 0x2C, 0x8D, 0x0C, 0xDE, 0xDC, 0x8D, 0x26, 0xBD, 0xED, 0x3A, 0x7E, 0xE9, 0x2E, 0xEE, 0x02, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0x9F, 0x5C, 0x20, 0x04, 0x32, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xF9, 0xDF, 0x9F, 0x9E, 0x91, 0x32, 0x06, 0x39, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xE6, 0x00, 0x8D, 0x14, 0x26, 0x0F, 0xEE, 0x07, 0x09, 0x9C, 0x9D, 0x26, 0x06, 0x37, 0xD3, 0x9D, 0xDD, 0x9D, 0x33, 0x08, 0x39, 0xEE, 0x02, 0x39, 0xBC, 0x42, 0x3F, 0x26, 0x0C, 0xFF, 0x42, 0x3D, 0x09, 0x09, 0x09, 0x09, 0x09, 0xFF, 0x42, 0x3F, 0x4F, 0x39, 0x8D, 0x03, 0x7E, 0xEC, 0xE2, 0x8D, 0xCA, 0x7F, 0x00, 0x84, 0x5D, 0x39, 0xBD, 0xEF, 0x10, 0xC6, 0x01, 0xBD, 0xED, 0x5F, 0x96, 0xCD, 0xBD, 0xED, 0x00, 0xA7, 0x00, 0x31, 0x31, 0x7E, 0xED, 0x3A, 0x8D, 0x02, 0x20, 0xDE, 0x8D, 0xDF, 0x27, 0x5D, 0xE6, 0x00, 0x39, 0x8D, 0x43, 0x4F, 0xE1, 0x00, 0x23, 0x03, 0xE6, 0x00, 0x4F, 0x37, 0x36, 0xBD, 0xEC, 0xFE, 0xDE, 0xC7, 0x8D, 0x98, 0x33, 0x3A, 0x33, 0xBD, 0xEE, 0x3A, 0x20, 0xD7, 0x8D, 0x28, 0xA6, 0x00, 0x10, 0x20, 0xE1, 0xC6, 0xFF, 0xD7, 0xCD, 0x8D, 0x44, 0x81, 0x29, 0x27, 0x03, 0xBD, 0xEF, 0x47, 0x8D, 0x14, 0x27, 0x27, 0x5F, 0x4A, 0xA1, 0x00, 0x24, 0xD1, 0x16, 0xE0, 0x00, 0x50, 0xD1, 0xCD, 0x23, 0xC9, 0xD6, 0xCD, 0x20, 0xC5, 0xBD, 0xEA, 0x29, 0x30, 0xEC, 0x05, 0xDD, 0xC7, 0xEC, 0x00, 0xED, 0x05, 0x31, 0x31, 0x31, 0x31, 0x32, 0xDE, 0xC7, 0x16, 0x39, 0x7E, 0xEC, 0x2E, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC0, 0x96, 0xCC, 0x26, 0xF0, 0xD6, 0xCD, 0x7E, 0x00, 0xF3, 0xBD, 0xEE, 0x87, 0x26, 0x03, 0x7E, 0xEF, 0xF4, 0xBD, 0xE2, 0x2C, 0xA6, 0x00, 0x36, 0x6F, 0x00, 0xDE, 0xF4, 0xDF, 0xDE, 0xDE, 0x89, 0xDF, 0xF4, 0x8D, 0xE3, 0xBD, 0xF3, 0x59, 0x32, 0xDE, 0x8B, 0xA7, 0x00, 0xDE, 0xDE, 0xDF, 0xF4, 0x39, 0x8D, 0x07, 0xDF, 0xA5, 0xBD, 0xEA, 0x2F, 0x20, 0xC1, 0xBD, 0xE9, 0x0C, 0x96, 0xCE, 0x2B, 0xB4, 0x96, 0xC9, 0x81, 0x90, 0x22, 0xAE, 0xBD, 0xF3, 0x0B, 0xDE, 0xCC, 0x39, 0x8D, 0xEE, 0xE6, 0x00, 0x7E, 0xEC, 0xE2, 0x8D, 0xDB, 0xDE, 0xA5, 0xE7, 0x00, 0x39, 0xCE, 0xF5, 0x24, 0x20, 0x0B, 0xBD, 0xF1, 0x60, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xDC, 0x20, 0x03, 0xBD, 0xF1, 0x60, 0x5D, 0x26, 0x03, 0x7E, 0xF2, 0x8B, 0xCE, 0x00, 0xD6, 0x16, 0x27, 0x6D, 0xD0, 0xC9, 0x27, 0x6A, 0x2B, 0x0A, 0x97, 0xC9, 0x96, 0xDB, 0x97, 0xCE, 0xCE, 0x00, 0xC9, 0x50, 0xC1, 0xF8, 0x2F, 0x5A, 0x4F, 0x64, 0x01, 0xBD, 0xF0, 0x80, 0xD6, 0xDC, 0x2A, 0x0B, 0x63, 0x01, 0x63, 0x02, 0x63, 0x03, 0x63, 0x04, 0x43, 0x89, 0x00, 0x97, 0xDD, 0x96, 0xCD, 0x99, 0xDA, 0x97, 0xCD, 0x96, 0xCC, 0x99, 0xD9, 0x97, 0xCC, 0x96, 0xCB, 0x99, 0xD8, 0x97, 0xCB, 0x96, 0xCA, 0x99, 0xD7, 0x97, 0xCA, 0x17, 0x2A, 0x47, 0x25, 0x02, 0x8D, 0x66, 0x5F, 0x96, 0xCA, 0x26, 0x34, 0x96, 0xCB, 0x97, 0xCA, 0x96, 0xCC, 0x97, 0xCB, 0x96, 0xCD, 0x97, 0xCC, 0x96, 0xDD, 0x97, 0xCD, 0x7F, 0x00, 0xDD, 0xCB, 0x08, 0xC1, 0x28, 0x2D, 0xE3, 0x4F, 0x97, 0xC9, 0x97, 0xCE, 0x39, 0x8D, 0x78, 0x0C, 0x20, 0xA7, 0x5C, 0x78, 0x00, 0xDD, 0x79, 0x00, 0xCD, 0x79, 0x00, 0xCC, 0x79, 0x00, 0xCB, 0x79, 0x00, 0xCA, 0x2A, 0xEE, 0x96, 0xC9, 0x10, 0x97, 0xC9, 0x23, 0xDC, 0x8C, 0x25, 0x09, 0x78, 0x00, 0xDD, 0x86, 0x00, 0x97, 0xDD, 0x20, 0x11, 0x7C, 0x00, 0xC9, 0x27, 0x2F, 0x76, 0x00, 0xCA, 0x76, 0x00, 0xCB, 0x76, 0x00, 0xCC, 0x76, 0x00, 0xCD, 0x24, 0x04, 0x8D, 0x12, 0x27, 0xE9, 0x39, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xCA, 0x73, 0x00, 0xCB, 0x73, 0x00, 0xCC, 0x73, 0x00, 0xCD, 0xDE, 0xCC, 0x08, 0xDF, 0xCC, 0x26, 0x05, 0xDE, 0xCA, 0x08, 0xDF, 0xCA, 0x39, 0xC6, 0x0A, 0x7E, 0xE2, 0x38, 0xCE, 0x00, 0x8C, 0xA6, 0x04, 0x97, 0xDD, 0xA6, 0x03, 0xA7, 0x04, 0xA6, 0x02, 0xA7, 0x03, 0xA6, 0x01, 0xA7, 0x02, 0x96, 0xD5, 0xA7, 0x01, 0xCB, 0x08, 0x2F, 0xE8, 0x96, 0xDD, 0xC0, 0x08, 0x27, 0x0C, 0x67, 0x01, 0x66, 0x02, 0x66, 0x03, 0x66, 0x04, 0x46, 0x5C, 0x26, 0xF4, 0x39, 0x81, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7F, 0x5E, 0x56, 0xCB, 0x79, 0x80, 0x13, 0x9B, 0x0B, 0x64, 0x80, 0x76, 0x38, 0x93, 0x16, 0x82, 0x38, 0xAA, 0x3B, 0x20, 0x80, 0x35, 0x04, 0xF3, 0x34, 0x81, 0x35, 0x04, 0xF3, 0x34, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x31, 0x72, 0x17, 0xF8, 0xBD, 0xF2, 0xAD, 0x2E, 0x03, 0x7E, 0xEC, 0x2E, 0xCE, 0xF0, 0xA5, 0x96, 0xC9, 0x80, 0x80, 0x36, 0x86, 0x80, 0x97, 0xC9, 0xBD, 0xEF, 0x7D, 0xCE, 0xF0, 0xAA, 0xBD, 0xF1, 0xC6, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x72, 0xCE, 0xF0, 0x90, 0xBD, 0xF5, 0xF8, 0xCE, 0xF0, 0xAF, 0xBD, 0xEF, 0x7D, 0x33, 0xBD, 0xF3, 0xE9, 0xCE, 0xF0, 0xB4, 0x8D, 0x6F, 0x27, 0x6C, 0xBD, 0xF1, 0x79, 0x86, 0x00, 0x97, 0x8D, 0x97, 0x8E, 0x97, 0x8F, 0x97, 0x90, 0xD6, 0xCD, 0x8D, 0x26, 0xD6, 0xDD, 0xF7, 0x42, 0x55, 0xD6, 0xCC, 0x8D, 0x1D, 0xD6, 0xDD, 0xF7, 0x42, 0x54, 0xD6, 0xCB, 0x8D, 0x14, 0xD6, 0xDD, 0xF7, 0x42, 0x53, 0xD6, 0xCA, 0x8D, 0x10, 0xD6, 0xDD, 0xF7, 0x42, 0x52, 0xBD, 0xF2, 0x48, 0x7E, 0xEF, 0xD6, 0x26, 0x03, 0x7E, 0xF0, 0x5D, 0x0D, 0x96, 0x8D, 0x56, 0x27, 0x2A, 0x24, 0x16, 0x96, 0x90, 0x9B, 0xDA, 0x97, 0x90, 0x96, 0x8F, 0x99, 0xD9, 0x97, 0x8F, 0x96, 0x8E, 0x99, 0xD8, 0x97, 0x8E, 0x96, 0x8D, 0x99, 0xD7, 0x46, 0x97, 0x8D, 0x76, 0x00, 0x8E, 0x76, 0x00, 0x8F, 0x76, 0x00, 0x90, 0x76, 0x00, 0xDD, 0x0C, 0x20, 0xD1, 0x39, 0xEC, 0x01, 0x97, 0xDB, 0x8A, 0x80, 0xDD, 0xD7, 0xD6, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xEC, 0x03, 0xDD, 0xD9, 0xA6, 0x00, 0x97, 0xD6, 0xD6, 0xC9, 0x39, 0x4D, 0x27, 0x19, 0x9B, 0xC9, 0x46, 0x49, 0x28, 0x13, 0x8B, 0x80, 0x97, 0xC9, 0x26, 0x03, 0x7E, 0xEF, 0xF7, 0x96, 0xDC, 0x97, 0xCE, 0x39, 0x96, 0xCE, 0x43, 0x20, 0x02, 0x32, 0x32, 0x2B, 0x03, 0x7E, 0xEF, 0xF4, 0x7E, 0xF0, 0x58, 0xBD, 0xF2, 0x9F, 0x27, 0x0F, 0x8B, 0x02, 0x25, 0xF4, 0x7F, 0x00, 0xDC, 0xBD, 0xEF, 0x89, 0x7C, 0x00, 0xC9, 0x27, 0xE9, 0x39, 0x84, 0x20, 0x00, 0x00, 0x00, 0xBD, 0xF2, 0x9F, 0xCE, 0xF1, 0xB4, 0x5F, 0xD7, 0xDC, 0xBD, 0xF2, 0x51, 0x8C, 0x8D, 0x98, 0x27, 0x79, 0x70, 0x00, 0xC9, 0x8D, 0xAA, 0x7C, 0x00, 0xC9, 0x27, 0xC8, 0xCE, 0x00, 0x8D, 0xC6, 0x04, 0xD7, 0x82, 0xC6, 0x01, 0x96, 0xCA, 0x91, 0xD7, 0x26, 0x13, 0x96, 0xCB, 0x91, 0xD8, 0x26, 0x0D, 0x96, 0xCC, 0x91, 0xD9, 0x26, 0x07, 0x96, 0xCD, 0x91, 0xDA, 0x26, 0x01, 0x0D, 0x07, 0x59, 0x24, 0x0C, 0xE7, 0x00, 0x08, 0x7A, 0x00, 0x82, 0x2B, 0x37, 0x27, 0x31, 0xC6, 0x01, 0x06, 0x25, 0x12, 0x78, 0x00, 0xDA, 0x79, 0x00, 0xD9, 0x79, 0x00, 0xD8, 0x79, 0x00, 0xD7, 0x25, 0xDF, 0x2B, 0xC4, 0x20, 0xDB, 0x96, 0xDA, 0x90, 0xCD, 0x97, 0xDA, 0x96, 0xD9, 0x92, 0xCC, 0x97, 0xD9, 0x96, 0xD8, 0x92, 0xCB, 0x97, 0xD8, 0x96, 0xD7, 0x92, 0xCA, 0x97, 0xD7, 0x20, 0xD4, 0xC6, 0x40, 0x20, 0xCD, 0x56, 0x56, 0x56, 0xD7, 0xDD, 0x8D, 0x08, 0x7E, 0xEF, 0xD6, 0xC6, 0x14, 0x7E, 0xE2, 0x38, 0xDE, 0x8D, 0xDF, 0xCA, 0xDE, 0x8F, 0xDF, 0xCC, 0x39, 0x36, 0xEC, 0x01, 0x97, 0xCE, 0x8A, 0x80, 0xDD, 0xCA, 0x7F, 0x00, 0xDD, 0xE6, 0x00, 0xEE, 0x03, 0xDF, 0xCC, 0xD7, 0xC9, 0x32, 0x39, 0xCE, 0x00, 0xBF, 0x20, 0x06, 0xCE, 0x00, 0xBA, 0x8C, 0xDE, 0xB5, 0x96, 0xC9, 0xA7, 0x00, 0x96, 0xCE, 0x8A, 0x7F, 0x94, 0xCA, 0xA7, 0x01, 0x96, 0xCB, 0xA7, 0x02, 0x96, 0xCC, 0xA7, 0x03, 0x96, 0xCD, 0xA7, 0x04, 0x39, 0x96, 0xDB, 0x97, 0xCE, 0xDE, 0xD6, 0xDF, 0xC9, 0x7F, 0x00, 0xDD, 0xDE, 0xD8, 0xDF, 0xCB, 0xDE, 0xD9, 0xDF, 0xCC, 0x39, 0xDC, 0xC9, 0xDD, 0xD6, 0xDE, 0xCB, 0xDF, 0xD8, 0xDE, 0xCD, 0xDF, 0xDA, 0x4D, 0x39, 0xD6, 0xC9, 0x27, 0x08, 0xD6, 0xCE, 0x59, 0xC6, 0xFF, 0x25, 0x01, 0x50, 0x39, 0x8D, 0xF1, 0xD7, 0xCA, 0x7F, 0x00, 0xCB, 0xC6, 0x88, 0x96, 0xCA, 0x80, 0x80, 0xD7, 0xC9, 0x86, 0x00, 0x16, 0xDD, 0xCC, 0x97, 0xDD, 0x97, 0xCE, 0x7E, 0xEF, 0xD2, 0x7F, 0x00, 0xCE, 0x39, 0xE6, 0x00, 0x27, 0xD0, 0xE6, 0x01, 0xD8, 0xCE, 0x2B, 0xCE, 0xD6, 0xC9, 0xE1, 0x00, 0x26, 0x1D, 0xE6, 0x01, 0xCA, 0x7F, 0xD4, 0xCA, 0xE1, 0x01, 0x26, 0x13, 0xD6, 0xCB, 0xE1, 0x02, 0x26, 0x0D, 0xD6, 0xCC, 0xE1, 0x03, 0x26, 0x07, 0xD6, 0xCD, 0xE0, 0x04, 0x26, 0x01, 0x39, 0x56, 0xD8, 0xCE, 0x20, 0xA8, 0xD6, 0xC9, 0x27, 0x41, 0xC0, 0xA0, 0x96, 0xCE, 0x2A, 0x06, 0x73, 0x00, 0xD5, 0xBD, 0xF0, 0x3F, 0xCE, 0x00, 0xC9, 0xC1, 0xF8, 0x2E, 0x07, 0xBD, 0xF0, 0x74, 0x7F, 0x00, 0xD5, 0x39, 0x7F, 0x00, 0xD5, 0x96, 0xCE, 0x49, 0x76, 0x00, 0xCA, 0x7E, 0xF0, 0x80, 0xD6, 0xC9, 0xC1, 0xA0, 0x24, 0x1D, 0x8D, 0xCE, 0xD7, 0xDD, 0x96, 0xCE, 0xD7, 0xCE, 0x80, 0x80, 0x86, 0xA0, 0x97, 0xC9, 0x96, 0xCD, 0x97, 0x80, 0x7E, 0xEF, 0xD2, 0xD7, 0xCA, 0xD7, 0xCB, 0xD7, 0xCC, 0xD7, 0xCD, 0x39, 0xBD, 0x42, 0x9D, 0xCE, 0x00, 0x00, 0xDF, 0xCE, 0xDF, 0xC9, 0xDF, 0xCB, 0xDF, 0xCC, 0xDF, 0xC1, 0xDF, 0xBF, 0x25, 0x6B, 0x81, 0x2D, 0x26, 0x05, 0x73, 0x00, 0xCF, 0x20, 0x04, 0x81, 0x2B, 0x26, 0x05, 0xBD, 0x00, 0xEB, 0x25, 0x59, 0x81, 0x2E, 0x27, 0x2D, 0x81, 0x45, 0x26, 0x2E, 0xBD, 0x00, 0xEB, 0x25, 0x69, 0x81, 0xA8, 0x27, 0x0E, 0x81, 0x2D, 0x27, 0x0A, 0x81, 0xA7, 0x27, 0x09, 0x81, 0x2B, 0x27, 0x05, 0x20, 0x08, 0x73, 0x00, 0xC2, 0xBD, 0x00, 0xEB, 0x25, 0x4F, 0x7D, 0x00, 0xC2, 0x27, 0x0A, 0x70, 0x00, 0xC1, 0x20, 0x05, 0x73, 0x00, 0xC0, 0x26, 0xC5, 0x96, 0xC1, 0x90, 0xBF, 0x97, 0xC1, 0x27, 0x14, 0x2A, 0x0A, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xC1, 0x26, 0xF8, 0x20, 0x08, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xC1, 0x26, 0xF8, 0x96, 0xCF, 0x2A, 0x83, 0x7E, 0xF5, 0x93, 0xD6, 0xBF, 0xD0, 0xC0, 0xD7, 0xBF, 0x36, 0xBD, 0xF1, 0x9F, 0x33, 0xC0, 0x30, 0x8D, 0x02, 0x20, 0x91, 0xBD, 0xF2, 0x6C, 0xBD, 0xF2, 0xBC, 0xCE, 0x00, 0xBA, 0x7E, 0xEF, 0x7D, 0xD6, 0xC1, 0x58, 0x58, 0xDB, 0xC1, 0x58, 0x80, 0x30, 0x1B, 0x97, 0xC1, 0x20, 0x9E, 0x9B, 0x3E, 0xBC, 0x1F, 0xFD, 0x9E, 0x6E, 0x6B, 0x27, 0xFD, 0x9E, 0x6E, 0x6B, 0x28, 0x00, 0xCE, 0xE1, 0xB6, 0x8D, 0x0C, 0xDC, 0xE2, 0xDD, 0xCA, 0xC6, 0x90, 0x0D, 0xBD, 0xF2, 0xC7, 0x8D, 0x03, 0x7E, 0xE7, 0xA8, 0xCE, 0x43, 0x35, 0x86, 0x20, 0xD6, 0xCE, 0x2A, 0x02, 0x86, 0x2D, 0xA7, 0x00, 0x97, 0xCE, 0xDF, 0xDE, 0x08, 0x86, 0x30, 0xD6, 0xC9, 0x26, 0x03, 0x7E, 0xF5, 0x1C, 0x4F, 0xC1, 0x80, 0x22, 0x08, 0xCE, 0xF4, 0x0D, 0xBD, 0xF0, 0xEF, 0x86, 0xF7, 0x97, 0xBF, 0xCE, 0xF4, 0x08, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xCE, 0xF4, 0x03, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xBF, 0x20, 0xF0, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xBF, 0x20, 0xE0, 0xBD, 0xEF, 0x6D, 0xBD, 0xF3, 0x0B, 0xC6, 0x01, 0x96, 0xBF, 0x8B, 0x0A, 0x2B, 0x08, 0x81, 0x0B, 0x24, 0x04, 0x4A, 0x16, 0x86, 0x02, 0x4A, 0x4A, 0x97, 0xC1, 0xD7, 0xBF, 0x2E, 0x11, 0xDE, 0xDE, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0x5D, 0x27, 0x05, 0x86, 0x30, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xCE, 0xF5, 0x29, 0xC6, 0x80, 0x96, 0xCD, 0xAB, 0x03, 0x97, 0xCD, 0x96, 0xCC, 0xA9, 0x02, 0x97, 0xCC, 0x96, 0xCB, 0xA9, 0x01, 0x97, 0xCB, 0x96, 0xCA, 0xA9, 0x00, 0x97, 0xCA, 0x5C, 0x56, 0x59, 0x28, 0xE3, 0x24, 0x03, 0xC0, 0x0B, 0x50, 0xCB, 0x2F, 0x08, 0x08, 0x08, 0x08, 0xDF, 0xB3, 0xDE, 0xDE, 0x08, 0x17, 0x84, 0x7F, 0xA7, 0x00, 0x7A, 0x00, 0xBF, 0x26, 0x05, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xDE, 0xB3, 0x53, 0xC4, 0x80, 0x8C, 0xF5, 0x4D, 0x26, 0xB8, 0xDE, 0xDE, 0xA6, 0x00, 0x09, 0x81, 0x30, 0x27, 0xF9, 0x81, 0x2E, 0x27, 0x01, 0x08, 0x86, 0x2B, 0xD6, 0xC1, 0x27, 0x1E, 0x2A, 0x03, 0x86, 0x2D, 0x50, 0xA7, 0x02, 0x86, 0x45, 0xA7, 0x01, 0x86, 0x2F, 0x4C, 0xC0, 0x0A, 0x24, 0xFB, 0xCB, 0x3A, 0xA7, 0x03, 0xE7, 0x04, 0x6F, 0x05, 0x20, 0x04, 0xA7, 0x00, 0x6F, 0x01, 0xCE, 0x43, 0x35, 0x39, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x0A, 0x1F, 0x00, 0x00, 0x98, 0x96, 0x80, 0xFF, 0xF0, 0xBD, 0xC0, 0x00, 0x01, 0x86, 0xA0, 0xFF, 0xFF, 0xD8, 0xF0, 0x00, 0x00, 0x03, 0xE8, 0xFF, 0xFF, 0xFF, 0x9C, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xF2, 0x9F, 0xCE, 0xF5, 0x24, 0xBD, 0xF2, 0x51, 0x27, 0x71, 0x4D, 0x26, 0x0A, 0x96, 0xCE, 0x2A, 0x03, 0x7E, 0xF2, 0x43, 0x7E, 0xEF, 0xF5, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0x5F, 0x96, 0xDB, 0x2A, 0x10, 0xBD, 0xF3, 0x35, 0xCE, 0x00, 0xC4, 0x96, 0xDB, 0xBD, 0xF2, 0xE3, 0x26, 0x03, 0x43, 0xD6, 0x80, 0xBD, 0xF2, 0x8D, 0x37, 0xBD, 0xF0, 0xB9, 0xCE, 0x00, 0xC4, 0xBD, 0xF0, 0xEF, 0x8D, 0x3A, 0x32, 0x46, 0x24, 0x90, 0x96, 0xC9, 0x27, 0x03, 0x73, 0x00, 0xCE, 0x39, 0x81, 0x38, 0xAA, 0x3B, 0x29, 0x07, 0x71, 0x34, 0x58, 0x3E, 0x56, 0x74, 0x16, 0x7E, 0xB3, 0x1B, 0x77, 0x2F, 0xEE, 0xE3, 0x85, 0x7A, 0x1D, 0x84, 0x1C, 0x2A, 0x7C, 0x63, 0x59, 0x58, 0x0A, 0x7E, 0x75, 0xFD, 0xE7, 0xC6, 0x80, 0x31, 0x72, 0x18, 0x10, 0x81, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xF5, 0x9B, 0x8D, 0x36, 0xBD, 0xF2, 0x6C, 0x96, 0xC9, 0x81, 0x88, 0x25, 0x03, 0x7E, 0xF1, 0x90, 0xBD, 0xF3, 0x35, 0x96, 0x80, 0x8B, 0x81, 0x27, 0xF4, 0x4A, 0x36, 0xCE, 0x00, 0xBA, 0xBD, 0xEF, 0x72, 0xCE, 0xF5, 0xA0, 0x8D, 0x17, 0x7F, 0x00, 0xDC, 0x32, 0xBD, 0xF1, 0x79, 0x39, 0xDF, 0xDE, 0xBD, 0xF2, 0x6C, 0x8D, 0x05, 0x8D, 0x08, 0xCE, 0x00, 0xBA, 0x7E, 0xF0, 0xEF, 0xDF, 0xDE, 0xBD, 0xF2, 0x67, 0xDE, 0xDE, 0xE6, 0x00, 0xD7, 0xCF, 0x08, 0xDF, 0xDE, 0x8D, 0xED, 0xDE, 0xDE, 0xC6, 0x05, 0x3A, 0xDF, 0xDE, 0xBD, 0xEF, 0x7D, 0xCE, 0x00, 0xBF, 0x7A, 0x00, 0xCF, 0x26, 0xEC, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x21, 0x27, 0x15, 0x8D, 0x10, 0xBD, 0xF2, 0x6C, 0x8D, 0x0E, 0xCE, 0x00, 0xBA, 0x8D, 0xC7, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x7D, 0x7E, 0xF3, 0x35, 0xFE, 0x42, 0x18, 0xDF, 0xCA, 0xFE, 0x42, 0x1A, 0xDF, 0xCC, 0xFE, 0xF6, 0x82, 0xDF, 0xD7, 0xFE, 0xF6, 0x84, 0xDF, 0xD9, 0xBD, 0xF0, 0xF6, 0xFC, 0x42, 0x54, 0xC3, 0x65, 0x8B, 0xFD, 0x42, 0x1A, 0xDD, 0xCC, 0xFC, 0x42, 0x52, 0xC9, 0xB0, 0x89, 0x05, 0xFD, 0x42, 0x18, 0xDD, 0xCA, 0x7F, 0x00, 0xCE, 0x86, 0x80, 0x97, 0xC9, 0x96, 0x8F, 0x97, 0xDD, 0x7E, 0xEF, 0xD6, 0x40, 0xE6, 0x4D, 0xAB, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x9F, 0xCE, 0xF6, 0xFB, 0xD6, 0xDB, 0xBD, 0xF1, 0xC0, 0xBD, 0xF2, 0x9F, 0xBD, 0xF3, 0x35, 0x7F, 0x00, 0xDC, 0x96, 0xD6, 0xD6, 0xC9, 0xBD, 0xEF, 0x75, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x72, 0x96, 0xCE, 0x36, 0x2A, 0x0A, 0xBD, 0xEF, 0x6D, 0x96, 0xCE, 0x2B, 0x06, 0x73, 0x00, 0x88, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x7D, 0x32, 0x4D, 0x2A, 0x03, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x05, 0x7E, 0xF5, 0xF8, 0xBD, 0xF2, 0x6C, 0x7F, 0x00, 0x88, 0x8D, 0xB2, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0xCE, 0x00, 0xBA, 0xBD, 0xF2, 0x51, 0x7F, 0x00, 0xCE, 0x96, 0x88, 0x8D, 0x06, 0xCE, 0x00, 0xC4, 0x7E, 0xF1, 0xC6, 0x36, 0x20, 0xC6, 0x81, 0x49, 0x0F, 0xDA, 0xA2, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x05, 0x84, 0xE6, 0x1A, 0x2D, 0x1B, 0x86, 0x28, 0x07, 0xFB, 0xF8, 0x87, 0x99, 0x68, 0x89, 0x01, 0x87, 0x23, 0x35, 0xDF, 0xE1, 0x86, 0xA5, 0x5D, 0xE7, 0x28, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0xA1, 0x54, 0x46, 0x8F, 0x13, 0x8F, 0x52, 0x43, 0x89, 0xCD, 0x86, 0xFF, 0x97, 0x00, 0x86, 0x01, 0x97, 0x01, 0x86, 0x01, 0x97, 0x03, 0x96, 0xEA, 0x81, 0x55, 0x26, 0x0A, 0xFE, 0x42, 0x21, 0xA6, 0x00, 0x4A, 0x26, 0x02, 0x6E, 0x00, 0xCE, 0x00, 0x80, 0x6F, 0x00, 0x08, 0x8C, 0x01, 0x00, 0x26, 0xF8, 0xCE, 0x41, 0xFD, 0x08, 0xA6, 0x02, 0x63, 0x02, 0xE6, 0x02, 0x6F, 0x02, 0x43, 0x11, 0x27, 0xF3, 0xFF, 0x42, 0x50, 0xDF, 0xA1, 0xDF, 0x9D, 0xDC, 0x9D, 0x83, 0x00, 0x64, 0xDD, 0x9B, 0x9E, 0x9B, 0xCE, 0xF7, 0xCF, 0xCC, 0x00, 0xEB, 0x8D, 0x30, 0xCE, 0xF7, 0xDE, 0xCC, 0x42, 0x00, 0x8D, 0x28, 0x86, 0x39, 0xCE, 0x42, 0x85, 0xA7, 0x00, 0x08, 0x8C, 0x42, 0xAF, 0x26, 0xF8, 0x73, 0x42, 0xAF, 0xCE, 0x43, 0x46, 0xDF, 0x93, 0xBD, 0xE3, 0xCF, 0xBD, 0xFB, 0xD4, 0xCE, 0xF8, 0x0F, 0xBD, 0xE7, 0xA8, 0x86, 0x55, 0x97, 0xEA, 0x7E, 0xE2, 0x71, 0xDD, 0xBF, 0xE6, 0x00, 0x08, 0xA6, 0x00, 0xDF, 0xC1, 0xDE, 0xBF, 0xA7, 0x00, 0x08, 0xDF, 0xBF, 0xDE, 0xC1, 0x5A, 0x26, 0xEF, 0x39, 0x01, 0x7F, 0x00, 0xE8, 0xBD, 0xE3, 0xEE, 0xBD, 0xFB, 0xD4, 0x20, 0xDB, 0x0E, 0x7C, 0x00, 0xF5, 0x26, 0x03, 0x7C, 0x00, 0xF4, 0xB6, 0x00, 0x00, 0x7E, 0xE1, 0xC8, 0x31, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xEC, 0x2E, 0x4F, 0xC7, 0x52, 0x59, 0xFF, 0x04, 0x5E, 0xEC, 0x2E, 0xF7, 0xC3, 0x00, 0x76, 0x00, 0x01, 0x10, 0x70, 0x84, 0x00, 0x01, 0x15, 0x1A, 0x0B, 0x00, 0x80, 0x4D, 0x49, 0x43, 0x52, 0x4F, 0x43, 0x4F, 0x4C, 0x4F, 0x52, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x31, 0x2E, 0x30, 0x0D, 0x43, 0x4F, 0x50, 0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x20, 0x31, 0x39, 0x38, 0x32, 0x20, 0x4D, 0x49, 0x43, 0x52, 0x4F, 0x53, 0x4F, 0x46, 0x54, 0x0D, 0x00, 0x7A, 0x42, 0x2B, 0x26, 0x1A, 0xB6, 0x42, 0x82, 0x88, 0x0F, 0xB7, 0x42, 0x82, 0x8A, 0x80, 0xFE, 0x42, 0x80, 0xA7, 0x00, 0xC6, 0x16, 0x84, 0x0F, 0x27, 0x02, 0xC6, 0x58, 0xF7, 0x42, 0x2B, 0xCE, 0x03, 0xFA, 0x09, 0x26, 0xFD, 0x39, 0xBD, 0x42, 0x85, 0x3C, 0x37, 0x8D, 0xD3, 0x8D, 0x15, 0x27, 0xFA, 0xC6, 0x60, 0xFE, 0x42, 0x80, 0xE7, 0x00, 0x20, 0x52, 0x4F, 0x8D, 0x54, 0x26, 0x05, 0x8D, 0x64, 0x4C, 0x27, 0x4A, 0xBD, 0x42, 0xA9, 0x3C, 0x37, 0x86, 0xFB, 0x8D, 0x44, 0x16, 0x27, 0x03, 0xF8, 0x42, 0x3B, 0xB7, 0x42, 0x3B, 0x5D, 0x27, 0x06, 0x8D, 0x42, 0x8D, 0x36, 0x26, 0x2A, 0xCE, 0x42, 0x30, 0x5F, 0x5A, 0xF7, 0x42, 0x39, 0x59, 0x24, 0x1D, 0x7C, 0x42, 0x39, 0x8D, 0x34, 0x37, 0x16, 0x08, 0xA8, 0x00, 0xA4, 0x00, 0xE7, 0x00, 0x33, 0x4D, 0x0D, 0x27, 0xEA, 0x36, 0x8D, 0x1D, 0x8D, 0x23, 0xA1, 0x00, 0x32, 0x26, 0x24, 0x4F, 0x8C, 0x86, 0x03, 0x4D, 0x33, 0x38, 0x39, 0x86, 0x7F, 0x97, 0x02, 0x96, 0x03, 0x43, 0x84, 0x02, 0x27, 0x02, 0x86, 0xFF, 0x39, 0xFE, 0x42, 0x1D, 0x7E, 0xF8, 0x61, 0xD7, 0x02, 0xB6, 0xBF, 0xFF, 0x8A, 0xC0, 0x39, 0xC6, 0xF8, 0xCB, 0x08, 0x44, 0x24, 0xFB, 0xFB, 0x42, 0x39, 0x86, 0xFE, 0x8D, 0xD8, 0xB7, 0x42, 0x3A, 0xBD, 0x42, 0xAC, 0x27, 0x11, 0xCE, 0xF9, 0x7C, 0xC1, 0x20, 0x26, 0x27, 0xB6, 0x42, 0x82, 0x8B, 0x10, 0xB7, 0x42, 0x82, 0x20, 0xB5, 0x17, 0x27, 0x05, 0xC1, 0x1A, 0x23, 0x1B, 0x8C, 0xC6, 0x1D, 0xCE, 0xF9, 0x39, 0x8D, 0xAE, 0x27, 0x0C, 0xCE, 0xF9, 0x4C, 0xC1, 0x20, 0x26, 0x05, 0x73, 0x42, 0x1C, 0x20, 0x98, 0x3A, 0xA6, 0x00, 0x20, 0x97, 0x8D, 0x99, 0xB8, 0x42, 0x1C, 0x26, 0x07, 0xB6, 0x42, 0x1C, 0x26, 0x07, 0xCA, 0x20, 0x17, 0x8A, 0x40, 0x20, 0x84, 0xCE, 0xF9, 0xAB, 0x3A, 0xA6, 0x00, 0x2A, 0xF6, 0xF6, 0x42, 0x82, 0xC4, 0x70, 0x1B, 0x20, 0xEE, 0x40, 0x0D, 0x20, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x2C, 0x2D, 0x2E, 0x2F, 0x13, 0x0D, 0x20, 0x00, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x3C, 0x3D, 0x3E, 0x3F, 0x88, 0x08, 0xB3, 0xB2, 0x82, 0x9B, 0x90, 0x84, 0xA3, 0x8A, 0x81, 0x9E, 0xBC, 0xBA, 0xB9, 0xA5, 0xC7, 0x15, 0x9C, 0x09, 0x8C, 0x80, 0xB5, 0x5E, 0xB1, 0x8F, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x20, 0x00, 0x8E, 0x93, 0x98, 0x97, 0x96, 0x94, 0x95, 0x9D, 0x86, 0x89, 0x92, 0xBB, 0x91, 0xB7, 0xB6, 0x89, 0x80, 0x82, 0x87, 0x8D, 0x86, 0x85, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x8F, 0x8C, 0x88, 0x8B, 0x55, 0x81, 0x8E, 0x83, 0x8A, 0x84, 0xBD, 0x42, 0x88, 0x3C, 0x37, 0x36, 0xD6, 0xE8, 0x27, 0x4B, 0x16, 0x07, 0x36, 0x0F, 0x17, 0xD6, 0x03, 0xC4, 0x04, 0x26, 0xFA, 0x8D, 0x2D, 0x5F, 0x8D, 0x2C, 0xC6, 0x08, 0x37, 0x5F, 0x44, 0x59, 0x8D, 0x24, 0x33, 0x5A, 0x26, 0xF6, 0x8D, 0x1C, 0x32, 0x06, 0x32, 0x81, 0x0D, 0x27, 0x0B, 0x7C, 0x42, 0x2A, 0xF6, 0x42, 0x2A, 0xF1, 0x42, 0x29, 0x25, 0x07, 0x7F, 0x42, 0x2A, 0x8D, 0x10, 0x8D, 0x0E, 0x33, 0x38, 0x39, 0xC6, 0x01, 0xD7, 0x03, 0x8D, 0x00, 0xFE, 0x42, 0x23, 0x20, 0x03, 0xFE, 0x42, 0x25, 0x7E, 0xF8, 0x61, 0xFE, 0x42, 0x80, 0x81, 0x08, 0x26, 0x0C, 0x8C, 0x40, 0x00, 0x27, 0x50, 0x86, 0x60, 0x09, 0xA7, 0x00, 0x20, 0x2E, 0x81, 0x0D, 0x26, 0x14, 0xFE, 0x42, 0x80, 0x86, 0x60, 0xA7, 0x00, 0x08, 0xFF, 0x42, 0x80, 0xF6, 0x42, 0x81, 0xC5, 0x1F, 0x26, 0xF1, 0x20, 0x16, 0x81, 0x20, 0x25, 0x2D, 0x4D, 0x2B, 0x0C, 0x81, 0x40, 0x25, 0x06, 0x81, 0x60, 0x25, 0x04, 0x84, 0xDF, 0x88, 0x40, 0xA7, 0x00, 0x08, 0xFF, 0x42, 0x80, 0x8C, 0x42, 0x00, 0x26, 0x13, 0xCE, 0x40, 0x00, 0xEC, 0x20, 0xED, 0x00, 0x08, 0x08, 0x8C, 0x41, 0xE0, 0x26, 0xF5, 0xC6, 0x60, 0xBD, 0xFB, 0xD9, 0x32, 0x33, 0x38, 0x39, 0xBD, 0x42, 0x8B, 0x3C, 0x37, 0x36, 0x96, 0xE8, 0x27, 0x08, 0xFE, 0x42, 0x27, 0xFC, 0x42, 0x29, 0x20, 0x0A, 0xF6, 0x42, 0x81, 0xC4, 0x1F, 0xCE, 0x10, 0x10, 0x86, 0x20, 0xDF, 0xE4, 0xD7, 0xE6, 0x97, 0xE7, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xFB, 0xD4, 0xBD, 0x42, 0x91, 0x7F, 0x42, 0x7F, 0xCE, 0x42, 0xB2, 0xC6, 0x01, 0xBD, 0xF8, 0x65, 0x7D, 0x00, 0xE9, 0x26, 0x4D, 0x7D, 0x00, 0xE8, 0x26, 0x44, 0x4D, 0x2A, 0x1E, 0x7D, 0x42, 0x3A, 0x27, 0x19, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x08, 0x3C, 0x36, 0x84, 0x7F, 0xDE, 0x89, 0x8D, 0x48, 0xDF, 0x89, 0x32, 0x38, 0x4D, 0x2A, 0xEE, 0xDE, 0x89, 0x20, 0xD2, 0x81, 0x0C, 0x27, 0xC0, 0x81, 0x08, 0x26, 0x08, 0x5A, 0x27, 0xBF, 0x09, 0x8D, 0x37, 0x20, 0xC2, 0x81, 0x15, 0x26, 0x0A, 0x5A, 0x27, 0xB3, 0x86, 0x08, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x81, 0x03, 0x0D, 0x27, 0x05, 0x81, 0x0D, 0x26, 0x0E, 0x4F, 0x07, 0x36, 0xBD, 0xE7, 0x66, 0x6F, 0x00, 0xCE, 0x42, 0xB1, 0x32, 0x06, 0x39, 0x81, 0x20, 0x25, 0x99, 0x8D, 0x02, 0x20, 0x95, 0xC1, 0x80, 0x24, 0xF3, 0xA7, 0x00, 0x08, 0x5C, 0x7E, 0xF9, 0xC6, 0x8D, 0x43, 0x3C, 0xBD, 0xEF, 0x47, 0x38, 0xC1, 0x08, 0x22, 0x37, 0x5A, 0x2B, 0x05, 0x86, 0x10, 0x3D, 0x20, 0x08, 0xE6, 0x00, 0x2A, 0x03, 0xC4, 0x70, 0x21, 0x5F, 0xD7, 0x82, 0x8D, 0x70, 0xA6, 0x00, 0x2B, 0x01, 0x4F, 0x84, 0x0F, 0xBA, 0x42, 0x3C, 0x9A, 0x82, 0x8A, 0x80, 0xA7, 0x00, 0x39, 0x8D, 0x13, 0x8D, 0x5B, 0x4F, 0xE6, 0x00, 0x2A, 0xF2, 0x73, 0x42, 0x3C, 0xF4, 0x42, 0x3C, 0xE7, 0x00, 0x39, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2C, 0xBD, 0xEF, 0x0D, 0xC1, 0x3F, 0x22, 0xF3, 0x37, 0xBD, 0xEF, 0x47, 0xC1, 0x1F, 0x22, 0xEB, 0x37, 0x54, 0x86, 0x20, 0x3D, 0xC3, 0x40, 0x00, 0x37, 0x36, 0x30, 0xE6, 0x03, 0x54, 0x38, 0x3A, 0x32, 0x33, 0x84, 0x01, 0x56, 0x49, 0xC6, 0x10, 0x54, 0x4A, 0x2A, 0xFC, 0xF7, 0x42, 0x3C, 0x39, 0x8D, 0xCF, 0xC6, 0xFF, 0xA6, 0x00, 0x2A, 0x0E, 0xB4, 0x42, 0x3C, 0x27, 0x08, 0xE6, 0x00, 0x54, 0x54, 0x54, 0x54, 0xC4, 0x07, 0x5C, 0x8D, 0x03, 0x7E, 0xEA, 0x29, 0x4F, 0x5D, 0x2A, 0x01, 0x43, 0x7E, 0xEC, 0xE3, 0x27, 0x13, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x1D, 0x5D, 0x27, 0x06, 0x5A, 0x86, 0x10, 0x3D, 0xCA, 0x0F, 0xCA, 0x80, 0x8C, 0xC6, 0x60, 0xCE, 0x40, 0x00, 0xFF, 0x42, 0x80, 0xE7, 0x00, 0x08, 0x8C, 0x42, 0x00, 0x26, 0xF8, 0x39, 0x8D, 0xED, 0xCE, 0xF8, 0x33, 0x7E, 0xE7, 0xA8, 0xB6, 0x42, 0x7F, 0x26, 0x03, 0xBD, 0xF8, 0x83, 0x7F, 0x42, 0x7F, 0x97, 0xCD, 0x27, 0x03, 0x7E, 0xEE, 0x91, 0x97, 0xD0, 0x7E, 0xEE, 0x9D, 0x27, 0x06, 0xBD, 0xEF, 0x4C, 0xFF, 0x42, 0x1F, 0xFE, 0x42, 0x1F, 0x6E, 0x00, 0xDE, 0x99, 0x3C, 0xBD, 0xEB, 0x1B, 0xBD, 0xEA, 0x29, 0xDF, 0x89, 0x38, 0xDC, 0x89, 0x9C, 0x99, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x7E, 0xEC, 0xE3, 0xBD, 0xEB, 0xBA, 0x83, 0x01, 0xFF, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xC3, 0x41, 0xFF, 0xFD, 0x42, 0x80, 0x39, 0xDE, 0x93, 0xFF, 0x42, 0x6F, 0xDE, 0x95, 0xFF, 0x42, 0x71, 0x5F, 0x81, 0xA9, 0x26, 0x05, 0xBD, 0xFD, 0xDB, 0xC6, 0x04, 0xF7, 0x42, 0x67, 0xFC, 0x42, 0x71, 0xB3, 0x42, 0x6F, 0xFD, 0x42, 0x6C, 0x8D, 0x2E, 0xFE, 0x42, 0x6F, 0xFF, 0x42, 0x78, 0x86, 0xFF, 0xB7, 0x42, 0x76, 0xFC, 0x42, 0x71, 0xB3, 0x42, 0x78, 0x23, 0x0E, 0x4D, 0x26, 0x07, 0xC1, 0xFF, 0x27, 0x03, 0xF7, 0x42, 0x76, 0x8D, 0x44, 0x20, 0xE2, 0x70, 0x42, 0x75, 0x7F, 0x42, 0x76, 0x8D, 0x3A, 0x86, 0x01, 0x97, 0x03, 0x39, 0xBD, 0xFD, 0x29, 0xCE, 0x42, 0x5F, 0xFF, 0x42, 0x78, 0xDF, 0xBF, 0x6F, 0x09, 0x6F, 0x0A, 0xCE, 0x42, 0x57, 0xC6, 0x08, 0xBD, 0xF7, 0xB2, 0x7F, 0x42, 0x75, 0x86, 0x0F, 0xB7, 0x42, 0x76, 0x8D, 0x0B, 0x8D, 0x12, 0x7C, 0x42, 0x75, 0xCE, 0x00, 0x00, 0xBD, 0xF8, 0x61, 0xFE, 0x42, 0x2F, 0x8D, 0x45, 0x09, 0x26, 0xFB, 0x39, 0x01, 0x0F, 0xF6, 0x42, 0x76, 0xF7, 0x42, 0x7B, 0xB6, 0x42, 0x76, 0x27, 0x09, 0xFE, 0x42, 0x78, 0xAB, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0xBB, 0x42, 0x75, 0xB7, 0x42, 0x7A, 0xFE, 0x42, 0x78, 0x8D, 0x20, 0x86, 0x3C, 0x8D, 0x1E, 0xB6, 0x42, 0x75, 0x8D, 0x19, 0xB6, 0x42, 0x76, 0x8D, 0x14, 0x4D, 0x27, 0x0A, 0xA6, 0x00, 0x08, 0x8D, 0x0C, 0x7A, 0x42, 0x7B, 0x26, 0xF6, 0xB6, 0x42, 0x7A, 0x8D, 0x02, 0x86, 0x55, 0x3C, 0x36, 0x36, 0xC6, 0x08, 0x30, 0x64, 0x00, 0xCE, 0x00, 0x20, 0x25, 0x03, 0xCE, 0x00, 0x40, 0x3C, 0x86, 0x01, 0x97, 0x03, 0x09, 0x26, 0xFD, 0x4F, 0x97, 0x03, 0x38, 0x09, 0x26, 0xFD, 0x5A, 0x26, 0xE3, 0x32, 0x32, 0x38, 0x39, 0x8D, 0x08, 0xBD, 0x00, 0xF3, 0x27, 0xF8, 0x7E, 0xEA, 0x3C, 0xCE, 0x42, 0x56, 0x6F, 0x00, 0x86, 0x20, 0x08, 0xA7, 0x00, 0x8C, 0x42, 0x5F, 0x26, 0xF8, 0xBD, 0x00, 0xF3, 0x27, 0xE1, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0xF7, 0x42, 0x56, 0x27, 0xD6, 0x37, 0xCC, 0x42, 0x57, 0xDD, 0xBF, 0x33, 0x7E, 0xF7, 0xB2, 0x81, 0xA9, 0x26, 0x03, 0x7E, 0xFD, 0xB1, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xFE, 0x06, 0x4F, 0x8D, 0x22, 0xBD, 0xE3, 0xCF, 0x73, 0x42, 0x6E, 0xFC, 0x42, 0x6C, 0xD3, 0x93, 0xBD, 0xE2, 0x1E, 0xDE, 0x93, 0xFF, 0x42, 0x78, 0x8D, 0x4E, 0x2A, 0xF9, 0xDF, 0x95, 0xCE, 0xE1, 0xBB, 0xBD, 0xE7, 0xA8, 0x7E, 0xE2, 0xEB, 0x36, 0x8D, 0x10, 0x32, 0x7D, 0x42, 0x74, 0x26, 0x37, 0xB1, 0x42, 0x67, 0x27, 0x32, 0xC6, 0x24, 0x7E, 0xE2, 0x38, 0x8D, 0x8F, 0xBD, 0xFE, 0x37, 0x26, 0x03, 0x7E, 0xFF, 0x4E, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x8D, 0x28, 0x86, 0x04, 0x8D, 0xD8, 0xFC, 0x42, 0x71, 0xB3, 0x42, 0x6F, 0xB3, 0x42, 0x6C, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xFE, 0x42, 0x6F, 0xFF, 0x42, 0x78, 0x8D, 0x03, 0x2A, 0xF9, 0x39, 0xBD, 0xFE, 0xB6, 0x26, 0xD7, 0xB6, 0x42, 0x75, 0x27, 0xD2, 0x39, 0xBD, 0x00, 0xEB, 0xC6, 0x01, 0xD7, 0x86, 0xBD, 0xEB, 0x1B, 0x7F, 0x00, 0x86, 0xBD, 0xE9, 0x0E, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0xFF, 0x42, 0x71, 0xDE, 0x89, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0xFF, 0x42, 0x6F, 0xBD, 0x00, 0xF3, 0x27, 0xCC, 0x7E, 0xEA, 0x2F, 0xBD, 0x00, 0xEB, 0x86, 0x02, 0x8D, 0x82, 0xCE, 0x00, 0x00, 0xBD, 0x00, 0xF3, 0x27, 0x06, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x89, 0xFC, 0x42, 0x6A, 0xD3, 0x89, 0xFD, 0x42, 0x1F, 0xFC, 0x42, 0x6C, 0xD3, 0x89, 0x37, 0x36, 0x38, 0x20, 0x99, 0xBD, 0xFD, 0xA2, 0x8D, 0x56, 0x26, 0x9D, 0x39, 0x96, 0xE2, 0x4C, 0x26, 0x0A, 0xBD, 0xFB, 0xD4, 0x86, 0x53, 0x8D, 0x3E, 0xBD, 0xE7, 0xB9, 0x8D, 0x62, 0xBA, 0x42, 0x75, 0x26, 0x33, 0x5F, 0x37, 0xCE, 0x42, 0x5F, 0x3A, 0xA6, 0x00, 0xDE, 0xE2, 0x08, 0x26, 0x02, 0x8D, 0x25, 0xCE, 0x42, 0x57, 0x3A, 0xA0, 0x00, 0x30, 0xAA, 0x00, 0xA7, 0x00, 0x5C, 0xC1, 0x08, 0x26, 0xE3, 0x32, 0x4D, 0x27, 0x0B, 0x7D, 0x42, 0x56, 0x27, 0x06, 0x8D, 0x10, 0x26, 0x07, 0x20, 0xBC, 0x86, 0x46, 0x8D, 0x22, 0x4F, 0x39, 0x7F, 0x00, 0xE8, 0x7E, 0xF9, 0xC6, 0xBD, 0xFF, 0x4E, 0x86, 0xFF, 0x16, 0x8D, 0x2A, 0x26, 0x07, 0xB6, 0x42, 0x75, 0x40, 0x2B, 0xF3, 0x4A, 0xB7, 0x42, 0x7B, 0x39, 0xB6, 0x40, 0x00, 0x88, 0x40, 0xD6, 0xE2, 0x5C, 0x26, 0x03, 0xB7, 0x40, 0x00, 0x39, 0xBD, 0xFF, 0x4E, 0xCE, 0x42, 0x5F, 0xFF, 0x42, 0x78, 0x86, 0x0F, 0x8C, 0x86, 0xFF, 0x5F, 0x36, 0xF7, 0x42, 0x73, 0x01, 0x0F, 0x8D, 0xDB, 0xFE, 0x42, 0x78, 0x4F, 0x8D, 0x5B, 0x46, 0x81, 0x3C, 0x26, 0xF9, 0x8D, 0x46, 0xB7, 0x42, 0x75, 0x8D, 0x41, 0xB7, 0x42, 0x76, 0x33, 0x11, 0x22, 0x31, 0xBB, 0x42, 0x75, 0xB7, 0x42, 0x7A, 0xB6, 0x42, 0x76, 0xB7, 0x42, 0x7B, 0x27, 0x19, 0x8D, 0x2A, 0x7D, 0x42, 0x73, 0x26, 0x07, 0xA7, 0x00, 0xA1, 0x00, 0x26, 0x19, 0x08, 0xBB, 0x42, 0x7A, 0xB7, 0x42, 0x7A, 0x7A, 0x42, 0x7B, 0x26, 0xE7, 0x8D, 0x11, 0xB0, 0x42, 0x7A, 0x27, 0x08, 0x86, 0x01, 0x8C, 0x86, 0x03, 0x8C, 0x86, 0x02, 0xB7, 0x42, 0x7B, 0x39, 0x86, 0x08, 0xB7, 0x42, 0x7C, 0x8D, 0x07, 0x46, 0x7A, 0x42, 0x7C, 0x26, 0xF8, 0x39, 0x8D, 0x08, 0xF6, 0x42, 0x7D, 0x5A, 0xF1, 0x42, 0x2C, 0x39, 0x7F, 0x42, 0x7D, 0x7D, 0x42, 0x7E, 0x26, 0x11, 0x8D, 0x07, 0x26, 0xFC, 0x8D, 0x03, 0x27, 0xFC, 0x39, 0x7C, 0x42, 0x7D, 0xD6, 0x03, 0xC4, 0x10, 0x39, 0x8D, 0xF6, 0x27, 0xFC, 0x8D, 0xF2, 0x26, 0xFC, 0x39, 0x01, 0x0F, 0x7F, 0x42, 0x7C, 0x8D, 0xDF, 0x8D, 0x2D, 0x22, 0x12, 0x8D, 0x22, 0x25, 0x12, 0x7A, 0x42, 0x7C, 0xB6, 0x42, 0x7C, 0x81, 0xA0, 0x26, 0xEC, 0xB7, 0x42, 0x7E, 0x39, 0x8D, 0x10, 0x22, 0xE6, 0x8D, 0x13, 0x25, 0xE6, 0x7C, 0x42, 0x7C, 0xB6, 0x42, 0x7C, 0x80, 0x60, 0x20, 0xE8, 0x7F, 0x42, 0x7D, 0x8D, 0xB6, 0x20, 0x05, 0x7F, 0x42, 0x7D, 0x8D, 0xC0, 0xF6, 0x42, 0x7D, 0xF1, 0x42, 0x2D, 0x22, 0x04, 0xF1, 0x42, 0x2E, 0x39, 0x7F, 0x42, 0x7C, 0x39, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5D, 0x26, 0x2F, 0x7E, 0xEC, 0x2E, 0x8D, 0xF5, 0x37, 0x8D, 0xEF, 0x32, 0x36, 0x37, 0x4F, 0xDE, 0x09, 0xD6, 0x08, 0xDF, 0x0B, 0x88, 0x80, 0xB7, 0xBF, 0xFF, 0x30, 0xE6, 0x01, 0x08, 0x08, 0x5C, 0x26, 0xFB, 0xD6, 0x08, 0xC4, 0x40, 0x27, 0xED, 0x30, 0x6A, 0x00, 0x26, 0xE2, 0x4F, 0xB7, 0xBF, 0xFF, 0x38, 0x39, 0x6E, 0x69, 0x6C, 0x72, 0x65, 0x62, 0x6D, 0x61, 0x68, 0x43, 0xF8, 0x83, 0xF9, 0xC6, 0xFF, 0x4E, 0xFE, 0xB9, 0xFC, 0xC0, 0xFF, 0xAB, 0xFC, 0xB7, 0xEC, 0xE3, 0xEB, 0xC7, 0x00, 0xC9, 0x42, 0x00, 0x42, 0x03, 0x42, 0x06, 0x42, 0x09, 0x42, 0x0C, 0x42, 0x0F, 0x42, 0x12, 0xF7, 0x2E];

// Alice
//MC10.ROM = [0xF2,0xBA,0xF3,0x35,0xF2,0xD5,0x42,0x15,0xF6,0x2A,0xF5,0x4D,0xF0,0xB9,0xF5,0xC9,0xF6,0x8C,0xF6,0x86,0xF6,0xD2,0xEF,0x5F,0xEE,0x82,0xEC,0xED,0xEF,0x1C,0xEE,0xA2,0xEE,0x8E,0xEE,0xAD,0xEE,0xC8,0xEE,0xCF,0xFB,0x9C,0xFC,0x11,0xFB,0xED,0xEC,0xDB,0x79,0xEF,0x80,0x79,0xEF,0x75,0x7B,0xF0,0xF1,0x7B,0xF1,0xC8,0x7F,0xF5,0x56,0x50,0xEA,0x8E,0x46,0xEA,0x8D,0x46,0x4F,0xD2,0x47,0x4F,0x54,0xCF,0x47,0x4F,0x53,0x55,0xC2,0x52,0x45,0xCD,0x49,0xC6,0x44,0x41,0x54,0xC1,0x50,0x52,0x49,0x4E,0xD4,0x4F,0xCE,0x49,0x4E,0x50,0x55,0xD4,0x45,0x4E,0xC4,0x4E,0x45,0x58,0xD4,0x44,0x49,0xCD,0x52,0x45,0x41,0xC4,0x4C,0x45,0xD4,0x52,0x55,0xCE,0x52,0x45,0x53,0x54,0x4F,0x52,0xC5,0x52,0x45,0x54,0x55,0x52,0xCE,0x53,0x54,0x4F,0xD0,0x50,0x4F,0x4B,0xC5,0x43,0x4F,0x4E,0xD4,0x4C,0x49,0x53,0xD4,0x43,0x4C,0x45,0x41,0xD2,0x4E,0x45,0xD7,0x43,0x4C,0x4F,0x41,0xC4,0x43,0x53,0x41,0x56,0xC5,0x4C,0x4C,0x49,0x53,0xD4,0x4C,0x50,0x52,0x49,0x4E,0xD4,0x53,0x45,0xD4,0x52,0x45,0x53,0x45,0xD4,0x43,0x4C,0xD3,0x53,0x4F,0x55,0x4E,0xC4,0x45,0x58,0x45,0xC3,0x53,0x4B,0x49,0x50,0xC6,0x54,0x41,0x42,0xA8,0x54,0xCF,0x54,0x48,0x45,0xCE,0x4E,0x4F,0xD4,0x53,0x54,0x45,0xD0,0x4F,0x46,0xC6,0xAB,0xAD,0xAA,0xAF,0xDE,0x41,0x4E,0xC4,0x4F,0xD2,0xBE,0xBD,0xBC,0x53,0x47,0xCE,0x49,0x4E,0xD4,0x41,0x42,0xD3,0x55,0x53,0xD2,0x52,0x4E,0xC4,0x53,0x51,0xD2,0x4C,0x4F,0xC7,0x45,0x58,0xD0,0x53,0x49,0xCE,0x43,0x4F,0xD3,0x54,0x41,0xCE,0x50,0x45,0x45,0xCB,0x4C,0x45,0xCE,0x53,0x54,0x52,0xA4,0x56,0x41,0xCC,0x41,0x53,0xC3,0x43,0x48,0x52,0xA4,0x4C,0x45,0x46,0x54,0xA4,0x52,0x49,0x47,0x48,0x54,0xA4,0x4D,0x49,0x44,0xA4,0x50,0x4F,0x49,0x4E,0xD4,0x56,0x41,0x52,0x50,0x54,0xD2,0x49,0x4E,0x4B,0x45,0x59,0xA4,0x4D,0x45,0xCD,0x00,0xE4,0xC4,0xE6,0x1A,0xE6,0x04,0xE6,0x85,0xE6,0x72,0xE6,0x51,0xE7,0x1F,0xE6,0x92,0xE7,0xDE,0xE5,0x7F,0xE8,0xBB,0xEB,0x12,0xE8,0x0E,0xE6,0xD3,0xE5,0xFA,0xE5,0x60,0xE6,0x31,0xE5,0x7E,0xEF,0x66,0xE5,0xA6,0xE4,0x0D,0xE5,0xB8,0xE3,0xCD,0xFD,0x5C,0xFC,0x3B,0xE4,0x0B,0xE7,0x1C,0xFB,0x25,0xFB,0x55,0xFB,0xBF,0xFF,0xA5,0xFC,0x04,0xFE,0x2F,0x4E,0x46,0x53,0x4E,0x52,0x47,0x4F,0x44,0x46,0x43,0x4F,0x56,0x4F,0x4D,0x55,0x4C,0x42,0x53,0x44,0x44,0x2F,0x30,0x49,0x44,0x54,0x4D,0x4F,0x53,0x4C,0x53,0x53,0x54,0x43,0x4E,0x49,0x4F,0x46,0x4D,0x20,0x45,0x52,0x52,0x4F,0x52,0x00,0x20,0x49,0x4E,0x20,0x00,0x0D,0x4F,0x4B,0x0D,0x00,0x0D,0x42,0x52,0x45,0x41,0x4B,0x00,0x81,0x3A,0x24,0x0B,0x81,0x20,0x26,0x03,0x7E,0x00,0xEB,0x80,0x30,0x80,0xD0,0x39,0x30,0xC6,0x04,0x3A,0xC6,0x12,0xDF,0x89,0xA6,0x00,0x80,0x80,0x26,0x14,0xEE,0x01,0xDF,0x8B,0xDE,0xB5,0x27,0x08,0x9C,0x8B,0x27,0x08,0x8D,0x3B,0x20,0xE6,0xDE,0x8B,0xDF,0xB5,0xDE,0x89,0x4D,0x39,0x8D,0x1E,0x07,0x36,0x9F,0x91,0x0F,0x9E,0xBB,0xDE,0xBD,0x08,0x09,0xA6,0x00,0x36,0x9C,0xC1,0x26,0xF8,0x31,0x9F,0xBF,0x9E,0x91,0x32,0x06,0x39,0x4F,0x58,0xD3,0x99,0xC3,0x00,0x3A,0x25,0x13,0x9F,0x91,0x93,0x91,0x24,0x0D,0xD3,0x91,0x39,0x4F,0xDF,0x89,0xD3,0x89,0xDD,0x8B,0xDE,0x8B,0x39,0xC6,0x0C,0xBD,0x42,0x97,0xBD,0x42,0x9A,0xBD,0xFC,0x86,0xB6,0x42,0x6E,0x27,0x03,0xBD,0xE3,0xCF,0xBD,0xE3,0xEE,0x7F,0x00,0xE8,0xBD,0xE7,0x6A,0xBD,0xE7,0xBC,0xCE,0xE1,0x8A,0x3A,0xA6,0x00,0xBD,0xE7,0xBE,0xA6,0x01,0xBD,0xE7,0xBE,0xCE,0xE1,0xAF,0xBD,0xE7,0xA8,0xDE,0xE2,0x08,0x27,0x03,0xBD,0xF4,0x12,0xBD,0xE7,0x6A,0xCE,0xE1,0xBC,0xBD,0xE7,0xA8,0xCE,0xFF,0xFF,0xDF,0xE2,0xBD,0xFA,0xA4,0x25,0xF6,0xDF,0xF4,0xBD,0x00,0xEB,0x27,0xEF,0x25,0x06,0xBD,0xE3,0x11,0x7E,0xE5,0x3D,0xBD,0xE6,0xB2,0xDE,0xA5,0xFF,0x42,0xB0,0xBD,0xE3,0x11,0xD7,0x82,0xBD,0xE3,0xB9,0x25,0x1C,0xDC,0xC1,0xA3,0x00,0xD3,0x95,0xDD,0x95,0x07,0x36,0x9F,0x91,0x0F,0xAE,0x00,0x34,0x32,0xA7,0x00,0x08,0x9C,0x95,0x26,0xF8,0x9E,0x91,0x32,0x06,0xB6,0x42,0xB2,0x27,0x25,0xDC,0x95,0xDD,0xBD,0xDB,0x82,0x89,0x00,0xDD,0xBB,0xBD,0xE1,0xFE,0x07,0x36,0x9F,0x91,0x0F,0x8E,0x42,0xAD,0x32,0xA7,0x00,0x08,0x9C,0xBF,0x26,0xF8,0x9E,0x91,0x32,0x06,0xDE,0xBB,0xDF,0x95,0xBD,0xE3,0xD9,0x8D,0x03,0x7E,0xE2,0x7A,0xDE,0x93,0xEC,0x00,0x26,0x01,0x39,0x3C,0xC6,0x04,0x3A,0x08,0xA6,0x00,0x26,0xFB,0x08,0x3C,0x30,0xEC,0x00,0xEE,0x02,0xED,0x00,0x38,0x31,0x31,0x20,0xE4,0x7F,0x00,0x85,0xDE,0xF4,0x09,0xDF,0xF4,0xCE,0x42,0xB1,0xDF,0xDE,0x9F,0x91,0x07,0x97,0x87,0x01,0x0F,0x9E,0xF4,0x33,0xC1,0x20,0x27,0x38,0xD7,0x81,0xC1,0x22,0x27,0x5B,0x96,0x85,0x26,0x2E,0xC1,0x3F,0x26,0x04,0xC6,0x86,0x20,0x26,0xC1,0x30,0x25,0x04,0xC1,0x3C,0x25,0x1E,0x5D,0x2B,0x19,0xCE,0xE0,0x44,0x9E,0xF4,0x5F,0x08,0x32,0x81,0x20,0x27,0xFB,0xA0,0x00,0x27,0xF6,0x81,0x80,0x26,0x35,0xCA,0x80,0xDE,0xDE,0x8C,0xC6,0x21,0x9F,0xF4,0x9E,0x91,0x96,0x87,0x06,0x08,0xDF,0xDE,0xE7,0x00,0x27,0x38,0xC0,0x3A,0x27,0x04,0xC1,0x4B,0x26,0x02,0xD7,0x85,0xC0,0x49,0x26,0xA3,0xD7,0x81,0x0F,0x9E,0xF4,0x33,0x5D,0x27,0xDB,0xD1,0x81,0x27,0xD7,0x08,0xE7,0x00,0x20,0xF3,0x9E,0xF4,0x5C,0xA6,0x00,0x08,0x2A,0xFB,0xA6,0x00,0x26,0xB2,0x9F,0xF4,0x9E,0x91,0xBD,0x42,0xA3,0x9E,0xF4,0x33,0x20,0xB5,0xE7,0x01,0xE7,0x02,0xDC,0xDE,0x83,0x42,0xAD,0xCE,0x42,0xB1,0xDF,0xF4,0x39,0xDE,0x93,0xEC,0x00,0x27,0x0A,0xDC,0xA5,0xA3,0x02,0x23,0x05,0xEE,0x00,0x20,0xF2,0x0D,0xDF,0xC1,0x39,0x26,0xFB,0xDE,0x93,0x6F,0x00,0x08,0x6F,0x00,0x08,0xDF,0x95,0xDE,0x93,0x09,0xDF,0xF4,0xBD,0x42,0x8E,0xDE,0xA1,0xDF,0x9D,0xBD,0xE5,0x60,0xDE,0x95,0xDF,0x97,0xDF,0x99,0xCE,0x42,0x41,0xFF,0x42,0x3D,0x38,0x9E,0x9B,0x4F,0x36,0x97,0xA7,0x97,0xA8,0x97,0x86,0xB7,0x42,0x6E,0x6E,0x00,0xC6,0xFE,0xD7,0xE8,0x7E,0x00,0xF3,0x8D,0xF7,0x07,0x36,0x8D,0xF7,0xBD,0xE6,0xB2,0x8D,0xA3,0x32,0x06,0x3C,0x27,0x16,0xBD,0x00,0xF3,0x27,0x16,0x81,0xA8,0x26,0x0A,0xBD,0x00,0xEB,0x27,0x08,0xBD,0xE6,0xB2,0x27,0x08,0x7E,0xEA,0x3C,0xCE,0xFF,0xFF,0xDF,0xA5,0x38,0x31,0x31,0xBD,0xE7,0x6A,0xBD,0xE5,0x66,0xEC,0x00,0x26,0x06,0x7F,0x00,0xE8,0x7E,0xE2,0x71,0xEC,0x02,0x93,0xA5,0x22,0xF4,0xEC,0x02,0x3C,0xBD,0xF4,0x19,0x38,0x08,0x08,0x08,0x08,0xDF,0x89,0x7F,0x42,0x84,0x86,0x20,0x8C,0x86,0x21,0xDE,0x89,0x84,0x7F,0xBD,0xE7,0xBE,0xA6,0x00,0x08,0x4D,0x27,0xC8,0xF6,0x42,0x84,0x81,0x22,0x26,0x05,0xC8,0x01,0xF7,0x42,0x84,0x81,0x3A,0x26,0x09,0xC5,0x01,0x26,0x05,0xC4,0xFD,0xF7,0x42,0x84,0x4D,0x2A,0xDB,0x5D,0x26,0xD8,0x81,0x85,0x26,0x02,0xCA,0x02,0x81,0x83,0x26,0x02,0xCA,0x04,0xF7,0x42,0x84,0xBD,0x42,0xA6,0x81,0xC8,0x22,0xBC,0x8D,0x0A,0xA6,0x00,0x2B,0xB8,0x08,0xBD,0xE7,0xBE,0x20,0xF6,0x80,0x7F,0xDF,0x89,0xCE,0xE0,0x45,0x4A,0x26,0x01,0x39,0x6D,0x00,0x08,0x2A,0xFB,0x20,0xF5,0x86,0x80,0x97,0x86,0xBD,0xE6,0xD3,0xBD,0xE1,0xD8,0x38,0x26,0x04,0xDE,0x89,0x3A,0x35,0xC6,0x09,0xBD,0xE2,0x1A,0xBD,0xE6,0x56,0x3C,0xDE,0xE2,0x3C,0xC6,0xA2,0xBD,0xEA,0x31,0xBD,0xE9,0x0E,0xBD,0xE9,0x0C,0xD6,0xCE,0xCA,0x7F,0xD4,0xCA,0xD7,0xCA,0xCE,0xE4,0xFA,0x7E,0xE9,0xA4,0xCE,0xF0,0x8B,0xBD,0xF2,0x51,0xBD,0x00,0xF3,0x81,0xA5,0x26,0x06,0xBD,0x00,0xEB,0xBD,0xE9,0x0C,0xBD,0xF2,0xAD,0xBD,0xE9,0xA2,0xDE,0xB5,0x3C,0x86,0x80,0x36,0x8D,0x4B,0xDE,0xF4,0xDF,0xA9,0xA6,0x00,0x27,0x07,0x81,0x3A,0x27,0x16,0x7E,0xEA,0x3C,0x08,0xA6,0x00,0x08,0xAA,0x00,0xB7,0x42,0x83,0x27,0x54,0x08,0xEC,0x00,0xDD,0xE2,0x08,0xDF,0xF4,0xBD,0x00,0xEB,0x8D,0x02,0x20,0xD5,0x27,0x71,0xBD,0x42,0xA0,0x4D,0x2B,0x03,0x7E,0xE6,0xD3,0x81,0xA0,0x22,0xD4,0x48,0x16,0xCE,0xE1,0x48,0x3A,0xEE,0x00,0xBD,0x00,0xEB,0x6E,0x00,0xDE,0x93,0x09,0xDF,0xAD,0x39,0xBD,0xF8,0x79,0x27,0x0B,0x81,0x03,0x27,0x0F,0x81,0x13,0x27,0x04,0xB7,0x42,0x7F,0x39,0xBD,0xF8,0x83,0x27,0xFB,0x20,0xED,0x0D,0x26,0x36,0xDE,0xF4,0xDF,0xA9,0x76,0x42,0x83,0x38,0xDE,0xE2,0x08,0x27,0x07,0x09,0xDF,0xA3,0xDE,0xA9,0xDF,0xA7,0x7F,0x00,0xE8,0xCE,0xE1,0xC0,0x7D,0x42,0x83,0x2A,0x03,0x7E,0xE2,0x66,0x7E,0xE2,0x71,0x26,0x0F,0xC6,0x20,0xDE,0xA7,0x26,0x03,0x7E,0xE2,0x38,0xDF,0xF4,0xDE,0xA3,0xDF,0xE2,0x39,0x27,0x3A,0xBD,0xEB,0xBD,0x37,0x36,0xDE,0xA1,0xDF,0xCC,0xBD,0x00,0xF3,0x27,0x12,0xBD,0xEA,0x2F,0xBD,0xEF,0x4C,0xDE,0xCC,0x09,0xDF,0xCC,0xFC,0x42,0x50,0x93,0xCC,0x25,0x1D,0xDC,0xCC,0x37,0x36,0x30,0xA3,0x02,0x25,0x14,0xED,0x02,0x83,0x00,0x3A,0x25,0x0D,0x93,0x95,0x25,0x09,0x38,0xDF,0xA1,0x38,0xDF,0x9B,0x7E,0xE3,0xDE,0x7E,0xE2,0x36,0x26,0x03,0x7E,0xE3,0xD9,0xBD,0xE3,0xDE,0x20,0x0E,0xC6,0x03,0xBD,0xE2,0x1A,0xDE,0xF4,0x3C,0xDE,0xE2,0x3C,0x86,0x82,0x36,0xBD,0x00,0xF3,0x8D,0x03,0x7E,0xE5,0x19,0xBD,0xE6,0xB2,0x8D,0x3A,0x08,0xDC,0xA5,0x93,0xE2,0x22,0x02,0xDE,0x93,0xBD,0xE3,0xBB,0x25,0x15,0x09,0xDF,0xF4,0x39,0x26,0xFD,0x86,0xFF,0x97,0xB5,0xBD,0xE1,0xD8,0x35,0x81,0x02,0x27,0x0B,0xC6,0x04,0x8C,0xC6,0x0E,0x7E,0xE2,0x38,0x7E,0xEA,0x3C,0x32,0x38,0xDF,0xE2,0x38,0xDF,0xF4,0x8D,0x03,0xDF,0xF4,0x39,0xC6,0x3A,0x86,0x5F,0xD7,0x80,0x5F,0xDE,0xF4,0x17,0xD6,0x80,0x97,0x80,0xA6,0x00,0x27,0xED,0x11,0x27,0xEA,0x08,0x81,0x22,0x27,0xEF,0x20,0xF2,0xBD,0xE9,0x0C,0xBD,0x00,0xF3,0x81,0x81,0x27,0x05,0xC6,0xA3,0xBD,0xEA,0x31,0x96,0xC9,0x26,0x05,0x8D,0xD2,0xDF,0xF4,0x39,0xBD,0x00,0xF3,0x25,0x8B,0x7E,0xE5,0x44,0xBD,0xEF,0x0D,0x36,0x81,0x82,0x27,0x04,0x81,0x81,0x26,0xA9,0x7A,0x00,0xCD,0x26,0x04,0x32,0x7E,0xE5,0x46,0xBD,0x00,0xEB,0x8D,0x06,0x81,0x2C,0x27,0xEE,0x31,0x39,0xCE,0x00,0x00,0xDF,0xA5,0x24,0xF8,0x80,0x30,0x97,0x80,0xDC,0xA5,0x81,0x18,0x22,0xD9,0x05,0x05,0xD3,0xA5,0x05,0xDB,0x80,0x89,0x00,0xDD,0xA5,0xBD,0x00,0xEB,0x20,0xE4,0xBD,0xEB,0x1B,0xDF,0xB5,0xC6,0xAF,0xBD,0xEA,0x31,0x96,0x84,0x36,0xBD,0xE9,0x1A,0x32,0x46,0xBD,0xE9,0x10,0x27,0x2F,0xDE,0xCC,0xDC,0x9B,0xA3,0x02,0x24,0x13,0xDC,0x95,0x93,0xCC,0x22,0x0D,0xE6,0x00,0xBD,0xEC,0xFC,0xDE,0xC7,0xBD,0xEE,0x38,0xCE,0x00,0xD0,0xDF,0xC7,0xBD,0xEE,0x70,0xDE,0xC7,0xA6,0x00,0x36,0xEC,0x02,0xDE,0xB5,0xED,0x02,0x32,0xA7,0x00,0x39,0x7E,0xF2,0x70,0xBD,0xE4,0x04,0x8D,0x04,0x7F,0x00,0xE8,0x39,0x27,0x3F,0x81,0x40,0x26,0x0B,0xBD,0xFC,0x29,0xBD,0x00,0xF3,0x27,0x33,0xBD,0xEA,0x2F,0x27,0x3B,0x81,0xA1,0x27,0x50,0x81,0x2C,0x27,0x34,0x81,0x3B,0x27,0x5E,0xBD,0xE9,0x1A,0x96,0x84,0x36,0x26,0x06,0xBD,0xF4,0x26,0xBD,0xED,0x05,0x8D,0x57,0x33,0x5D,0x26,0x09,0xBD,0x00,0xF3,0x81,0x2C,0x27,0x15,0x8D,0x58,0xBD,0x00,0xF3,0x26,0xD2,0x86,0x0D,0x20,0x54,0xBD,0xFA,0x7B,0x27,0xF7,0x96,0xE6,0x26,0xF3,0x39,0xBD,0xFA,0x7B,0x27,0x0A,0xD6,0xE6,0xD1,0xE5,0x25,0x06,0x8D,0xE5,0x20,0x1F,0xD6,0xE6,0xD0,0xE4,0x24,0xFC,0x50,0x20,0x11,0xBD,0xEF,0x0A,0x81,0x29,0x27,0x03,0x7E,0xEA,0x3C,0xBD,0xFA,0x7B,0xD0,0xE6,0x23,0x05,0x8D,0x1A,0x5A,0x26,0xFB,0xBD,0x00,0xEB,0x7E,0xE7,0x36,0xBD,0xED,0x06,0xBD,0xEE,0x56,0x5C,0x5A,0x27,0xC1,0xA6,0x00,0x08,0x8D,0x07,0x20,0xF6,0x86,0x20,0x8C,0x86,0x3F,0x7E,0xF9,0xC6,0x3F,0x52,0x45,0x44,0x4F,0x0D,0x00,0x96,0x87,0x27,0x07,0xDE,0xAB,0xDF,0xE2,0x7E,0xEA,0x3C,0xCE,0xE7,0xC0,0xBD,0xE7,0xA8,0xDE,0xA9,0xDF,0xF4,0x39,0xC6,0x16,0xDE,0xE2,0x08,0x26,0x03,0x7E,0xE2,0x38,0x81,0x22,0x26,0x0B,0xBD,0xEA,0x07,0xC6,0x3B,0xBD,0xEA,0x31,0xBD,0xE7,0xAB,0x8D,0x06,0xC6,0x2C,0xE7,0x00,0x20,0x12,0xBD,0xE7,0xBC,0xBD,0xE7,0xB9,0xBD,0xFA,0xA4,0x24,0xD3,0x38,0x7E,0xE5,0x85,0xDE,0xAD,0x86,0x4F,0x97,0x87,0xDF,0xAF,0xBD,0xEB,0x1B,0xDF,0xB5,0xDE,0xF4,0xDF,0xA5,0xDE,0xAF,0xA6,0x00,0x26,0x09,0x96,0x87,0x26,0x4E,0xBD,0xE7,0xBC,0x8D,0xD1,0xDF,0xF4,0xBD,0x00,0xEB,0xD6,0x84,0x27,0x1C,0xDE,0xF4,0x97,0x80,0x81,0x22,0x27,0x07,0x09,0x86,0x3A,0x97,0x80,0x86,0x2C,0x97,0x81,0xBD,0xED,0x0C,0xBD,0xEF,0x3E,0xBD,0xE6,0xEA,0x20,0x06,0xBD,0xF3,0x59,0xBD,0xF2,0x70,0xBD,0x00,0xF3,0x27,0x07,0x81,0x2C,0x27,0x03,0x7E,0xE7,0xC8,0xDE,0xF4,0xDF,0xAF,0xDE,0xA5,0xDF,0xF4,0xBD,0x00,0xF3,0x27,0x25,0xBD,0xEA,0x2F,0x20,0x9F,0xDF,0xF4,0xBD,0xE6,0x56,0x08,0x4D,0x26,0x0F,0xC6,0x06,0xA6,0x00,0xAA,0x01,0x27,0x46,0xEC,0x02,0xDD,0xAB,0xC6,0x04,0x3A,0xA6,0x00,0x81,0x85,0x26,0xE2,0x20,0x97,0xDE,0xAF,0xD6,0x87,0x27,0x03,0x7E,0xE5,0x63,0xA6,0x00,0x27,0x06,0xCE,0xE8,0xAA,0x7E,0xE7,0xA8,0x39,0x3F,0x45,0x58,0x54,0x52,0x41,0x20,0x49,0x47,0x4E,0x4F,0x52,0x45,0x44,0x0D,0x00,0x26,0x05,0xCE,0x00,0x00,0x20,0x03,0xBD,0xEB,0x1B,0xDF,0xB5,0xBD,0xE1,0xD8,0x27,0x04,0xC6,0x00,0x20,0x47,0x35,0x08,0x08,0x08,0xBD,0xF2,0x51,0x30,0xA6,0x08,0x97,0xCE,0xDE,0xB5,0xBD,0xEF,0x7D,0xBD,0xF2,0x70,0x30,0xC6,0x09,0x3A,0xBD,0xF2,0xD9,0x30,0xE0,0x08,0x27,0x0C,0xEE,0x0E,0xDF,0xE2,0x30,0xEE,0x10,0xDF,0xF4,0x7E,0xE5,0x19,0xC6,0x12,0x3A,0x35,0xBD,0x00,0xF3,0x81,0x2C,0x26,0xF2,0xBD,0x00,0xEB,0x8D,0xB6,0x8D,0x0C,0x6D,0x0D,0x76,0x00,0x84,0x28,0x95,0xC6,0x18,0x7E,0xE2,0x38,0xDE,0xF4,0x09,0xDF,0xF4,0x4F,0xC6,0x37,0x36,0xC6,0x01,0xBD,0xE2,0x1A,0xBD,0xE9,0xE5,0x7F,0x00,0xB9,0xBD,0x00,0xF3,0x80,0xAE,0x25,0x14,0x81,0x03,0x24,0x10,0x81,0x01,0x49,0x98,0xB9,0x91,0xB9,0x25,0x59,0x97,0xB9,0xBD,0x00,0xEB,0x20,0xE8,0xD6,0xB9,0x26,0x2B,0x24,0x66,0x8B,0x07,0x24,0x62,0x99,0x84,0x26,0x03,0x7E,0xEE,0x06,0x89,0xFF,0x16,0x48,0x1B,0x16,0xCE,0xE0,0x30,0x3A,0x32,0xA1,0x00,0x24,0x53,0x8D,0xA3,0x36,0x8D,0x23,0xDE,0xB7,0x32,0x26,0x18,0x4D,0x27,0x6C,0x20,0x4D,0x78,0x00,0x84,0x59,0xDE,0xF4,0x09,0xDF,0xF4,0xCE,0xE9,0x88,0xD7,0xB9,0x20,0xDC,0x64,0xEA,0xAE,0xA1,0x00,0x24,0x36,0x20,0xDA,0xEC,0x01,0x37,0x36,0x8D,0x07,0xD6,0xB9,0x20,0x86,0x7E,0xEA,0x3C,0xD6,0xCE,0xA6,0x00,0x38,0x37,0xD6,0xCD,0x37,0xD6,0xCC,0x37,0xD6,0xCB,0x37,0xD6,0xCA,0x37,0xD6,0xC9,0x37,0x6E,0x00,0xCE,0x00,0x00,0x32,0x4D,0x27,0x26,0x81,0x64,0x27,0x03,0xBD,0xE9,0x0E,0xDF,0xB7,0x33,0x81,0x5A,0x27,0x1A,0x81,0x7D,0x27,0x16,0x54,0xD7,0x88,0x32,0x33,0xDD,0xD6,0x38,0xDF,0xD8,0x33,0xD7,0xDA,0x33,0xD7,0xDB,0xD8,0xCE,0xD7,0xDC,0xD6,0xC9,0x39,0xBD,0x42,0x94,0x7F,0x00,0x84,0x8D,0x4C,0x24,0x03,0x7E,0xF3,0x59,0xBD,0xEB,0x76,0x24,0x52,0x81,0x2E,0x27,0xF4,0x81,0xA8,0x27,0x42,0x81,0xA7,0x27,0xE2,0x81,0x22,0x26,0x08,0xDE,0xF4,0xBD,0xED,0x06,0x7E,0xEF,0x3E,0x81,0xA4,0x26,0x0D,0x86,0x5A,0xBD,0xE9,0x21,0xBD,0xEB,0xC7,0x43,0x53,0x7E,0xEC,0xE3,0x80,0xB1,0x24,0x31,0x8D,0x06,0xBD,0xE9,0x1A,0xC6,0x29,0x8C,0xC6,0x28,0x8C,0xC6,0x2C,0x3C,0xDE,0xF4,0xE1,0x00,0x38,0x26,0x03,0x7E,0x00,0xEB,0xC6,0x02,0x7E,0xE2,0x38,0x86,0x7D,0xBD,0xE9,0x21,0x7E,0xF5,0x93,0xBD,0xEB,0x1B,0xDF,0xCC,0x96,0x84,0x26,0x92,0x7E,0xF2,0x51,0x16,0x58,0x8D,0xE0,0x37,0xC1,0x22,0x25,0x21,0xC1,0x2C,0x24,0x1F,0x8D,0xC8,0x33,0xC1,0x28,0x24,0x19,0x37,0xBD,0xE9,0x1A,0x8D,0xC0,0xBD,0xE9,0x0F,0x32,0xDE,0xCC,0x3C,0x36,0xBD,0xEF,0x0D,0x32,0x37,0x16,0x20,0x03,0x8D,0xA3,0x33,0xCE,0xE0,0x00,0x3A,0xEE,0x00,0xAD,0x00,0x7E,0xE9,0x0E,0x86,0x4F,0x97,0x82,0xBD,0xEB,0xC7,0xDD,0x80,0xBD,0xF2,0x8B,0xBD,0xEB,0xC7,0x7D,0x00,0x82,0x26,0x06,0x94,0x80,0xD4,0x81,0x20,0x04,0x9A,0x80,0xDA,0x81,0x7E,0xEC,0xE3,0xBD,0xE9,0x10,0x26,0x10,0x96,0xDB,0x8A,0x7F,0x94,0xD7,0x97,0xD7,0xCE,0x00,0xD6,0xBD,0xF2,0xD9,0x20,0x40,0x7F,0x00,0x84,0x7A,0x00,0xB9,0xBD,0xEE,0x56,0xD7,0xD0,0xDF,0xD2,0xDE,0xD9,0xBD,0xEE,0x58,0x96,0xD0,0x10,0x27,0x07,0x86,0x01,0x24,0x03,0xD6,0xD0,0x40,0x97,0xCE,0x07,0x36,0x9F,0x91,0x0F,0x35,0xDE,0xD2,0x5C,0x09,0x5A,0x26,0x04,0xD6,0xCE,0x20,0x0B,0x32,0x08,0xA1,0x00,0x27,0xF3,0xC6,0xFF,0x24,0x01,0x50,0x9E,0x91,0x32,0x06,0xCB,0x01,0x59,0xD4,0x88,0x27,0x02,0xC6,0xFF,0x7E,0xF2,0xBC,0xBD,0xEA,0x2F,0x16,0x8D,0x0A,0xBD,0x00,0xF3,0x26,0xF5,0x39,0x5F,0xBD,0x00,0xF3,0xD7,0x83,0x97,0xB1,0xBD,0x00,0xF3,0x8D,0x4E,0x24,0x03,0x7E,0xEA,0x3C,0x5F,0xD7,0x84,0xBD,0x00,0xEB,0x25,0x04,0x8D,0x3F,0x25,0x0A,0x16,0xBD,0x00,0xEB,0x25,0xFB,0x8D,0x35,0x24,0xF7,0x81,0x24,0x26,0x08,0x73,0x00,0x84,0xCB,0x80,0xBD,0x00,0xEB,0xD7,0xB2,0xD6,0x86,0x5A,0x26,0x03,0x7E,0xEC,0x07,0x9B,0x86,0x80,0x28,0x26,0x03,0x7E,0xEB,0xDE,0x7F,0x00,0x86,0xDE,0x95,0x9C,0x97,0x27,0x14,0xDC,0xB1,0xA3,0x00,0x27,0x3F,0xC6,0x07,0x3A,0x20,0xF1,0x81,0x41,0x25,0x04,0x80,0x5B,0x80,0xA5,0x39,0x38,0x3C,0x8C,0xEA,0x4C,0x26,0x04,0xCE,0xEB,0xB7,0x39,0xDC,0x99,0xDD,0xBD,0xC3,0x00,0x07,0xDD,0xBB,0xDE,0x97,0xDF,0xC1,0xBD,0xE1,0xFE,0xDE,0xBB,0xDF,0x99,0xDE,0xBF,0xDF,0x97,0xDE,0xC1,0xDC,0xB1,0xED,0x00,0x4F,0x5F,0xED,0x02,0xED,0x04,0xA7,0x06,0x08,0x08,0xDF,0xB3,0x39,0x90,0x80,0x00,0x00,0x00,0xBD,0x00,0xEB,0xBD,0xE9,0x0C,0xBD,0xE9,0x0E,0x96,0xCE,0x2B,0x67,0xBD,0xE9,0x0E,0x96,0xC9,0x81,0x90,0x25,0x08,0xCE,0xEB,0xB5,0xBD,0xF2,0xD9,0x26,0x56,0xBD,0xF3,0x0B,0xDC,0xCC,0x39,0xDE,0x83,0x3C,0x5F,0x37,0xDE,0xB1,0x3C,0x8D,0xD2,0x38,0xDF,0xB1,0x33,0x5C,0xD7,0x82,0x32,0x33,0xDE,0xCC,0x3C,0x37,0x36,0xD6,0x82,0xBD,0x00,0xF3,0x81,0x2C,0x27,0xE3,0xBD,0xEA,0x29,0x38,0xDF,0x83,0xC6,0xFF,0x37,0xDE,0x97,0x9C,0x99,0x27,0x25,0xDC,0xB1,0xA3,0x00,0x27,0x07,0xEC,0x02,0xBD,0xE2,0x2D,0x20,0xEF,0xC6,0x12,0x32,0x4D,0x27,0xBC,0x96,0x83,0x26,0x0B,0xD6,0x82,0xE1,0x04,0x27,0x5C,0xC6,0x10,0x8C,0xC6,0x08,0x7E,0xE2,0x38,0x32,0x4D,0x27,0xF7,0xCC,0x00,0x05,0xDD,0xDE,0xDC,0xB1,0xED,0x00,0xD6,0x82,0xE7,0x04,0xBD,0xE2,0x1A,0xDF,0xBB,0xC6,0x0B,0x4F,0x7D,0x00,0x83,0x27,0x05,0x32,0x33,0xC3,0x00,0x01,0xED,0x05,0x8D,0x5F,0xDD,0xDE,0x08,0x08,0x7A,0x00,0x82,0x26,0xE6,0xBD,0xE2,0x2D,0x24,0x03,0x7E,0xE2,0x36,0xBD,0xE2,0x1E,0x83,0x00,0x35,0xDD,0x99,0x4F,0x09,0xA7,0x05,0x9C,0x89,0x26,0xF9,0xDE,0xBB,0x96,0x99,0x93,0xBB,0xED,0x02,0x96,0x83,0x26,0x31,0xE6,0x04,0xD7,0x82,0x4F,0x5F,0xDD,0xDE,0x32,0x33,0xDD,0xCC,0x37,0x36,0xA3,0x05,0x24,0x3F,0xDC,0xDE,0x32,0x33,0x27,0x04,0x8D,0x18,0xD3,0xCC,0x08,0x08,0x7A,0x00,0x82,0x26,0xE3,0xDD,0x89,0x05,0x05,0xD3,0x89,0xC3,0x00,0x05,0xBD,0xE2,0x2D,0xDF,0xB3,0x39,0x86,0x10,0x97,0xBF,0xEC,0x05,0xDD,0x91,0x4F,0x5F,0x05,0x25,0x12,0x78,0x00,0xDF,0x79,0x00,0xDE,0x24,0x04,0xD3,0x91,0x25,0x06,0x7A,0x00,0xBF,0x26,0xEC,0x39,0x7E,0xEC,0x2B,0x9F,0x91,0xDC,0x91,0x93,0x99,0x21,0x4F,0x7F,0x00,0x84,0xDD,0xCA,0xC6,0x90,0x7E,0xF2,0xC3,0xBD,0xE9,0x0E,0xCE,0x43,0x34,0xBD,0xF4,0x29,0x38,0xCE,0x43,0x33,0x20,0x0A,0xDF,0xC7,0x8D,0x5F,0xDF,0xD2,0xD7,0xD0,0x39,0x09,0x86,0x22,0x97,0x80,0x97,0x81,0x08,0xDF,0xDC,0xDF,0xD2,0xC6,0xFF,0x5C,0xA6,0x00,0x27,0x0E,0x08,0x91,0x80,0x27,0x04,0x91,0x81,0x26,0xF2,0x81,0x22,0x27,0x01,0x09,0xDF,0xDE,0xD7,0xD0,0x37,0xDC,0xDC,0x83,0x43,0x34,0x33,0x22,0x07,0x8D,0xC7,0xDE,0xDC,0xBD,0xEE,0x3A,0xFE,0x42,0x3D,0x8C,0x42,0x50,0x26,0x05,0xC6,0x1E,0x7E,0xE2,0x38,0x96,0xD0,0xA7,0x00,0xDC,0xD2,0xED,0x02,0x86,0xFF,0x97,0x84,0xFF,0x42,0x3F,0xDF,0xCC,0xC6,0x05,0x3A,0xFF,0x42,0x3D,0x39,0x7F,0x00,0x85,0x37,0x4F,0xDD,0x89,0xDC,0x9D,0x93,0x89,0x93,0x9B,0x25,0x0B,0xD3,0x9B,0xDD,0x9D,0xDE,0x9D,0x08,0xDF,0x9F,0x33,0x39,0xC6,0x1A,0x73,0x00,0x85,0x27,0xC4,0x8D,0x03,0x33,0x20,0xDD,0xDE,0xA1,0xDF,0x9D,0x4F,0x5F,0xDD,0xC5,0xDE,0x9B,0xDF,0xC1,0xCE,0x42,0x41,0xBC,0x42,0x3D,0x27,0x04,0x8D,0x32,0x20,0xF7,0xDE,0x95,0x9C,0x97,0x27,0x04,0x8D,0x22,0x20,0xF8,0xDF,0xBB,0xDE,0xBB,0x9C,0x99,0x27,0x38,0xEC,0x02,0xD3,0xBB,0xDD,0xBB,0xA6,0x01,0x2A,0xF0,0xE6,0x04,0x58,0xCB,0x05,0x3A,0x9C,0xBB,0x27,0xE8,0x8D,0x08,0x20,0xF8,0xA6,0x01,0x08,0x08,0x2A,0x16,0xE6,0x00,0x27,0x12,0xEC,0x02,0x93,0x9D,0x22,0x0C,0xEC,0x02,0x93,0xC1,0x23,0x06,0xDF,0xC5,0xEC,0x02,0xDD,0xC1,0xC6,0x05,0x3A,0x39,0xDE,0xC5,0x27,0xFB,0x4F,0xE6,0x00,0x5A,0xD3,0xC1,0xDD,0xBD,0xDE,0x9D,0xDF,0xBB,0xBD,0xE2,0x00,0xDE,0xC5,0xDC,0xBF,0xED,0x02,0xDE,0xBF,0x09,0x7E,0xED,0x87,0xDE,0xCC,0x3C,0xBD,0xE9,0xE5,0xBD,0xE9,0x0F,0x38,0xDF,0xDC,0xE6,0x00,0xDE,0xCC,0xEB,0x00,0x24,0x05,0xC6,0x1C,0x7E,0xE2,0x38,0xBD,0xEC,0xFC,0xDE,0xDC,0xE6,0x00,0x8D,0x10,0xDE,0xC7,0x8D,0x2C,0x8D,0x0C,0xDE,0xDC,0x8D,0x26,0xBD,0xED,0x3A,0x7E,0xE9,0x2E,0xEE,0x02,0x07,0x36,0x9F,0x91,0x0F,0x35,0xDE,0x9F,0x5C,0x20,0x04,0x32,0xA7,0x00,0x08,0x5A,0x26,0xF9,0xDF,0x9F,0x9E,0x91,0x32,0x06,0x39,0xBD,0xE9,0x0F,0xDE,0xCC,0xE6,0x00,0x8D,0x14,0x26,0x0F,0xEE,0x07,0x09,0x9C,0x9D,0x26,0x06,0x37,0xD3,0x9D,0xDD,0x9D,0x33,0x08,0x39,0xEE,0x02,0x39,0xBC,0x42,0x3F,0x26,0x0C,0xFF,0x42,0x3D,0x09,0x09,0x09,0x09,0x09,0xFF,0x42,0x3F,0x4F,0x39,0x8D,0x03,0x7E,0xEC,0xE2,0x8D,0xCA,0x7F,0x00,0x84,0x5D,0x39,0xBD,0xEF,0x10,0xC6,0x01,0xBD,0xED,0x5F,0x96,0xCD,0xBD,0xED,0x00,0xA7,0x00,0x31,0x31,0x7E,0xED,0x3A,0x8D,0x02,0x20,0xDE,0x8D,0xDF,0x27,0x5D,0xE6,0x00,0x39,0x8D,0x43,0x4F,0xE1,0x00,0x23,0x03,0xE6,0x00,0x4F,0x37,0x36,0xBD,0xEC,0xFE,0xDE,0xC7,0x8D,0x98,0x33,0x3A,0x33,0xBD,0xEE,0x3A,0x20,0xD7,0x8D,0x28,0xA6,0x00,0x10,0x20,0xE1,0xC6,0xFF,0xD7,0xCD,0x8D,0x44,0x81,0x29,0x27,0x03,0xBD,0xEF,0x47,0x8D,0x14,0x27,0x27,0x5F,0x4A,0xA1,0x00,0x24,0xD1,0x16,0xE0,0x00,0x50,0xD1,0xCD,0x23,0xC9,0xD6,0xCD,0x20,0xC5,0xBD,0xEA,0x29,0x30,0xEC,0x05,0xDD,0xC7,0xEC,0x00,0xED,0x05,0x31,0x31,0x31,0x31,0x32,0xDE,0xC7,0x16,0x39,0x7E,0xEC,0x2E,0xBD,0x00,0xEB,0xBD,0xE9,0x0C,0xBD,0xEB,0xC0,0x96,0xCC,0x26,0xF0,0xD6,0xCD,0x7E,0x00,0xF3,0xBD,0xEE,0x87,0x26,0x03,0x7E,0xEF,0xF4,0xBD,0xE2,0x2C,0xA6,0x00,0x36,0x6F,0x00,0xDE,0xF4,0xDF,0xDE,0xDE,0x89,0xDF,0xF4,0x8D,0xE3,0xBD,0xF3,0x59,0x32,0xDE,0x8B,0xA7,0x00,0xDE,0xDE,0xDF,0xF4,0x39,0x8D,0x07,0xDF,0xA5,0xBD,0xEA,0x2F,0x20,0xC1,0xBD,0xE9,0x0C,0x96,0xCE,0x2B,0xB4,0x96,0xC9,0x81,0x90,0x22,0xAE,0xBD,0xF3,0x0B,0xDE,0xCC,0x39,0x8D,0xEE,0xE6,0x00,0x7E,0xEC,0xE2,0x8D,0xDB,0xDE,0xA5,0xE7,0x00,0x39,0xCE,0xF5,0x24,0x20,0x0B,0xBD,0xF1,0x60,0x73,0x00,0xCE,0x73,0x00,0xDC,0x20,0x03,0xBD,0xF1,0x60,0x5D,0x26,0x03,0x7E,0xF2,0x8B,0xCE,0x00,0xD6,0x16,0x27,0x6D,0xD0,0xC9,0x27,0x6A,0x2B,0x0A,0x97,0xC9,0x96,0xDB,0x97,0xCE,0xCE,0x00,0xC9,0x50,0xC1,0xF8,0x2F,0x5A,0x4F,0x64,0x01,0xBD,0xF0,0x80,0xD6,0xDC,0x2A,0x0B,0x63,0x01,0x63,0x02,0x63,0x03,0x63,0x04,0x43,0x89,0x00,0x97,0xDD,0x96,0xCD,0x99,0xDA,0x97,0xCD,0x96,0xCC,0x99,0xD9,0x97,0xCC,0x96,0xCB,0x99,0xD8,0x97,0xCB,0x96,0xCA,0x99,0xD7,0x97,0xCA,0x17,0x2A,0x47,0x25,0x02,0x8D,0x66,0x5F,0x96,0xCA,0x26,0x34,0x96,0xCB,0x97,0xCA,0x96,0xCC,0x97,0xCB,0x96,0xCD,0x97,0xCC,0x96,0xDD,0x97,0xCD,0x7F,0x00,0xDD,0xCB,0x08,0xC1,0x28,0x2D,0xE3,0x4F,0x97,0xC9,0x97,0xCE,0x39,0x8D,0x78,0x0C,0x20,0xA7,0x5C,0x78,0x00,0xDD,0x79,0x00,0xCD,0x79,0x00,0xCC,0x79,0x00,0xCB,0x79,0x00,0xCA,0x2A,0xEE,0x96,0xC9,0x10,0x97,0xC9,0x23,0xDC,0x8C,0x25,0x09,0x78,0x00,0xDD,0x86,0x00,0x97,0xDD,0x20,0x11,0x7C,0x00,0xC9,0x27,0x2F,0x76,0x00,0xCA,0x76,0x00,0xCB,0x76,0x00,0xCC,0x76,0x00,0xCD,0x24,0x04,0x8D,0x12,0x27,0xE9,0x39,0x73,0x00,0xCE,0x73,0x00,0xCA,0x73,0x00,0xCB,0x73,0x00,0xCC,0x73,0x00,0xCD,0xDE,0xCC,0x08,0xDF,0xCC,0x26,0x05,0xDE,0xCA,0x08,0xDF,0xCA,0x39,0xC6,0x0A,0x7E,0xE2,0x38,0xCE,0x00,0x8C,0xA6,0x04,0x97,0xDD,0xA6,0x03,0xA7,0x04,0xA6,0x02,0xA7,0x03,0xA6,0x01,0xA7,0x02,0x96,0xD5,0xA7,0x01,0xCB,0x08,0x2F,0xE8,0x96,0xDD,0xC0,0x08,0x27,0x0C,0x67,0x01,0x66,0x02,0x66,0x03,0x66,0x04,0x46,0x5C,0x26,0xF4,0x39,0x81,0x00,0x00,0x00,0x00,0x03,0x7F,0x5E,0x56,0xCB,0x79,0x80,0x13,0x9B,0x0B,0x64,0x80,0x76,0x38,0x93,0x16,0x82,0x38,0xAA,0x3B,0x20,0x80,0x35,0x04,0xF3,0x34,0x81,0x35,0x04,0xF3,0x34,0x80,0x80,0x00,0x00,0x00,0x80,0x31,0x72,0x17,0xF8,0xBD,0xF2,0xAD,0x2E,0x03,0x7E,0xEC,0x2E,0xCE,0xF0,0xA5,0x96,0xC9,0x80,0x80,0x36,0x86,0x80,0x97,0xC9,0xBD,0xEF,0x7D,0xCE,0xF0,0xAA,0xBD,0xF1,0xC6,0xCE,0xF0,0x8B,0xBD,0xEF,0x72,0xCE,0xF0,0x90,0xBD,0xF5,0xF8,0xCE,0xF0,0xAF,0xBD,0xEF,0x7D,0x33,0xBD,0xF3,0xE9,0xCE,0xF0,0xB4,0x8D,0x6F,0x27,0x6C,0xBD,0xF1,0x79,0x86,0x00,0x97,0x8D,0x97,0x8E,0x97,0x8F,0x97,0x90,0xD6,0xCD,0x8D,0x26,0xD6,0xDD,0xF7,0x42,0x55,0xD6,0xCC,0x8D,0x1D,0xD6,0xDD,0xF7,0x42,0x54,0xD6,0xCB,0x8D,0x14,0xD6,0xDD,0xF7,0x42,0x53,0xD6,0xCA,0x8D,0x10,0xD6,0xDD,0xF7,0x42,0x52,0xBD,0xF2,0x48,0x7E,0xEF,0xD6,0x26,0x03,0x7E,0xF0,0x5D,0x0D,0x96,0x8D,0x56,0x27,0x2A,0x24,0x16,0x96,0x90,0x9B,0xDA,0x97,0x90,0x96,0x8F,0x99,0xD9,0x97,0x8F,0x96,0x8E,0x99,0xD8,0x97,0x8E,0x96,0x8D,0x99,0xD7,0x46,0x97,0x8D,0x76,0x00,0x8E,0x76,0x00,0x8F,0x76,0x00,0x90,0x76,0x00,0xDD,0x0C,0x20,0xD1,0x39,0xEC,0x01,0x97,0xDB,0x8A,0x80,0xDD,0xD7,0xD6,0xDB,0xD8,0xCE,0xD7,0xDC,0xEC,0x03,0xDD,0xD9,0xA6,0x00,0x97,0xD6,0xD6,0xC9,0x39,0x4D,0x27,0x19,0x9B,0xC9,0x46,0x49,0x28,0x13,0x8B,0x80,0x97,0xC9,0x26,0x03,0x7E,0xEF,0xF7,0x96,0xDC,0x97,0xCE,0x39,0x96,0xCE,0x43,0x20,0x02,0x32,0x32,0x2B,0x03,0x7E,0xEF,0xF4,0x7E,0xF0,0x58,0xBD,0xF2,0x9F,0x27,0x0F,0x8B,0x02,0x25,0xF4,0x7F,0x00,0xDC,0xBD,0xEF,0x89,0x7C,0x00,0xC9,0x27,0xE9,0x39,0x84,0x20,0x00,0x00,0x00,0xBD,0xF2,0x9F,0xCE,0xF1,0xB4,0x5F,0xD7,0xDC,0xBD,0xF2,0x51,0x8C,0x8D,0x98,0x27,0x79,0x70,0x00,0xC9,0x8D,0xAA,0x7C,0x00,0xC9,0x27,0xC8,0xCE,0x00,0x8D,0xC6,0x04,0xD7,0x82,0xC6,0x01,0x96,0xCA,0x91,0xD7,0x26,0x13,0x96,0xCB,0x91,0xD8,0x26,0x0D,0x96,0xCC,0x91,0xD9,0x26,0x07,0x96,0xCD,0x91,0xDA,0x26,0x01,0x0D,0x07,0x59,0x24,0x0C,0xE7,0x00,0x08,0x7A,0x00,0x82,0x2B,0x37,0x27,0x31,0xC6,0x01,0x06,0x25,0x12,0x78,0x00,0xDA,0x79,0x00,0xD9,0x79,0x00,0xD8,0x79,0x00,0xD7,0x25,0xDF,0x2B,0xC4,0x20,0xDB,0x96,0xDA,0x90,0xCD,0x97,0xDA,0x96,0xD9,0x92,0xCC,0x97,0xD9,0x96,0xD8,0x92,0xCB,0x97,0xD8,0x96,0xD7,0x92,0xCA,0x97,0xD7,0x20,0xD4,0xC6,0x40,0x20,0xCD,0x56,0x56,0x56,0xD7,0xDD,0x8D,0x08,0x7E,0xEF,0xD6,0xC6,0x14,0x7E,0xE2,0x38,0xDE,0x8D,0xDF,0xCA,0xDE,0x8F,0xDF,0xCC,0x39,0x36,0xEC,0x01,0x97,0xCE,0x8A,0x80,0xDD,0xCA,0x7F,0x00,0xDD,0xE6,0x00,0xEE,0x03,0xDF,0xCC,0xD7,0xC9,0x32,0x39,0xCE,0x00,0xBF,0x20,0x06,0xCE,0x00,0xBA,0x8C,0xDE,0xB5,0x96,0xC9,0xA7,0x00,0x96,0xCE,0x8A,0x7F,0x94,0xCA,0xA7,0x01,0x96,0xCB,0xA7,0x02,0x96,0xCC,0xA7,0x03,0x96,0xCD,0xA7,0x04,0x39,0x96,0xDB,0x97,0xCE,0xDE,0xD6,0xDF,0xC9,0x7F,0x00,0xDD,0xDE,0xD8,0xDF,0xCB,0xDE,0xD9,0xDF,0xCC,0x39,0xDC,0xC9,0xDD,0xD6,0xDE,0xCB,0xDF,0xD8,0xDE,0xCD,0xDF,0xDA,0x4D,0x39,0xD6,0xC9,0x27,0x08,0xD6,0xCE,0x59,0xC6,0xFF,0x25,0x01,0x50,0x39,0x8D,0xF1,0xD7,0xCA,0x7F,0x00,0xCB,0xC6,0x88,0x96,0xCA,0x80,0x80,0xD7,0xC9,0x86,0x00,0x16,0xDD,0xCC,0x97,0xDD,0x97,0xCE,0x7E,0xEF,0xD2,0x7F,0x00,0xCE,0x39,0xE6,0x00,0x27,0xD0,0xE6,0x01,0xD8,0xCE,0x2B,0xCE,0xD6,0xC9,0xE1,0x00,0x26,0x1D,0xE6,0x01,0xCA,0x7F,0xD4,0xCA,0xE1,0x01,0x26,0x13,0xD6,0xCB,0xE1,0x02,0x26,0x0D,0xD6,0xCC,0xE1,0x03,0x26,0x07,0xD6,0xCD,0xE0,0x04,0x26,0x01,0x39,0x56,0xD8,0xCE,0x20,0xA8,0xD6,0xC9,0x27,0x41,0xC0,0xA0,0x96,0xCE,0x2A,0x06,0x73,0x00,0xD5,0xBD,0xF0,0x3F,0xCE,0x00,0xC9,0xC1,0xF8,0x2E,0x07,0xBD,0xF0,0x74,0x7F,0x00,0xD5,0x39,0x7F,0x00,0xD5,0x96,0xCE,0x49,0x76,0x00,0xCA,0x7E,0xF0,0x80,0xD6,0xC9,0xC1,0xA0,0x24,0x1D,0x8D,0xCE,0xD7,0xDD,0x96,0xCE,0xD7,0xCE,0x80,0x80,0x86,0xA0,0x97,0xC9,0x96,0xCD,0x97,0x80,0x7E,0xEF,0xD2,0xD7,0xCA,0xD7,0xCB,0xD7,0xCC,0xD7,0xCD,0x39,0xBD,0x42,0x9D,0xCE,0x00,0x00,0xDF,0xCE,0xDF,0xC9,0xDF,0xCB,0xDF,0xCC,0xDF,0xC1,0xDF,0xBF,0x25,0x6B,0x81,0x2D,0x26,0x05,0x73,0x00,0xCF,0x20,0x04,0x81,0x2B,0x26,0x05,0xBD,0x00,0xEB,0x25,0x59,0x81,0x2E,0x27,0x2D,0x81,0x45,0x26,0x2E,0xBD,0x00,0xEB,0x25,0x69,0x81,0xA8,0x27,0x0E,0x81,0x2D,0x27,0x0A,0x81,0xA7,0x27,0x09,0x81,0x2B,0x27,0x05,0x20,0x08,0x73,0x00,0xC2,0xBD,0x00,0xEB,0x25,0x4F,0x7D,0x00,0xC2,0x27,0x0A,0x70,0x00,0xC1,0x20,0x05,0x73,0x00,0xC0,0x26,0xC5,0x96,0xC1,0x90,0xBF,0x97,0xC1,0x27,0x14,0x2A,0x0A,0xBD,0xF1,0xB9,0x7C,0x00,0xC1,0x26,0xF8,0x20,0x08,0xBD,0xF1,0x9F,0x7A,0x00,0xC1,0x26,0xF8,0x96,0xCF,0x2A,0x83,0x7E,0xF5,0x93,0xD6,0xBF,0xD0,0xC0,0xD7,0xBF,0x36,0xBD,0xF1,0x9F,0x33,0xC0,0x30,0x8D,0x02,0x20,0x91,0xBD,0xF2,0x6C,0xBD,0xF2,0xBC,0xCE,0x00,0xBA,0x7E,0xEF,0x7D,0xD6,0xC1,0x58,0x58,0xDB,0xC1,0x58,0x80,0x30,0x1B,0x97,0xC1,0x20,0x9E,0x9B,0x3E,0xBC,0x1F,0xFD,0x9E,0x6E,0x6B,0x27,0xFD,0x9E,0x6E,0x6B,0x28,0x00,0xCE,0xE1,0xB6,0x8D,0x0C,0xDC,0xE2,0xDD,0xCA,0xC6,0x90,0x0D,0xBD,0xF2,0xC7,0x8D,0x03,0x7E,0xE7,0xA8,0xCE,0x43,0x35,0x86,0x20,0xD6,0xCE,0x2A,0x02,0x86,0x2D,0xA7,0x00,0x97,0xCE,0xDF,0xDE,0x08,0x86,0x30,0xD6,0xC9,0x26,0x03,0x7E,0xF5,0x1C,0x4F,0xC1,0x80,0x22,0x08,0xCE,0xF4,0x0D,0xBD,0xF0,0xEF,0x86,0xF7,0x97,0xBF,0xCE,0xF4,0x08,0xBD,0xF2,0xE3,0x2E,0x10,0xCE,0xF4,0x03,0xBD,0xF2,0xE3,0x2E,0x10,0xBD,0xF1,0x9F,0x7A,0x00,0xBF,0x20,0xF0,0xBD,0xF1,0xB9,0x7C,0x00,0xBF,0x20,0xE0,0xBD,0xEF,0x6D,0xBD,0xF3,0x0B,0xC6,0x01,0x96,0xBF,0x8B,0x0A,0x2B,0x08,0x81,0x0B,0x24,0x04,0x4A,0x16,0x86,0x02,0x4A,0x4A,0x97,0xC1,0xD7,0xBF,0x2E,0x11,0xDE,0xDE,0x86,0x2E,0x08,0xA7,0x00,0x5D,0x27,0x05,0x86,0x30,0x08,0xA7,0x00,0xDF,0xDE,0xCE,0xF5,0x29,0xC6,0x80,0x96,0xCD,0xAB,0x03,0x97,0xCD,0x96,0xCC,0xA9,0x02,0x97,0xCC,0x96,0xCB,0xA9,0x01,0x97,0xCB,0x96,0xCA,0xA9,0x00,0x97,0xCA,0x5C,0x56,0x59,0x28,0xE3,0x24,0x03,0xC0,0x0B,0x50,0xCB,0x2F,0x08,0x08,0x08,0x08,0xDF,0xB3,0xDE,0xDE,0x08,0x17,0x84,0x7F,0xA7,0x00,0x7A,0x00,0xBF,0x26,0x05,0x86,0x2E,0x08,0xA7,0x00,0xDF,0xDE,0xDE,0xB3,0x53,0xC4,0x80,0x8C,0xF5,0x4D,0x26,0xB8,0xDE,0xDE,0xA6,0x00,0x09,0x81,0x30,0x27,0xF9,0x81,0x2E,0x27,0x01,0x08,0x86,0x2B,0xD6,0xC1,0x27,0x1E,0x2A,0x03,0x86,0x2D,0x50,0xA7,0x02,0x86,0x45,0xA7,0x01,0x86,0x2F,0x4C,0xC0,0x0A,0x24,0xFB,0xCB,0x3A,0xA7,0x03,0xE7,0x04,0x6F,0x05,0x20,0x04,0xA7,0x00,0x6F,0x01,0xCE,0x43,0x35,0x39,0x80,0x00,0x00,0x00,0x00,0xFA,0x0A,0x1F,0x00,0x00,0x98,0x96,0x80,0xFF,0xF0,0xBD,0xC0,0x00,0x01,0x86,0xA0,0xFF,0xFF,0xD8,0xF0,0x00,0x00,0x03,0xE8,0xFF,0xFF,0xFF,0x9C,0x00,0x00,0x00,0x0A,0xFF,0xFF,0xFF,0xFF,0xBD,0xF2,0x9F,0xCE,0xF5,0x24,0xBD,0xF2,0x51,0x27,0x71,0x4D,0x26,0x0A,0x96,0xCE,0x2A,0x03,0x7E,0xF2,0x43,0x7E,0xEF,0xF5,0xCE,0x00,0xC4,0xBD,0xF2,0x72,0x5F,0x96,0xDB,0x2A,0x10,0xBD,0xF3,0x35,0xCE,0x00,0xC4,0x96,0xDB,0xBD,0xF2,0xE3,0x26,0x03,0x43,0xD6,0x80,0xBD,0xF2,0x8D,0x37,0xBD,0xF0,0xB9,0xCE,0x00,0xC4,0xBD,0xF0,0xEF,0x8D,0x3A,0x32,0x46,0x24,0x90,0x96,0xC9,0x27,0x03,0x73,0x00,0xCE,0x39,0x81,0x38,0xAA,0x3B,0x29,0x07,0x71,0x34,0x58,0x3E,0x56,0x74,0x16,0x7E,0xB3,0x1B,0x77,0x2F,0xEE,0xE3,0x85,0x7A,0x1D,0x84,0x1C,0x2A,0x7C,0x63,0x59,0x58,0x0A,0x7E,0x75,0xFD,0xE7,0xC6,0x80,0x31,0x72,0x18,0x10,0x81,0x00,0x00,0x00,0x00,0xCE,0xF5,0x9B,0x8D,0x36,0xBD,0xF2,0x6C,0x96,0xC9,0x81,0x88,0x25,0x03,0x7E,0xF1,0x90,0xBD,0xF3,0x35,0x96,0x80,0x8B,0x81,0x27,0xF4,0x4A,0x36,0xCE,0x00,0xBA,0xBD,0xEF,0x72,0xCE,0xF5,0xA0,0x8D,0x17,0x7F,0x00,0xDC,0x32,0xBD,0xF1,0x79,0x39,0xDF,0xDE,0xBD,0xF2,0x6C,0x8D,0x05,0x8D,0x08,0xCE,0x00,0xBA,0x7E,0xF0,0xEF,0xDF,0xDE,0xBD,0xF2,0x67,0xDE,0xDE,0xE6,0x00,0xD7,0xCF,0x08,0xDF,0xDE,0x8D,0xED,0xDE,0xDE,0xC6,0x05,0x3A,0xDF,0xDE,0xBD,0xEF,0x7D,0xCE,0x00,0xBF,0x7A,0x00,0xCF,0x26,0xEC,0x39,0xBD,0xF2,0xAD,0x2B,0x21,0x27,0x15,0x8D,0x10,0xBD,0xF2,0x6C,0x8D,0x0E,0xCE,0x00,0xBA,0x8D,0xC7,0xCE,0xF0,0x8B,0xBD,0xEF,0x7D,0x7E,0xF3,0x35,0xFE,0x42,0x18,0xDF,0xCA,0xFE,0x42,0x1A,0xDF,0xCC,0xFE,0xF6,0x82,0xDF,0xD7,0xFE,0xF6,0x84,0xDF,0xD9,0xBD,0xF0,0xF6,0xFC,0x42,0x54,0xC3,0x65,0x8B,0xFD,0x42,0x1A,0xDD,0xCC,0xFC,0x42,0x52,0xC9,0xB0,0x89,0x05,0xFD,0x42,0x18,0xDD,0xCA,0x7F,0x00,0xCE,0x86,0x80,0x97,0xC9,0x96,0x8F,0x97,0xDD,0x7E,0xEF,0xD6,0x40,0xE6,0x4D,0xAB,0xCE,0xF6,0xF6,0xBD,0xEF,0x7D,0xBD,0xF2,0x9F,0xCE,0xF6,0xFB,0xD6,0xDB,0xBD,0xF1,0xC0,0xBD,0xF2,0x9F,0xBD,0xF3,0x35,0x7F,0x00,0xDC,0x96,0xD6,0xD6,0xC9,0xBD,0xEF,0x75,0xCE,0xF7,0x00,0xBD,0xEF,0x72,0x96,0xCE,0x36,0x2A,0x0A,0xBD,0xEF,0x6D,0x96,0xCE,0x2B,0x06,0x73,0x00,0x88,0xBD,0xF5,0x93,0xCE,0xF7,0x00,0xBD,0xEF,0x7D,0x32,0x4D,0x2A,0x03,0xBD,0xF5,0x93,0xCE,0xF7,0x05,0x7E,0xF5,0xF8,0xBD,0xF2,0x6C,0x7F,0x00,0x88,0x8D,0xB2,0xCE,0x00,0xC4,0xBD,0xF2,0x72,0xCE,0x00,0xBA,0xBD,0xF2,0x51,0x7F,0x00,0xCE,0x96,0x88,0x8D,0x06,0xCE,0x00,0xC4,0x7E,0xF1,0xC6,0x36,0x20,0xC6,0x81,0x49,0x0F,0xDA,0xA2,0x83,0x49,0x0F,0xDA,0xA2,0x7F,0x00,0x00,0x00,0x00,0x05,0x84,0xE6,0x1A,0x2D,0x1B,0x86,0x28,0x07,0xFB,0xF8,0x87,0x99,0x68,0x89,0x01,0x87,0x23,0x35,0xDF,0xE1,0x86,0xA5,0x5D,0xE7,0x28,0x83,0x49,0x0F,0xDA,0xA2,0xA1,0x54,0x46,0x8F,0x13,0x8F,0x52,0x43,0x89,0xCD,0x86,0xFF,0x97,0x00,0x86,0x01,0x97,0x01,0x86,0x01,0x97,0x03,0x96,0xEA,0x81,0x55,0x26,0x0A,0xFE,0x42,0x21,0xA6,0x00,0x4A,0x26,0x02,0x6E,0x00,0xCE,0x00,0x80,0x6F,0x00,0x08,0x8C,0x01,0x00,0x26,0xF8,0xCE,0x41,0xFD,0x08,0xA6,0x02,0x63,0x02,0xE6,0x02,0x6F,0x02,0x43,0x11,0x27,0xF3,0xFF,0x42,0x50,0xDF,0xA1,0xDF,0x9D,0xDC,0x9D,0x83,0x00,0x64,0xDD,0x9B,0x9E,0x9B,0xCE,0xF7,0xCF,0xCC,0x00,0xEB,0x8D,0x30,0xCE,0xF7,0xDE,0xCC,0x42,0x00,0x8D,0x28,0x86,0x39,0xCE,0x42,0x85,0xA7,0x00,0x08,0x8C,0x42,0xAF,0x26,0xF8,0x73,0x42,0xAF,0xCE,0x43,0x46,0xDF,0x93,0xBD,0xE3,0xCF,0xBD,0xFB,0xD4,0xCE,0xF8,0x0F,0xBD,0xE7,0xA8,0x86,0x55,0x97,0xEA,0x7E,0xE2,0x71,0xDD,0xBF,0xE6,0x00,0x08,0xA6,0x00,0xDF,0xC1,0xDE,0xBF,0xA7,0x00,0x08,0xDF,0xBF,0xDE,0xC1,0x5A,0x26,0xEF,0x39,0x01,0x7F,0x00,0xE8,0xBD,0xE3,0xEE,0xBD,0xFB,0xD4,0x20,0xDB,0x0E,0x7C,0x00,0xF5,0x26,0x03,0x7C,0x00,0xF4,0xB6,0x00,0x00,0x7E,0xE1,0xC8,0x31,0x3B,0x00,0x00,0x3B,0x00,0x00,0x3B,0x00,0x00,0x3B,0x00,0x00,0x3B,0x00,0x00,0x3B,0x00,0x00,0x3B,0x00,0x00,0x7E,0xEC,0x2E,0x4F,0xC7,0x52,0x59,0xFF,0x04,0x5E,0xEC,0x2E,0xF7,0xC3,0x00,0x76,0x00,0x01,0x10,0x70,0x84,0x00,0x01,0x15,0x1A,0x0B,0x00,0x80,0x4D,0x49,0x43,0x52,0x4F,0x43,0x4F,0x4C,0x4F,0x52,0x20,0x42,0x41,0x53,0x49,0x43,0x20,0x31,0x2E,0x30,0x0D,0x43,0x4F,0x50,0x59,0x52,0x49,0x47,0x48,0x54,0x20,0x31,0x39,0x38,0x32,0x20,0x4D,0x49,0x43,0x52,0x4F,0x53,0x4F,0x46,0x54,0x0D,0x00,0x7A,0x42,0x2B,0x26,0x1A,0xB6,0x42,0x82,0x88,0x0F,0xB7,0x42,0x82,0x8A,0x80,0xFE,0x42,0x80,0xA7,0x00,0xC6,0x16,0x84,0x0F,0x27,0x02,0xC6,0x58,0xF7,0x42,0x2B,0xCE,0x04,0x5E,0x09,0x26,0xFD,0x39,0xBD,0x42,0x85,0x3C,0x37,0x8D,0xD3,0x8D,0x15,0x27,0xFA,0xC6,0x60,0xFE,0x42,0x80,0xE7,0x00,0x20,0x6E,0x4F,0x8D,0x70,0x26,0x05,0x8D,0x7A,0x4C,0x27,0x66,0x3C,0x37,0xCE,0x42,0x30,0x86,0xFB,0x8D,0x60,0x16,0x27,0x02,0xE8,0x0B,0xA7,0x0B,0x5D,0x27,0x06,0x8D,0xC6,0x8D,0x54,0x26,0x48,0x5F,0x5A,0xE7,0x09,0x59,0x24,0x3F,0x7C,0x42,0x39,0x8D,0x50,0x37,0x16,0x08,0xA8,0x00,0xA4,0x00,0xE7,0x00,0x33,0x4D,0x0D,0x27,0xEA,0x36,0x8D,0xA5,0x8D,0x3F,0xA1,0x00,0x32,0x27,0x22,0xC6,0xF8,0xCB,0x08,0x44,0x24,0xFB,0xFB,0x42,0x39,0x86,0xFE,0xCE,0xF8,0xE0,0x8D,0x1B,0xB7,0x42,0x3A,0x27,0x2A,0xC1,0x20,0x26,0x6B,0xB6,0x42,0x82,0x8B,0x10,0xB7,0x42,0x82,0x4F,0x8C,0x86,0x03,0x4D,0x33,0x38,0x39,0x86,0x7F,0x97,0x02,0x96,0x03,0x43,0x84,0x02,0x27,0x02,0x86,0xFF,0x39,0xD7,0x02,0xB6,0xBF,0xFF,0x8A,0xC0,0x39,0x3A,0xE6,0xB6,0xC1,0x20,0x23,0x1A,0xC1,0x61,0x24,0x0D,0x8D,0xDD,0x27,0x12,0xC1,0x30,0x26,0x20,0x73,0x42,0x1C,0x20,0xCA,0x8D,0xD0,0x26,0x08,0xB6,0x42,0x1C,0x26,0x62,0x17,0x20,0xC2,0xB6,0x42,0x1C,0x27,0x5A,0xC1,0x68,0x25,0x26,0xC1,0x71,0x25,0x52,0x20,0x20,0xC1,0x40,0x26,0x02,0xC6,0x03,0xC1,0x2F,0x23,0x44,0xC1,0x3B,0x22,0x42,0xC0,0x20,0x20,0x3C,0x3A,0xA6,0x86,0x20,0xD8,0x01,0x01,0x8F,0x80,0x82,0x87,0x8D,0x86,0x85,0xA6,0x6B,0xF6,0x42,0x82,0xC4,0x70,0x20,0x55,0x89,0x8C,0x88,0x8B,0x8F,0x81,0x84,0x83,0x8A,0x8E,0x88,0x08,0xB3,0xB2,0x82,0x9B,0x90,0x84,0xA3,0x8A,0x81,0x9E,0xBC,0xBA,0xB9,0xA5,0xC7,0x15,0x9C,0x09,0x8C,0x80,0xB5,0x5E,0xB1,0x8F,0x0A,0xCB,0x30,0xC0,0x20,0x20,0x9A,0x8E,0x93,0x98,0x97,0x96,0x94,0x95,0x9D,0x86,0x89,0x92,0xBB,0x91,0xB7,0xB6,0x40,0x71,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x2F,0x6E,0x6F,0x70,0x61,0x72,0x73,0x74,0x75,0x76,0x7A,0x78,0x79,0x77,0x1B,0x20,0x94,0x0D,0x20,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x6D,0x2C,0x2D,0x2E,0x3B,0xBD,0x42,0x88,0x3C,0x37,0x36,0xD6,0xE8,0x27,0x4B,0x16,0x07,0x36,0x0F,0x17,0xD6,0x03,0xC4,0x04,0x26,0xFA,0x8D,0x2D,0x5F,0x8D,0x2C,0xC6,0x08,0x37,0x5F,0x44,0x59,0x8D,0x24,0x33,0x5A,0x26,0xF6,0x8D,0x1C,0x32,0x06,0x32,0x81,0x0D,0x27,0x0B,0x7C,0x42,0x2A,0xF6,0x42,0x2A,0xF1,0x42,0x29,0x25,0x07,0x7F,0x42,0x2A,0x8D,0x10,0x8D,0x0E,0x33,0x38,0x39,0xC6,0x01,0xD7,0x03,0x8D,0x00,0xFE,0x42,0x23,0x20,0x03,0xFE,0x42,0x25,0x7E,0xF8,0x61,0xFE,0x42,0x80,0x81,0x08,0x26,0x0C,0x8C,0x40,0x00,0x27,0x50,0x86,0x60,0x09,0xA7,0x00,0x20,0x2E,0x81,0x0D,0x26,0x14,0xFE,0x42,0x80,0x86,0x60,0xA7,0x00,0x08,0xFF,0x42,0x80,0xF6,0x42,0x81,0xC5,0x1F,0x26,0xF1,0x20,0x16,0x81,0x20,0x25,0x2D,0x4D,0x2B,0x0C,0x81,0x40,0x25,0x06,0x81,0x60,0x25,0x04,0x84,0xDF,0x88,0x40,0xA7,0x00,0x08,0xFF,0x42,0x80,0x8C,0x42,0x00,0x26,0x13,0xCE,0x40,0x00,0xEC,0x20,0xED,0x00,0x08,0x08,0x8C,0x41,0xE0,0x26,0xF5,0xC6,0x60,0xBD,0xFB,0xD9,0x32,0x33,0x38,0x39,0xBD,0x42,0x8B,0x3C,0x37,0x36,0x96,0xE8,0x27,0x08,0xFE,0x42,0x27,0xFC,0x42,0x29,0x20,0x0A,0xF6,0x42,0x81,0xC4,0x1F,0xCE,0x10,0x10,0x86,0x20,0xDF,0xE4,0xD7,0xE6,0x97,0xE7,0x32,0x33,0x38,0x39,0xBD,0xFB,0xD4,0xBD,0x42,0x91,0x7F,0x42,0x7F,0xCE,0x42,0xB2,0xC6,0x01,0xBD,0xF8,0x65,0x7D,0x00,0xE9,0x26,0x4D,0x7D,0x00,0xE8,0x26,0x44,0x4D,0x2A,0x1E,0x7D,0x42,0x3A,0x27,0x19,0xBD,0xE4,0xB2,0xA6,0x00,0x08,0x3C,0x36,0x84,0x7F,0xDE,0x89,0x8D,0x48,0xDF,0x89,0x32,0x38,0x4D,0x2A,0xEE,0xDE,0x89,0x20,0xD2,0x81,0x0C,0x27,0xC0,0x81,0x08,0x26,0x08,0x5A,0x27,0xBF,0x09,0x8D,0x37,0x20,0xC2,0x81,0x15,0x26,0x0A,0x5A,0x27,0xB3,0x86,0x08,0xBD,0xF9,0xC6,0x20,0xF6,0x81,0x03,0x0D,0x27,0x05,0x81,0x0D,0x26,0x0E,0x4F,0x07,0x36,0xBD,0xE7,0x66,0x6F,0x00,0xCE,0x42,0xB1,0x32,0x06,0x39,0x81,0x20,0x25,0x99,0x8D,0x02,0x20,0x95,0xC1,0x80,0x24,0xF3,0xA7,0x00,0x08,0x5C,0x7E,0xF9,0xC6,0x8D,0x43,0x3C,0xBD,0xEF,0x47,0x38,0xC1,0x08,0x22,0x37,0x5A,0x2B,0x05,0x86,0x10,0x3D,0x20,0x08,0xE6,0x00,0x2A,0x03,0xC4,0x70,0x21,0x5F,0xD7,0x82,0x8D,0x70,0xA6,0x00,0x2B,0x01,0x4F,0x84,0x0F,0xBA,0x42,0x3C,0x9A,0x82,0x8A,0x80,0xA7,0x00,0x39,0x8D,0x13,0x8D,0x5B,0x4F,0xE6,0x00,0x2A,0xF2,0x73,0x42,0x3C,0xF4,0x42,0x3C,0xE7,0x00,0x39,0x7E,0xEC,0x2E,0xBD,0xEA,0x2C,0xBD,0xEF,0x0D,0xC1,0x3F,0x22,0xF3,0x37,0xBD,0xEF,0x47,0xC1,0x1F,0x22,0xEB,0x37,0x54,0x86,0x20,0x3D,0xC3,0x40,0x00,0x37,0x36,0x30,0xE6,0x03,0x54,0x38,0x3A,0x32,0x33,0x84,0x01,0x56,0x49,0xC6,0x10,0x54,0x4A,0x2A,0xFC,0xF7,0x42,0x3C,0x39,0x8D,0xCF,0xC6,0xFF,0xA6,0x00,0x2A,0x0E,0xB4,0x42,0x3C,0x27,0x08,0xE6,0x00,0x54,0x54,0x54,0x54,0xC4,0x07,0x5C,0x8D,0x03,0x7E,0xEA,0x29,0x4F,0x5D,0x2A,0x01,0x43,0x7E,0xEC,0xE3,0x27,0x13,0xBD,0xEF,0x0D,0xC1,0x08,0x22,0x1D,0x5D,0x27,0x06,0x5A,0x86,0x10,0x3D,0xCA,0x0F,0xCA,0x80,0x8C,0xC6,0x60,0xCE,0x40,0x00,0xFF,0x42,0x80,0xE7,0x00,0x08,0x8C,0x42,0x00,0x26,0xF8,0x39,0x8D,0xED,0xCE,0xF8,0x33,0x7E,0xE7,0xA8,0xB6,0x42,0x7F,0x26,0x03,0xBD,0xF8,0x83,0x7F,0x42,0x7F,0x97,0xCD,0x27,0x03,0x7E,0xEE,0x91,0x97,0xD0,0x7E,0xEE,0x9D,0x27,0x06,0xBD,0xEF,0x4C,0xFF,0x42,0x1F,0xFE,0x42,0x1F,0x6E,0x00,0xDE,0x99,0x3C,0xBD,0xEB,0x1B,0xBD,0xEA,0x29,0xDF,0x89,0x38,0xDC,0x89,0x9C,0x99,0x27,0x03,0x7E,0xEC,0x2E,0x7E,0xEC,0xE3,0xBD,0xEB,0xBA,0x83,0x01,0xFF,0x23,0x03,0x7E,0xEC,0x2E,0xC3,0x41,0xFF,0xFD,0x42,0x80,0x39,0xDE,0x93,0xFF,0x42,0x6F,0xDE,0x95,0xFF,0x42,0x71,0x5F,0x81,0xA9,0x26,0x05,0xBD,0xFD,0xDB,0xC6,0x04,0xF7,0x42,0x67,0xFC,0x42,0x71,0xB3,0x42,0x6F,0xFD,0x42,0x6C,0x8D,0x2E,0xFE,0x42,0x6F,0xFF,0x42,0x78,0x86,0xFF,0xB7,0x42,0x76,0xFC,0x42,0x71,0xB3,0x42,0x78,0x23,0x0E,0x4D,0x26,0x07,0xC1,0xFF,0x27,0x03,0xF7,0x42,0x76,0x8D,0x44,0x20,0xE2,0x70,0x42,0x75,0x7F,0x42,0x76,0x8D,0x3A,0x86,0x01,0x97,0x03,0x39,0xBD,0xFD,0x29,0xCE,0x42,0x5F,0xFF,0x42,0x78,0xDF,0xBF,0x6F,0x09,0x6F,0x0A,0xCE,0x42,0x57,0xC6,0x08,0xBD,0xF7,0xB2,0x7F,0x42,0x75,0x86,0x0F,0xB7,0x42,0x76,0x8D,0x0B,0x8D,0x12,0x7C,0x42,0x75,0xCE,0x00,0x00,0xBD,0xF8,0x61,0xFE,0x42,0x2F,0x8D,0x45,0x09,0x26,0xFB,0x39,0x01,0x0F,0xF6,0x42,0x76,0xF7,0x42,0x7B,0xB6,0x42,0x76,0x27,0x09,0xFE,0x42,0x78,0xAB,0x00,0x08,0x5A,0x26,0xFA,0xBB,0x42,0x75,0xB7,0x42,0x7A,0xFE,0x42,0x78,0x8D,0x20,0x86,0x3C,0x8D,0x1E,0xB6,0x42,0x75,0x8D,0x19,0xB6,0x42,0x76,0x8D,0x14,0x4D,0x27,0x0A,0xA6,0x00,0x08,0x8D,0x0C,0x7A,0x42,0x7B,0x26,0xF6,0xB6,0x42,0x7A,0x8D,0x02,0x86,0x55,0x3C,0x36,0x36,0xC6,0x08,0x30,0x64,0x00,0xCE,0x00,0x20,0x25,0x03,0xCE,0x00,0x40,0x3C,0x86,0x01,0x97,0x03,0x09,0x26,0xFD,0x4F,0x97,0x03,0x38,0x09,0x26,0xFD,0x5A,0x26,0xE3,0x32,0x32,0x38,0x39,0x8D,0x08,0xBD,0x00,0xF3,0x27,0xF8,0x7E,0xEA,0x3C,0xCE,0x42,0x56,0x6F,0x00,0x86,0x20,0x08,0xA7,0x00,0x8C,0x42,0x5F,0x26,0xF8,0xBD,0x00,0xF3,0x27,0xE1,0xBD,0xE9,0x1A,0xBD,0xEE,0x53,0xF7,0x42,0x56,0x27,0xD6,0x37,0xCC,0x42,0x57,0xDD,0xBF,0x33,0x7E,0xF7,0xB2,0x81,0xA9,0x26,0x03,0x7E,0xFD,0xB1,0x81,0x4D,0x26,0x03,0x7E,0xFE,0x06,0x4F,0x8D,0x22,0xBD,0xE3,0xCF,0x73,0x42,0x6E,0xFC,0x42,0x6C,0xD3,0x93,0xBD,0xE2,0x1E,0xDE,0x93,0xFF,0x42,0x78,0x8D,0x4E,0x2A,0xF9,0xDF,0x95,0xCE,0xE1,0xBB,0xBD,0xE7,0xA8,0x7E,0xE2,0xEB,0x36,0x8D,0x10,0x32,0x7D,0x42,0x74,0x26,0x37,0xB1,0x42,0x67,0x27,0x32,0xC6,0x24,0x7E,0xE2,0x38,0x8D,0x8F,0xBD,0xFE,0x37,0x26,0x03,0x7E,0xFF,0x4E,0xC6,0x22,0x7E,0xE2,0x38,0x8D,0x28,0x86,0x04,0x8D,0xD8,0xFC,0x42,0x71,0xB3,0x42,0x6F,0xB3,0x42,0x6C,0x24,0x03,0x7E,0xE2,0x36,0xFE,0x42,0x6F,0xFF,0x42,0x78,0x8D,0x03,0x2A,0xF9,0x39,0xBD,0xFE,0xB6,0x26,0xD7,0xB6,0x42,0x75,0x27,0xD2,0x39,0xBD,0x00,0xEB,0xC6,0x01,0xD7,0x86,0xBD,0xEB,0x1B,0x7F,0x00,0x86,0xBD,0xE9,0x0E,0xEC,0x02,0xBD,0xE2,0x2D,0xFF,0x42,0x71,0xDE,0x89,0xE6,0x04,0x58,0xCB,0x05,0x3A,0xFF,0x42,0x6F,0xBD,0x00,0xF3,0x27,0xCC,0x7E,0xEA,0x2F,0xBD,0x00,0xEB,0x86,0x02,0x8D,0x82,0xCE,0x00,0x00,0xBD,0x00,0xF3,0x27,0x06,0xBD,0xEA,0x2F,0xBD,0xEF,0x4C,0xDF,0x89,0xFC,0x42,0x6A,0xD3,0x89,0xFD,0x42,0x1F,0xFC,0x42,0x6C,0xD3,0x89,0x37,0x36,0x38,0x20,0x99,0xBD,0xFD,0xA2,0x8D,0x56,0x26,0x9D,0x39,0x96,0xE2,0x4C,0x26,0x0A,0xBD,0xFB,0xD4,0x86,0x53,0x8D,0x3E,0xBD,0xE7,0xB9,0x8D,0x62,0xBA,0x42,0x75,0x26,0x33,0x5F,0x37,0xCE,0x42,0x5F,0x3A,0xA6,0x00,0xDE,0xE2,0x08,0x26,0x02,0x8D,0x25,0xCE,0x42,0x57,0x3A,0xA0,0x00,0x30,0xAA,0x00,0xA7,0x00,0x5C,0xC1,0x08,0x26,0xE3,0x32,0x4D,0x27,0x0B,0x7D,0x42,0x56,0x27,0x06,0x8D,0x10,0x26,0x07,0x20,0xBC,0x86,0x46,0x8D,0x22,0x4F,0x39,0x7F,0x00,0xE8,0x7E,0xF9,0xC6,0xBD,0xFF,0x4E,0x86,0xFF,0x16,0x8D,0x2A,0x26,0x07,0xB6,0x42,0x75,0x40,0x2B,0xF3,0x4A,0xB7,0x42,0x7B,0x39,0xB6,0x40,0x00,0x88,0x40,0xD6,0xE2,0x5C,0x26,0x03,0xB7,0x40,0x00,0x39,0xBD,0xFF,0x4E,0xCE,0x42,0x5F,0xFF,0x42,0x78,0x86,0x0F,0x8C,0x86,0xFF,0x5F,0x36,0xF7,0x42,0x73,0x01,0x0F,0x8D,0xDB,0xFE,0x42,0x78,0x4F,0x8D,0x5B,0x46,0x81,0x3C,0x26,0xF9,0x8D,0x46,0xB7,0x42,0x75,0x8D,0x41,0xB7,0x42,0x76,0x33,0x11,0x22,0x31,0xBB,0x42,0x75,0xB7,0x42,0x7A,0xB6,0x42,0x76,0xB7,0x42,0x7B,0x27,0x19,0x8D,0x2A,0x7D,0x42,0x73,0x26,0x07,0xA7,0x00,0xA1,0x00,0x26,0x19,0x08,0xBB,0x42,0x7A,0xB7,0x42,0x7A,0x7A,0x42,0x7B,0x26,0xE7,0x8D,0x11,0xB0,0x42,0x7A,0x27,0x08,0x86,0x01,0x8C,0x86,0x03,0x8C,0x86,0x02,0xB7,0x42,0x7B,0x39,0x86,0x08,0xB7,0x42,0x7C,0x8D,0x07,0x46,0x7A,0x42,0x7C,0x26,0xF8,0x39,0x8D,0x08,0xF6,0x42,0x7D,0x5A,0xF1,0x42,0x2C,0x39,0x7F,0x42,0x7D,0x7D,0x42,0x7E,0x26,0x11,0x8D,0x07,0x26,0xFC,0x8D,0x03,0x27,0xFC,0x39,0x7C,0x42,0x7D,0xD6,0x03,0xC4,0x10,0x39,0x8D,0xF6,0x27,0xFC,0x8D,0xF2,0x26,0xFC,0x39,0x01,0x0F,0x7F,0x42,0x7C,0x8D,0xDF,0x8D,0x2D,0x22,0x12,0x8D,0x22,0x25,0x12,0x7A,0x42,0x7C,0xB6,0x42,0x7C,0x81,0xA0,0x26,0xEC,0xB7,0x42,0x7E,0x39,0x8D,0x10,0x22,0xE6,0x8D,0x13,0x25,0xE6,0x7C,0x42,0x7C,0xB6,0x42,0x7C,0x80,0x60,0x20,0xE8,0x7F,0x42,0x7D,0x8D,0xB6,0x20,0x05,0x7F,0x42,0x7D,0x8D,0xC0,0xF6,0x42,0x7D,0xF1,0x42,0x2D,0x22,0x04,0xF1,0x42,0x2E,0x39,0x7F,0x42,0x7C,0x39,0xBD,0xEA,0x2F,0xBD,0xEF,0x0D,0x5D,0x26,0x2F,0x7E,0xEC,0x2E,0x8D,0xF5,0x37,0x8D,0xEF,0x32,0x36,0x37,0x4F,0xDE,0x09,0xD6,0x08,0xDF,0x0B,0x88,0x80,0xB7,0xBF,0xFF,0x30,0xE6,0x01,0x08,0x08,0x5C,0x26,0xFB,0xD6,0x08,0xC4,0x40,0x27,0xED,0x30,0x6A,0x00,0x26,0xE2,0x4F,0xB7,0xBF,0xFF,0x38,0x39,0x6E,0x69,0x6C,0x72,0x65,0x62,0x6D,0x61,0x68,0x43,0xF8,0x83,0xF9,0xC6,0xFF,0x4E,0xFE,0xB9,0xFC,0xC0,0xFF,0xAB,0xFC,0xB7,0xEC,0xE3,0xEB,0xC7,0x00,0xC9,0x42,0x00,0x42,0x03,0x42,0x06,0x42,0x09,0x42,0x0C,0x42,0x0F,0x42,0x12,0xF7,0x2E];

// MCX
//MC10.ROM = [0xC9, 0x96, 0xC9, 0x2A, 0xFF, 0xFF, 0x0F, 0xCC, 0xFF, 0x01, 0xDD, 0x00, 0xDD, 0x02, 0x4F, 0x5F, 0xFD, 0xFF, 0xF0, 0x8E, 0x01, 0xF1, 0x86, 0xFB, 0xBD, 0xF8, 0xD0, 0x26, 0x21, 0x96, 0xEA, 0x81, 0x55, 0x26, 0x1B, 0xCE, 0xC0, 0x2B, 0xCC, 0x00, 0x16, 0x8D, 0x54, 0x73, 0xFF, 0xF1, 0xFE, 0x01, 0x21, 0x20, 0x04, 0x01, 0xFE, 0x42, 0x21, 0xA6, 0x00, 0x4A, 0x26, 0x02, 0x6E, 0x00, 0x7F, 0xFF, 0xF1, 0x8E, 0x42, 0xFF, 0xBF, 0xBF, 0xFF, 0x7F, 0x00, 0x7E, 0xBD, 0xFB, 0xD4, 0x21, 0x22, 0x73, 0xFF, 0xF1, 0x5F, 0xCE, 0x3F, 0xE0, 0xE7, 0x1F, 0x09, 0x26, 0xFB, 0xCE, 0xC0, 0xE9, 0x08, 0xEC, 0x00, 0xFD, 0x01, 0x80, 0x08, 0x08, 0xA6, 0x00, 0x27, 0xF4, 0x2B, 0x21, 0xBD, 0xF9, 0xC9, 0x20, 0xF4, 0x7C, 0xFF, 0xF0, 0x8D, 0x03, 0x7F, 0xFF, 0xF0, 0xCE, 0xC0, 0x00, 0xCC, 0x40, 0x00, 0x9F, 0x91, 0x35, 0x38, 0x3C, 0x38, 0x83, 0x00, 0x02, 0x22, 0xF8, 0x9E, 0x91, 0x39, 0x4F, 0x20, 0x0E, 0x97, 0x02, 0x0D, 0x4C, 0xF5, 0xBF, 0xFF, 0x27, 0x05, 0x79, 0x00, 0x02, 0x25, 0xF5, 0x81, 0x02, 0x2C, 0xEB, 0xCE, 0x40, 0x00, 0xC6, 0x80, 0xBD, 0xFB, 0xD9, 0x4D, 0x27, 0x15, 0x4A, 0x27, 0x1F, 0xC6, 0x02, 0xF7, 0xFF, 0xF1, 0x8D, 0xBA, 0x7C, 0xFF, 0xF1, 0xCE, 0xC0, 0x33, 0xFF, 0x01, 0x21, 0x20, 0x1F, 0xCE, 0x4C, 0x00, 0xDF, 0x6E, 0xCE, 0x41, 0xFD, 0xCC, 0x05, 0x00, 0x20, 0x0B, 0xCE, 0x02, 0xC1, 0xDF, 0x6E, 0xCE, 0x00, 0xFD, 0xCC, 0x08, 0x02, 0x97, 0x5D, 0xD7, 0x7E, 0xF7, 0xFF, 0xF0, 0xCC, 0xFF, 0x00, 0xF7, 0xBF, 0xFF, 0x7E, 0xF7, 0x55, 0x40, 0x0A, 0xA9, 0x32, 0x30, 0x31, 0x31, 0x20, 0x41, 0x54, 0x4B, 0x00, 0x40, 0x83, 0x5B, 0x30, 0x5D, 0x20, 0x20, 0x4D, 0x49, 0x43, 0x52, 0x4F, 0x43, 0x4F, 0x4C, 0x4F, 0x52, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x00, 0x40, 0xA3, 0x5B, 0x31, 0x5D, 0x20, 0x20, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x00, 0x40, 0xC3, 0x5B, 0x32, 0x5D, 0x20, 0x20, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x28, 0x4C, 0x41, 0x52, 0x47, 0x45, 0x29, 0x00, 0x41, 0xE4, 0x44, 0x41, 0x52, 0x52, 0x45, 0x4E, 0x20, 0x41, 0x54, 0x4B, 0x49, 0x4E, 0x53, 0x4F, 0x4E, 0x20, 0x2D, 0x20, 0x32, 0x30, 0x31, 0x31, 0xFF, 0x46, 0x4F, 0xD2, 0x47, 0x4F, 0x54, 0xCF, 0x47, 0x4F, 0x53, 0x55, 0xC2, 0x52, 0x45, 0xCD, 0x49, 0xC6, 0x44, 0x41, 0x54, 0xC1, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x4F, 0xCE, 0x49, 0x4E, 0x50, 0x55, 0xD4, 0x45, 0x4E, 0xC4, 0x4E, 0x45, 0x58, 0xD4, 0x44, 0x49, 0xCD, 0x52, 0x45, 0x41, 0xC4, 0x4C, 0x45, 0xD4, 0x52, 0x55, 0xCE, 0x52, 0x45, 0x53, 0x54, 0x4F, 0x52, 0xC5, 0x52, 0x45, 0x54, 0x55, 0x52, 0xCE, 0x53, 0x54, 0x4F, 0xD0, 0x50, 0x4F, 0x4B, 0xC5, 0x43, 0x4F, 0x4E, 0xD4, 0x4C, 0x49, 0x53, 0xD4, 0x43, 0x4C, 0x45, 0x41, 0xD2, 0x4E, 0x45, 0xD7, 0x43, 0x4C, 0x4F, 0x41, 0xC4, 0x43, 0x53, 0x41, 0x56, 0xC5, 0x4C, 0x4C, 0x49, 0x53, 0xD4, 0x4C, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x53, 0x45, 0xD4, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x43, 0x4C, 0xD3, 0x53, 0x4F, 0x55, 0x4E, 0xC4, 0x45, 0x58, 0x45, 0xC3, 0x53, 0x4B, 0x49, 0x50, 0xC6, 0x54, 0x41, 0x42, 0xA8, 0x54, 0xCF, 0x54, 0x48, 0x45, 0xCE, 0x4E, 0x4F, 0xD4, 0x53, 0x54, 0x45, 0xD0, 0x4F, 0x46, 0xC6, 0xAB, 0xAD, 0xAA, 0xAF, 0xDE, 0x41, 0x4E, 0xC4, 0x4F, 0xD2, 0xBE, 0xBD, 0xBC, 0x53, 0x47, 0xCE, 0x49, 0x4E, 0xD4, 0x41, 0x42, 0xD3, 0x55, 0x53, 0xD2, 0x52, 0x4E, 0xC4, 0x53, 0x51, 0xD2, 0x4C, 0x4F, 0xC7, 0x45, 0x58, 0xD0, 0x53, 0x49, 0xCE, 0x43, 0x4F, 0xD3, 0x54, 0x41, 0xCE, 0x50, 0x45, 0x45, 0xCB, 0x4C, 0x45, 0xCE, 0x53, 0x54, 0x52, 0xA4, 0x56, 0x41, 0xCC, 0x41, 0x53, 0xC3, 0x43, 0x48, 0x52, 0xA4, 0x4C, 0x45, 0x46, 0x54, 0xA4, 0x52, 0x49, 0x47, 0x48, 0x54, 0xA4, 0x4D, 0x49, 0x44, 0xA4, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x56, 0x41, 0x52, 0x50, 0x54, 0xD2, 0x49, 0x4E, 0x4B, 0x45, 0x59, 0xA4, 0x4D, 0x45, 0xCD, 0x45, 0x4C, 0x53, 0xC5, 0x50, 0x43, 0x4C, 0xD3, 0x50, 0x53, 0x45, 0xD4, 0x50, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x4C, 0x49, 0x4E, 0xC5, 0x43, 0x49, 0x52, 0x43, 0x4C, 0xC5, 0x50, 0x41, 0x49, 0x4E, 0xD4, 0x44, 0x52, 0x41, 0xD7, 0x50, 0x4D, 0x4F, 0x44, 0xC5, 0x53, 0x43, 0x52, 0x45, 0x45, 0xCE, 0x43, 0x4F, 0x4C, 0x4F, 0xD2, 0x50, 0x43, 0x4F, 0x50, 0xD9, 0x50, 0x4C, 0x41, 0xD9, 0x4F, 0x50, 0x45, 0xCE, 0x43, 0x4C, 0x4F, 0x53, 0xC5, 0x46, 0x49, 0x4C, 0x45, 0xD3, 0x43, 0x48, 0x41, 0x49, 0xCE, 0x53, 0x57, 0x41, 0xD0, 0x57, 0x41, 0x49, 0xD4, 0x45, 0x52, 0x52, 0x4F, 0xD2, 0xA7, 0x44, 0x45, 0xC6, 0x4C, 0x4F, 0x41, 0xC4, 0x53, 0x41, 0x56, 0xC5, 0x4D, 0x45, 0x52, 0x47, 0xC5, 0x44, 0x49, 0xD2, 0x45, 0x44, 0x49, 0xD4, 0x52, 0x45, 0x4E, 0x55, 0xCD, 0x41, 0x55, 0x54, 0xCF, 0x44, 0x45, 0xCC, 0x54, 0x52, 0x4F, 0xCE, 0x54, 0x52, 0x4F, 0x46, 0xC6, 0x42, 0x52, 0x45, 0x41, 0xCB, 0x48, 0x45, 0x58, 0xA4, 0x45, 0x4F, 0xC6, 0x46, 0x49, 0xD8, 0x50, 0x4F, 0xD3, 0x53, 0x54, 0x52, 0x4D, 0x45, 0xCD, 0x41, 0x54, 0xCE, 0x50, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x53, 0x54, 0x52, 0x49, 0x4E, 0x47, 0xA4, 0x49, 0x4E, 0x53, 0x54, 0xD2, 0x4D, 0x49, 0x4E, 0x56, 0x41, 0xCC, 0x4D, 0x41, 0x58, 0x56, 0x41, 0xCC, 0x54, 0x49, 0x4D, 0x45, 0xD2, 0x45, 0x52, 0x52, 0xCC, 0x45, 0x52, 0x52, 0xCE, 0x00, 0xE6, 0x85, 0xD8, 0x0B, 0xD7, 0x5B, 0xD7, 0x5C, 0xD5, 0x31, 0xD2, 0x1F, 0xD3, 0xC4, 0xD0, 0x95, 0xD8, 0x43, 0xD8, 0x85, 0xD7, 0xDB, 0xD9, 0x27, 0xCE, 0x76, 0xC5, 0xE0, 0xC4, 0x9B, 0xC4, 0x09, 0xC7, 0x32, 0xDF, 0x02, 0xDC, 0x53, 0xDD, 0x9B, 0xE6, 0x85, 0xE0, 0x46, 0xC7, 0xA4, 0xCA, 0x77, 0xC7, 0x7C, 0xC6, 0x83, 0xDA, 0x6B, 0xCC, 0x45, 0xCC, 0x0B, 0xCE, 0x17, 0xDC, 0x08, 0xDC, 0x09, 0xDC, 0xD2, 0xC6, 0x3B, 0xDE, 0xC7, 0xDD, 0x7A, 0xDC, 0x81, 0xDE, 0x9D, 0xD7, 0x23, 0xDE, 0x35, 0xDD, 0xB0, 0xDE, 0xD7, 0xDE, 0xFD, 0xDC, 0xA6, 0xDC, 0xA3, 0xDC, 0xB3, 0xBD, 0xC4, 0x87, 0x8D, 0x5D, 0x8D, 0x34, 0xDD, 0x66, 0xD7, 0x68, 0xDD, 0x74, 0xDD, 0x76, 0xD7, 0x73, 0xC6, 0x80, 0xDD, 0x46, 0xC6, 0x60, 0xDD, 0x48, 0xCC, 0x8F, 0x02, 0xDD, 0x69, 0x86, 0x04, 0xDD, 0x6B, 0x39, 0xDC, 0x0B, 0xD3, 0xFB, 0x95, 0x08, 0xDD, 0x0B, 0xDC, 0xF9, 0x27, 0x11, 0xB3, 0x00, 0x3D, 0xDD, 0xF9, 0x22, 0x0F, 0x32, 0xBE, 0x00, 0x36, 0x06, 0x4F, 0x5F, 0xDD, 0xF9, 0x39, 0xDE, 0xFD, 0x08, 0xDF, 0xFD, 0x3B, 0x81, 0xDC, 0x27, 0x16, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE5, 0xBF, 0xDC, 0xA1, 0x93, 0x9B, 0x37, 0x36, 0x7E, 0xE5, 0xCE, 0xDE, 0x93, 0x6F, 0x00, 0x08, 0x8C, 0x9D, 0xEB, 0xCC, 0xFF, 0xFF, 0xDD, 0x78, 0xD7, 0x7A, 0x39, 0xBD, 0xE7, 0xAB, 0x33, 0x96, 0xE8, 0x2E, 0x03, 0x7E, 0xE7, 0x55, 0xBD, 0xE7, 0x66, 0x9D, 0xF3, 0x7E, 0xE7, 0x36, 0x96, 0xE8, 0x2E, 0x06, 0xBD, 0xE7, 0xB9, 0x5A, 0x26, 0xFA, 0x39, 0x8D, 0x7C, 0xBD, 0xEF, 0x0D, 0xC1, 0x0F, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xD7, 0x70, 0xDC, 0x93, 0xDD, 0xC1, 0x83, 0x00, 0x01, 0x93, 0x6E, 0xDD, 0xD7, 0x86, 0x82, 0xD6, 0x70, 0x3D, 0x05, 0x93, 0xD7, 0xDD, 0xD7, 0x27, 0x50, 0x2B, 0x0F, 0xDC, 0x99, 0xDD, 0xBD, 0xD3, 0xD7, 0xDD, 0xBB, 0x25, 0x45, 0xBD, 0xE1, 0xFE, 0x20, 0x0F, 0xD3, 0x93, 0xDD, 0xBF, 0xDC, 0x99, 0x93, 0x93, 0x9F, 0x91, 0xBD, 0xCE, 0x5D, 0x9E, 0x91, 0xCE, 0x00, 0x93, 0x8D, 0x25, 0x08, 0x08, 0x8C, 0x00, 0x9B, 0x26, 0xF7, 0xBD, 0xE2, 0xF3, 0xDD, 0xA7, 0xDE, 0x93, 0x09, 0xE7, 0x00, 0xD7, 0x71, 0xBD, 0xC6, 0xDE, 0x8D, 0x1F, 0xDE, 0xE2, 0x08, 0x27, 0x0E, 0xCE, 0x00, 0xF4, 0x8D, 0x03, 0xCE, 0x00, 0xAD, 0xEC, 0x00, 0xD3, 0xD7, 0xED, 0x00, 0x39, 0x7E, 0xE2, 0x36, 0x8D, 0x03, 0x7E, 0xE5, 0x7F, 0x86, 0xFF, 0x21, 0x4F, 0xD6, 0x70, 0xD7, 0x6D, 0x27, 0x09, 0x36, 0x8D, 0x0E, 0x32, 0x7A, 0x00, 0x6D, 0x26, 0xF7, 0x39, 0x27, 0xEA, 0xBD, 0xC5, 0x84, 0x86, 0xFF, 0x97, 0x82, 0xBD, 0xC5, 0xA4, 0xA6, 0x00, 0x6F, 0x00, 0x94, 0x82, 0x2A, 0xEB, 0xE6, 0x02, 0x27, 0x03, 0x8D, 0x01, 0x5F, 0x4F, 0xDD, 0x83, 0xC6, 0x04, 0x3A, 0xFF, 0x01, 0x6F, 0xD6, 0x7E, 0xD7, 0xFF, 0x7E, 0xCA, 0xD2, 0x36, 0xBD, 0xC5, 0x70, 0x24, 0x03, 0x7E, 0xF9, 0xCE, 0x32, 0xE6, 0x00, 0x2A, 0x16, 0xDA, 0x6D, 0xD7, 0xE0, 0xE6, 0x02, 0x3C, 0x3A, 0xA7, 0x04, 0x38, 0x6C, 0x02, 0x26, 0x07, 0x36, 0xCC, 0x01, 0x00, 0x8D, 0xCE, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xF8, 0xD2, 0x27, 0xFA, 0x38, 0xBD, 0xF8, 0xCE, 0x27, 0x04, 0x86, 0x0C, 0x20, 0xEE, 0x7E, 0xF8, 0xC8, 0xBD, 0x01, 0x85, 0x3C, 0x37, 0x7F, 0x00, 0xE9, 0x8D, 0x67, 0x24, 0x03, 0x7E, 0xF8, 0x6A, 0xE6, 0x00, 0x2F, 0x20, 0xDA, 0x6D, 0xD7, 0xE0, 0xEC, 0x01, 0x27, 0x15, 0x3C, 0xE6, 0x03, 0x3A, 0xA6, 0x04, 0x38, 0x6C, 0x03, 0x6A, 0x02, 0x26, 0xC3, 0x6F, 0x01, 0x36, 0xBD, 0xC6, 0x21, 0x20, 0xBA, 0x73, 0x00, 0xE9, 0x4F, 0x20, 0xB5, 0x27, 0x06, 0x7D, 0x00, 0xE8, 0x27, 0x02, 0x4F, 0x16, 0xDD, 0x80, 0x39, 0xBD, 0xE7, 0xE0, 0x8D, 0x03, 0x7E, 0xE7, 0x21, 0x8D, 0x06, 0xBD, 0xE7, 0xFF, 0x7E, 0xE8, 0x11, 0x81, 0x23, 0x26, 0x0C, 0x8D, 0x22, 0x2B, 0x79, 0x5D, 0x2B, 0x79, 0x97, 0xE8, 0xBD, 0xEA, 0x2F, 0x81, 0x22, 0x26, 0x1E, 0xBD, 0xEA, 0x07, 0xC6, 0x3B, 0xBD, 0xEA, 0x31, 0x7E, 0xE7, 0xAB, 0x0D, 0xD6, 0xE8, 0x2F, 0x0E, 0xD7, 0x6D, 0x20, 0x33, 0x8D, 0x0E, 0x27, 0x04, 0xE6, 0x00, 0x27, 0x57, 0x96, 0x6D, 0x39, 0x8D, 0x03, 0x27, 0x4A, 0x39, 0x81, 0x23, 0x26, 0x02, 0x9D, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC7, 0xD7, 0x6D, 0x27, 0x08, 0xC3, 0x00, 0x02, 0x27, 0x19, 0x83, 0x00, 0x03, 0x4D, 0x26, 0x2E, 0xD6, 0x6D, 0x27, 0x0F, 0xD1, 0x70, 0x22, 0x26, 0x5A, 0x86, 0x82, 0x3D, 0x05, 0xD3, 0x6E, 0xDD, 0x91, 0xDE, 0x91, 0x39, 0x81, 0x40, 0x26, 0x03, 0x7E, 0xE7, 0x2B, 0x81, 0x23, 0x27, 0x03, 0x7E, 0xE7, 0x38, 0x8D, 0xB1, 0x2F, 0x03, 0x5D, 0x2A, 0x08, 0x97, 0xE8, 0x7E, 0xE7, 0x2E, 0x7E, 0xDD, 0x96, 0x7E, 0xFD, 0x9D, 0xC6, 0x36, 0x8C, 0xC6, 0x34, 0x7E, 0xE2, 0x38, 0xBD, 0xDD, 0xAA, 0x5D, 0x27, 0xEF, 0x86, 0x80, 0xE6, 0x00, 0xC1, 0x4F, 0x27, 0x0B, 0xC1, 0x41, 0x27, 0x06, 0xC1, 0x49, 0x26, 0xDF, 0x44, 0x21, 0x47, 0x36, 0xBD, 0xEA, 0x2F, 0x8D, 0x85, 0xA6, 0x00, 0x26, 0xD8, 0xBD, 0xEA, 0x2F, 0x8D, 0x4B, 0x33, 0x37, 0xDA, 0x6D, 0xBD, 0xCA, 0x5B, 0xCC, 0x51, 0x27, 0x8D, 0x59, 0x8D, 0x8E, 0x4F, 0x5F, 0xED, 0x01, 0xA7, 0x03, 0x33, 0xE7, 0x00, 0x2B, 0x96, 0x3C, 0xC6, 0x04, 0x3A, 0xFF, 0x01, 0x6F, 0xFF, 0x01, 0x71, 0x7C, 0x01, 0x71, 0xD6, 0x7E, 0xD7, 0xFF, 0xBD, 0xC8, 0x25, 0x38, 0xDC, 0x8D, 0xED, 0x01, 0x39, 0xBD, 0xC5, 0x92, 0xBD, 0xC5, 0x7B, 0x2B, 0x92, 0x27, 0x0A, 0x5D, 0x2B, 0x8D, 0xEC, 0x01, 0x27, 0x02, 0xC6, 0xFF, 0x53, 0x17, 0x7E, 0xEC, 0xE3, 0x5F, 0xD7, 0x82, 0xD7, 0x83, 0xD7, 0x71, 0x39, 0x81, 0xE2, 0x27, 0x03, 0x7E, 0xFB, 0x25, 0x9D, 0xEB, 0x8D, 0x14, 0xD6, 0x83, 0x27, 0x25, 0xCC, 0x44, 0x27, 0xCE, 0xC8, 0xC8, 0xBD, 0xC8, 0x92, 0xD6, 0x8B, 0x27, 0xE3, 0x7E, 0xE2, 0x38, 0x8D, 0xD7, 0x9D, 0xF3, 0x27, 0xDA, 0x7E, 0xCA, 0x5B, 0x81, 0x94, 0x26, 0x0B, 0x8D, 0xCA, 0xC6, 0x44, 0x9D, 0xEB, 0x27, 0x07, 0x7E, 0xEA, 0x3C, 0x8D, 0xE6, 0xC6, 0x46, 0xD7, 0x37, 0x86, 0x01, 0xD6, 0x37, 0xCE, 0xC8, 0xCB, 0x8D, 0xCF, 0x38, 0xD6, 0x8C, 0x26, 0x0A, 0x96, 0xE2, 0x4C, 0x26, 0x03, 0xCE, 0xE2, 0x71, 0x6E, 0x00, 0xBD, 0xE5, 0x66, 0x3C, 0x4F, 0xDD, 0x8D, 0xD7, 0x82, 0xCE, 0x21, 0x24, 0xDF, 0x80, 0xCE, 0x01, 0xB2, 0xDF, 0x8B, 0xBD, 0xC9, 0x1C, 0x27, 0x03, 0x7E, 0xC8, 0x89, 0x0E, 0xDE, 0x8B, 0xD6, 0x82, 0xBD, 0xE7, 0xAE, 0xBD, 0xE7, 0x6A, 0x4F, 0x97, 0x83, 0x43, 0x97, 0x82, 0x20, 0xBA, 0xDE, 0x95, 0x9C, 0x97, 0x24, 0x09, 0x8D, 0x2C, 0xBD, 0xED, 0xC7, 0x8D, 0x2F, 0x20, 0xF3, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x24, 0x24, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x24, 0xE8, 0x8D, 0x07, 0xBD, 0xED, 0xCD, 0x8D, 0x0A, 0x20, 0xF3, 0x7F, 0x00, 0xC5, 0xDC, 0x93, 0xDD, 0xC1, 0x39, 0x96, 0xC5, 0x27, 0xFB, 0x3C, 0xDE, 0xC5, 0x96, 0x71, 0x27, 0x05, 0xBD, 0xDD, 0x0A, 0x38, 0x39, 0xEC, 0x02, 0xD3, 0xD7, 0xED, 0x02, 0x38, 0x39, 0xCC, 0x11, 0x00, 0xDD, 0x71, 0xBD, 0xCA, 0x5E, 0xD6, 0xE0, 0x26, 0x55, 0xDC, 0x95, 0x93, 0x99, 0x27, 0x69, 0xD3, 0x9B, 0xDD, 0x37, 0xDC, 0x97, 0x93, 0x95, 0xDD, 0x39, 0xDE, 0x34, 0x9C, 0x9B, 0x23, 0x07, 0x9C, 0x9D, 0x22, 0x03, 0x09, 0xDF, 0x9D, 0x8D, 0x81, 0x73, 0x00, 0x71, 0xDE, 0x95, 0xDF, 0xC1, 0xDE, 0x9B, 0x09, 0xDF, 0xBB, 0xDE, 0x99, 0x09, 0xDF, 0xBD, 0x8E, 0x00, 0xDD, 0xBD, 0xE2, 0x00, 0xDE, 0xBF, 0x35, 0x73, 0x01, 0x6E, 0x20, 0x31, 0x8D, 0x0D, 0x81, 0x4D, 0x27, 0x11, 0xDE, 0x93, 0xA6, 0x00, 0x97, 0x72, 0x5F, 0x20, 0x1D, 0x81, 0xA9, 0x27, 0x04, 0x81, 0xD2, 0x26, 0x9E, 0x7E, 0xEA, 0x3C, 0x38, 0x7E, 0xE3, 0xD9, 0x7E, 0xE3, 0xDE, 0x27, 0xF7, 0x25, 0xF9, 0x8D, 0xE8, 0xC6, 0x5F, 0x7F, 0x00, 0x72, 0xD7, 0x71, 0xBD, 0xCA, 0x5E, 0xCC, 0x4E, 0x27, 0xCE, 0xC8, 0xCE, 0xBD, 0xC8, 0x92, 0xDC, 0x8D, 0x27, 0x79, 0x96, 0xE0, 0x26, 0x21, 0xD6, 0x71, 0x2B, 0x1A, 0xD6, 0x72, 0x27, 0x10, 0xDE, 0x93, 0xDF, 0x37, 0xDE, 0x95, 0xDF, 0x39, 0xC6, 0x08, 0x3A, 0xDF, 0x93, 0xFF, 0x01, 0x6F, 0xBD, 0xE3, 0xCF, 0x73, 0x01, 0x6E, 0x77, 0x00, 0x71, 0x9F, 0x91, 0x8E, 0x00, 0xCE, 0xDC, 0x8D, 0x27, 0x49, 0x96, 0xE0, 0x81, 0x02, 0x27, 0x1E, 0xFC, 0x01, 0x6F, 0xDD, 0x8B, 0xD3, 0x8D, 0xFD, 0x01, 0x6F, 0x7D, 0x00, 0xE0, 0x27, 0x08, 0xB3, 0x01, 0x71, 0x23, 0x10, 0x7E, 0xE2, 0x36, 0xDD, 0x95, 0xBD, 0xE2, 0x20, 0x20, 0x06, 0xDC, 0x8B, 0xD3, 0xDE, 0xDD, 0x8B, 0xCC, 0x4B, 0x27, 0xCE, 0xC9, 0x0D, 0x8D, 0x75, 0x9C, 0x8F, 0x26, 0xF7, 0x96, 0xE0, 0x85, 0x40, 0x27, 0x03, 0x39, 0x9F, 0x91, 0xCC, 0x51, 0x27, 0xCE, 0xC8, 0xFD, 0x8D, 0x63, 0x20, 0xB3, 0x9E, 0x91, 0xD6, 0x90, 0x26, 0x54, 0x96, 0xE0, 0x27, 0x1F, 0x81, 0x02, 0x26, 0x6C, 0xDC, 0x8B, 0xD3, 0xDE, 0xFD, 0x01, 0x1F, 0x96, 0x71, 0x27, 0x61, 0x96, 0x08, 0x36, 0x84, 0xF7, 0x97, 0x08, 0xFE, 0x01, 0x1F, 0xAD, 0x00, 0x32, 0x97, 0x08, 0x39, 0x5F, 0xDE, 0x95, 0xED, 0x00, 0xA7, 0x02, 0xBD, 0xE2, 0xF3, 0x08, 0x08, 0xDF, 0x95, 0x96, 0x71, 0x2B, 0x11, 0xBD, 0xE3, 0xD9, 0x96, 0x72, 0x26, 0x0D, 0x96, 0x71, 0x26, 0x03, 0x7E, 0xE2, 0x71, 0x7E, 0xCB, 0x49, 0x7E, 0xCB, 0x24, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0x7E, 0xCB, 0xBC, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x38, 0x4A, 0x27, 0xF7, 0xD7, 0x81, 0x3C, 0x37, 0x36, 0x86, 0x21, 0x97, 0x80, 0x0F, 0xAD, 0x00, 0x07, 0xD6, 0x7E, 0xF7, 0xFF, 0xF0, 0x06, 0x32, 0x33, 0x26, 0xE5, 0x31, 0x31, 0x39, 0x8D, 0x05, 0x81, 0x03, 0x27, 0xFA, 0x39, 0xCE, 0x00, 0x1C, 0xCC, 0x00, 0x04, 0x09, 0x27, 0xF6, 0xD5, 0x03, 0x27, 0x04, 0x8A, 0x02, 0x20, 0xF5, 0x8A, 0x01, 0x20, 0xF1, 0xC6, 0x01, 0x8C, 0xC6, 0x02, 0x8C, 0xC6, 0x06, 0x4F, 0xDD, 0x8D, 0x8D, 0xD7, 0xCE, 0x00, 0x80, 0xCC, 0x00, 0x04, 0xBD, 0xC9, 0x96, 0x96, 0x81, 0x81, 0x53, 0x26, 0x09, 0xCE, 0x01, 0x6A, 0xCC, 0x00, 0x04, 0xBD, 0xC9, 0x96, 0xD6, 0x83, 0x27, 0x06, 0x4F, 0xDE, 0x34, 0xBD, 0xC9, 0x96, 0xCE, 0x00, 0x8B, 0x0D, 0x20, 0x2B, 0xD6, 0x6D, 0xD7, 0x82, 0xCE, 0x00, 0x8B, 0xDF, 0x8B, 0xCC, 0x00, 0x06, 0xDD, 0x8D, 0x20, 0x11, 0xD6, 0x6D, 0xD7, 0x82, 0x96, 0xE0, 0x81, 0x02, 0x27, 0x05, 0x96, 0xFF, 0xB7, 0xFF, 0xF0, 0x8D, 0x8E, 0xCE, 0x00, 0x80, 0xCC, 0x00, 0x03, 0x8D, 0x70, 0xDE, 0x8B, 0xDC, 0x8D, 0x0F, 0xDD, 0xDC, 0xCC, 0x00, 0x00, 0xDD, 0xD8, 0xCC, 0x04, 0x01, 0xC9, 0x00, 0x09, 0xDF, 0xDA, 0x9F, 0xD6, 0x9E, 0xDC, 0x27, 0x51, 0x95, 0x03, 0x27, 0x23, 0xCE, 0x00, 0x00, 0x95, 0x03, 0x27, 0x1C, 0x95, 0x03, 0x27, 0x18, 0x09, 0x95, 0x03, 0x27, 0x13, 0x8C, 0x00, 0x01, 0x95, 0x03, 0x27, 0x0C, 0x24, 0xEE, 0x95, 0x03, 0x27, 0x06, 0x5A, 0x26, 0xE7, 0x5A, 0x20, 0x2B, 0x34, 0xBF, 0x00, 0xDC, 0x31, 0x9E, 0xDA, 0x31, 0x9F, 0xDA, 0xC6, 0x40, 0x96, 0x03, 0x09, 0x08, 0xDE, 0xD8, 0x44, 0x44, 0x04, 0x24, 0xF5, 0xB6, 0x00, 0x03, 0x44, 0x44, 0x04, 0x37, 0x3A, 0xDF, 0xD8, 0xCC, 0x04, 0x01, 0xB5, 0x00, 0x03, 0x26, 0xAC, 0x21, 0x5F, 0x9E, 0xD6, 0x5D, 0x39, 0xDD, 0xDC, 0x4F, 0x5F, 0xDD, 0xD8, 0x86, 0x11, 0x06, 0x97, 0x03, 0xE6, 0x00, 0x08, 0x3C, 0xDE, 0xD8, 0x3A, 0x86, 0x08, 0x58, 0xD7, 0x03, 0x56, 0xDF, 0xD8, 0x3C, 0x38, 0x80, 0x01, 0x26, 0xF5, 0xF7, 0x00, 0x03, 0x4C, 0xDE, 0xDC, 0x09, 0xDF, 0xDC, 0x38, 0x26, 0xDD, 0x97, 0x03, 0xDE, 0xD8, 0x39, 0xC6, 0x77, 0x30, 0xE7, 0x03, 0x4F, 0x5F, 0xDD, 0x8D, 0xD6, 0x6D, 0xD7, 0x82, 0xD6, 0xFF, 0xF7, 0xFF, 0xF0, 0xCE, 0x00, 0x80, 0xC6, 0x05, 0x8D, 0xB6, 0xDC, 0x83, 0x27, 0x07, 0xFE, 0x01, 0x6F, 0x8D, 0xAD, 0xDF, 0x8D, 0xCE, 0x00, 0x8F, 0xCC, 0x00, 0x02, 0x7E, 0xC9, 0x2A, 0xC6, 0x2C, 0xBD, 0xD9, 0x04, 0xFD, 0x01, 0x6F, 0x8B, 0x0C, 0xFD, 0x01, 0x71, 0x39, 0x5F, 0xD7, 0x6D, 0xD7, 0x36, 0x81, 0x4D, 0x27, 0x1C, 0x81, 0xA9, 0x27, 0x12, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0x81, 0xD2, 0x26, 0x13, 0xCC, 0x40, 0x00, 0x8D, 0xDC, 0xC6, 0x06, 0x20, 0x06, 0xBD, 0xFD, 0xDB, 0xC6, 0x02, 0x8C, 0x9D, 0xEB, 0xCB, 0x02, 0xD7, 0xE0, 0xBD, 0xE9, 0x1A, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xDF, 0x34, 0xCE, 0x00, 0x00, 0xFF, 0x01, 0x6A, 0x9D, 0xF3, 0x27, 0x12, 0xD6, 0xE0, 0xC1, 0x08, 0x27, 0xAD, 0xD6, 0x71, 0x26, 0x06, 0xC6, 0x02, 0xD1, 0xE0, 0x26, 0x07, 0x8D, 0x79, 0xDF, 0xDE, 0x39, 0xC6, 0x2C, 0x7E, 0xE2, 0x38, 0x8D, 0xCE, 0x8C, 0x8D, 0xA2, 0xDE, 0x34, 0xBD, 0xEE, 0x58, 0xDF, 0x34, 0x96, 0xE0, 0xDD, 0x82, 0x5D, 0x27, 0xE8, 0x80, 0x08, 0x27, 0x02, 0x96, 0x7E, 0x97, 0xFF, 0x39, 0x8D, 0x89, 0x96, 0xE0, 0x26, 0x0A, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xDE, 0xDE, 0x81, 0x02, 0x27, 0x0C, 0x8D, 0xD1, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xFD, 0x01, 0x6C, 0x8C, 0x8D, 0x47, 0xCC, 0x55, 0x27, 0xCE, 0xC8, 0xC8, 0xBD, 0xC8, 0x92, 0xD6, 0x8B, 0x26, 0xB0, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0x81, 0x03, 0x23, 0x03, 0xCC, 0x04, 0x00, 0xDD, 0x83, 0x9F, 0x91, 0x8E, 0x00, 0xCE, 0x8D, 0x14, 0x9E, 0x91, 0xDC, 0x83, 0x27, 0x1D, 0xF3, 0x01, 0x6F, 0xFD, 0x01, 0x6F, 0x20, 0xDC, 0xBD, 0xEA, 0x2F, 0x7E, 0xEF, 0x4C, 0xCC, 0x5B, 0x27, 0xCE, 0xC9, 0xC7, 0xBD, 0xC8, 0x8F, 0xDE, 0x8F, 0x9C, 0x8D, 0x26, 0xF4, 0x39, 0xFF, 0x01, 0x6F, 0xFF, 0x01, 0x6C, 0xFF, 0x01, 0x6A, 0x8D, 0xDF, 0xBC, 0x01, 0x6F, 0x25, 0x10, 0x08, 0xFF, 0x01, 0x71, 0x9D, 0xF3, 0x27, 0x05, 0x8D, 0xD0, 0xFF, 0x01, 0x6A, 0x7E, 0xCA, 0x60, 0x7E, 0xEC, 0x2E, 0x9D, 0xF3, 0x81, 0x4D, 0x26, 0x15, 0x38, 0x9D, 0xEB, 0xBD, 0xFD, 0x33, 0x8D, 0xB9, 0x8D, 0xCD, 0xC6, 0x02, 0xF7, 0x01, 0x67, 0xBD, 0xFC, 0x8E, 0x7E, 0xFC, 0x5D, 0x5F, 0x81, 0xA9, 0x39, 0xDC, 0x9B, 0x93, 0x37, 0xD3, 0x95, 0xDD, 0x99, 0xDC, 0x95, 0xD3, 0x39, 0xDD, 0x97, 0x0F, 0x9E, 0x37, 0x34, 0xDE, 0x95, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x99, 0x25, 0xF8, 0x9E, 0x9B, 0xD6, 0x36, 0x27, 0x03, 0x7E, 0xE2, 0x49, 0x7F, 0x01, 0x6E, 0xDE, 0x93, 0xDC, 0xDE, 0x27, 0x07, 0xDD, 0xA5, 0xBD, 0xE3, 0xBB, 0x25, 0x09, 0x09, 0xDF, 0xF4, 0xBD, 0xE3, 0xEE, 0x7E, 0xE5, 0x19, 0xCC, 0xFF, 0xFF, 0xDD, 0xE2, 0x7E, 0xE6, 0x42, 0xD7, 0x36, 0x96, 0x72, 0x26, 0x7B, 0x96, 0x71, 0x2A, 0x03, 0x44, 0x24, 0xAD, 0x7E, 0xE3, 0xCF, 0xD3, 0x3E, 0x25, 0x19, 0xDD, 0x3E, 0xDD, 0xA5, 0x83, 0xF9, 0xFF, 0x22, 0x10, 0x8D, 0x7A, 0xBD, 0xFA, 0xA4, 0x25, 0x09, 0xDF, 0xF4, 0x9D, 0xEB, 0x27, 0x03, 0x7E, 0xE2, 0x96, 0x4F, 0x5F, 0xFD, 0x02, 0xBF, 0x7E, 0xE2, 0x71, 0xBD, 0xE2, 0xF5, 0x96, 0x72, 0x26, 0x08, 0xFC, 0x02, 0xBF, 0x26, 0xCF, 0x7E, 0xE2, 0x7A, 0xDE, 0x95, 0xDF, 0x39, 0xFE, 0x01, 0x6F, 0xDF, 0x93, 0xFE, 0x01, 0x71, 0xDF, 0x95, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xDE, 0x93, 0xEC, 0x00, 0xFD, 0x01, 0x6F, 0x27, 0x21, 0xEC, 0x02, 0xDD, 0xA5, 0xBD, 0xD9, 0xF1, 0x8D, 0x27, 0xCE, 0xF7, 0x4B, 0xBD, 0xE7, 0xA8, 0x8D, 0x28, 0xF6, 0x01, 0x81, 0xC4, 0xE0, 0xF7, 0x01, 0x81, 0xCE, 0x01, 0xB3, 0xDF, 0xF4, 0x7E, 0xE2, 0x96, 0x7F, 0x00, 0x72, 0x8D, 0x0A, 0xBD, 0xCC, 0xF5, 0xD6, 0x36, 0x26, 0x0B, 0x7E, 0xE2, 0x71, 0xDE, 0x39, 0xDF, 0x95, 0xDE, 0x37, 0xDF, 0x93, 0x39, 0xDC, 0xA5, 0xBD, 0xF4, 0x19, 0x7E, 0xE7, 0xB9, 0xCE, 0x00, 0x0A, 0xFF, 0x02, 0xBF, 0x24, 0x02, 0x8D, 0x29, 0xDF, 0x3E, 0x8D, 0x17, 0x24, 0x08, 0xFF, 0x02, 0xBF, 0x27, 0x47, 0xBD, 0xFD, 0x2B, 0xBD, 0xE7, 0x6A, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xDC, 0x3E, 0x7E, 0xCB, 0x80, 0x9D, 0xF3, 0x27, 0x10, 0xBD, 0xEA, 0x2F, 0x25, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x05, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0x0D, 0x39, 0xCC, 0x00, 0x0A, 0xDD, 0x34, 0xDD, 0x38, 0x5F, 0xDD, 0x36, 0x9D, 0xF3, 0x27, 0x1A, 0x24, 0x04, 0x8D, 0xE7, 0xDF, 0x34, 0x8D, 0xD5, 0x24, 0x10, 0xDF, 0x36, 0x8D, 0xCF, 0x24, 0x0A, 0xDF, 0x38, 0x26, 0x03, 0x7E, 0xEC, 0x2E, 0xBD, 0xFD, 0x2B, 0xBD, 0xE3, 0xDE, 0xDC, 0x36, 0xDD, 0xA5, 0xBD, 0xE3, 0xB9, 0xDF, 0x3A, 0xDC, 0x34, 0xDD, 0xA5, 0xBD, 0xE3, 0xB9, 0x9C, 0x3A, 0x25, 0xE3, 0xDE, 0x3A, 0x4F, 0x5F, 0xC3, 0x00, 0x01, 0xEE, 0x00, 0x26, 0xF9, 0x83, 0x00, 0x01, 0x27, 0x5C, 0x05, 0x05, 0xDD, 0x89, 0xDC, 0xA1, 0x93, 0x89, 0xDD, 0x3C, 0xDD, 0x40, 0x83, 0x00, 0x3A, 0xDD, 0xBB, 0x93, 0x95, 0x23, 0x04, 0x93, 0x89, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0x9E, 0x3C, 0x34, 0xDE, 0x3A, 0xEC, 0x02, 0xEE, 0x00, 0x27, 0x1B, 0xDF, 0x3A, 0xDE, 0x40, 0xED, 0x00, 0xDC, 0x34, 0xED, 0x02, 0x81, 0xF9, 0x22, 0x9E, 0xD3, 0x38, 0x25, 0x9A, 0xDD, 0x34, 0xC6, 0x04, 0x3A, 0xDF, 0x40, 0x20, 0xDD, 0xDE, 0x93, 0xDF, 0xC1, 0xDE, 0x95, 0xDF, 0xBD, 0xBD, 0xE2, 0x00, 0x0F, 0x9E, 0xBF, 0x34, 0xDE, 0x93, 0x09, 0x32, 0x33, 0xED, 0x01, 0x26, 0x11, 0x9E, 0x9B, 0x8D, 0x03, 0x7E, 0xE2, 0x71, 0xBD, 0xE2, 0xF3, 0x08, 0x08, 0xDF, 0x95, 0x7E, 0xE3, 0xDE, 0x32, 0x33, 0xED, 0x03, 0xDD, 0xA5, 0xDF, 0x40, 0xDE, 0x3C, 0xA3, 0x00, 0x23, 0x0A, 0xC6, 0x04, 0x3A, 0xDC, 0xA5, 0x9C, 0xA1, 0x25, 0xF3, 0x0D, 0xEC, 0x02, 0xDE, 0x40, 0x25, 0x02, 0xED, 0x03, 0xEC, 0x03, 0xDD, 0xE2, 0xC6, 0x04, 0x3A, 0x5F, 0x20, 0x04, 0xCA, 0x80, 0xCA, 0x02, 0x32, 0x08, 0xA7, 0x00, 0x27, 0xB5, 0x81, 0x20, 0x27, 0xF6, 0x5D, 0x2B, 0xF3, 0xC5, 0x04, 0x27, 0x04, 0x81, 0x2C, 0x27, 0x3B, 0x81, 0x22, 0x26, 0x02, 0xC8, 0x01, 0x81, 0x3A, 0x26, 0x06, 0xC5, 0x01, 0x26, 0xDD, 0xC4, 0xF9, 0x4D, 0x2A, 0xD8, 0xC5, 0x03, 0x26, 0xD4, 0x81, 0x85, 0x27, 0xCE, 0x81, 0x83, 0x27, 0xC8, 0x81, 0xDD, 0x27, 0xC4, 0x81, 0x81, 0x27, 0x14, 0x81, 0x82, 0x27, 0x10, 0x81, 0xA3, 0x27, 0x0C, 0x81, 0xC9, 0x27, 0x08, 0x81, 0x8E, 0x27, 0x04, 0x81, 0x8F, 0x26, 0xB0, 0x9F, 0x3E, 0x32, 0x08, 0xA7, 0x00, 0x27, 0xAC, 0x81, 0x20, 0x27, 0xF4, 0x81, 0x39, 0x22, 0xBB, 0x80, 0x30, 0x25, 0x9C, 0x09, 0x16, 0x4F, 0xDD, 0xCA, 0x9F, 0x89, 0x32, 0x81, 0x20, 0x27, 0xFB, 0x81, 0x39, 0x22, 0x17, 0x80, 0x30, 0x25, 0x13, 0x97, 0x80, 0x96, 0xCA, 0x81, 0x18, 0x22, 0x5C, 0x05, 0x05, 0xD3, 0xCA, 0x05, 0xDB, 0x80, 0x89, 0x00, 0x20, 0xDC, 0xDF, 0x40, 0xDE, 0x89, 0xDF, 0x3E, 0xDE, 0x3C, 0xDC, 0xCA, 0xA3, 0x00, 0x23, 0x08, 0xC6, 0x04, 0x3A, 0x9C, 0xA1, 0x25, 0xF3, 0x0D, 0x25, 0x04, 0xEC, 0x02, 0xDD, 0xCA, 0x9E, 0x3C, 0x34, 0x24, 0x1E, 0xDC, 0xCA, 0x93, 0x36, 0x25, 0x18, 0xDE, 0xCA, 0x3C, 0xCE, 0xCE, 0x0F, 0xBD, 0xE7, 0xA8, 0x30, 0xEC, 0x00, 0xBD, 0xF4, 0x19, 0xBD, 0xF4, 0x12, 0xBD, 0xE7, 0x66, 0x38, 0xDF, 0xCA, 0xBD, 0xDC, 0xAA, 0xBD, 0xF4, 0x26, 0x8E, 0x02, 0xAF, 0xDE, 0x40, 0x32, 0x08, 0xA7, 0x00, 0x26, 0xFA, 0x09, 0x9E, 0x3E, 0xC6, 0x04, 0x7E, 0xCD, 0x2D, 0x55, 0x4C, 0x20, 0x00, 0x7E, 0xEC, 0x2E, 0x27, 0xFB, 0xBD, 0xE6, 0xB2, 0xBD, 0xE3, 0xB9, 0xDF, 0xBF, 0x9D, 0xF3, 0x27, 0x15, 0xCC, 0xFF, 0xA8, 0x97, 0xA5, 0xBD, 0xEA, 0x31, 0x27, 0x0B, 0xBD, 0xE6, 0xB2, 0xBD, 0xFD, 0x2B, 0xCE, 0x00, 0xBF, 0xEE, 0x00, 0xEC, 0x00, 0x27, 0x06, 0xEC, 0x02, 0x93, 0xA5, 0x23, 0xF4, 0xDF, 0xC1, 0xDC, 0x95, 0x93, 0xC1, 0x8D, 0x11, 0xDE, 0xBB, 0xDF, 0x95, 0x9E, 0x9B, 0xBD, 0xE3, 0xDE, 0xDE, 0xBF, 0xBD, 0xE2, 0xF5, 0x7E, 0xE2, 0x71, 0x38, 0xDF, 0x8B, 0xDE, 0xBF, 0xD3, 0xBF, 0xDD, 0xBB, 0x0F, 0x9E, 0xC1, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBB, 0x26, 0xF8, 0xDE, 0x8B, 0x6E, 0x00, 0xCE, 0xCE, 0xC2, 0x8D, 0x06, 0x96, 0x5C, 0xB7, 0xBF, 0xFF, 0x39, 0xDF, 0x34, 0x5F, 0x37, 0x37, 0x5C, 0x37, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0x8C, 0x33, 0x38, 0xD7, 0x3A, 0x27, 0xFA, 0xDF, 0x38, 0x27, 0xE7, 0x96, 0x3A, 0x27, 0xF2, 0xBD, 0xCF, 0xC5, 0x81, 0x3B, 0x27, 0xF5, 0x81, 0x27, 0x27, 0xF1, 0x81, 0x58, 0x27, 0x06, 0xDE, 0x34, 0xAD, 0x00, 0x20, 0xE7, 0xBD, 0xD0, 0x37, 0xC6, 0x02, 0xBD, 0xE2, 0x1A, 0xDE, 0x38, 0x3C, 0xD6, 0x3A, 0x37, 0x20, 0xC9, 0x81, 0x4F, 0x26, 0x0D, 0xD6, 0x6A, 0x5C, 0x8D, 0x55, 0x5A, 0xC1, 0x04, 0x22, 0x5D, 0xD7, 0x6A, 0x39, 0x81, 0x56, 0x26, 0x12, 0xD6, 0x69, 0xC4, 0x1F, 0x8D, 0x43, 0xC1, 0x1F, 0x22, 0x4C, 0x5D, 0x27, 0x02, 0xCA, 0x80, 0xD7, 0x69, 0x39, 0x81, 0x4C, 0x26, 0x25, 0xD6, 0x6B, 0x8D, 0x2F, 0x5D, 0x27, 0x39, 0xD7, 0x6B, 0x7F, 0x00, 0x68, 0x8D, 0x03, 0x24, 0xFC, 0x39, 0x96, 0x3A, 0x27, 0x0A, 0xBD, 0xCF, 0xC5, 0x81, 0x2E, 0x27, 0x05, 0xBD, 0xD0, 0x25, 0x0D, 0x39, 0x7C, 0x00, 0x68, 0x39, 0x81, 0x54, 0x26, 0x0D, 0xD6, 0x6C, 0x8D, 0x06, 0x5D, 0x27, 0x10, 0xD7, 0x6C, 0x39, 0x7E, 0xCF, 0xDA, 0x81, 0x50, 0x26, 0x1A, 0xBD, 0xCF, 0xFA, 0x5D, 0x26, 0x03, 0x7E, 0xEC, 0x2E, 0xDE, 0x68, 0x3C, 0x4F, 0x97, 0x68, 0x97, 0x69, 0x8D, 0x04, 0x38, 0xDF, 0x68, 0x39, 0x36, 0x20, 0x3C, 0x81, 0x4E, 0x26, 0x02, 0x8D, 0x7E, 0x81, 0x41, 0x25, 0x04, 0x81, 0x47, 0x23, 0x06, 0xBD, 0xCF, 0xFC, 0x5A, 0x20, 0x21, 0x16, 0xC0, 0x41, 0xCE, 0xD0, 0x52, 0x3A, 0xE6, 0x00, 0x96, 0x3A, 0x27, 0xF0, 0x8D, 0x61, 0x81, 0x23, 0x27, 0x0E, 0x81, 0x2B, 0x27, 0x0A, 0xC0, 0x02, 0x81, 0x2D, 0x27, 0x04, 0x5C, 0xBD, 0xD0, 0x25, 0xC1, 0x0B, 0x22, 0xB3, 0x37, 0xD6, 0x6B, 0x96, 0x6C, 0x3D, 0xDD, 0x3D, 0x30, 0xDF, 0x36, 0x96, 0x6A, 0xC6, 0x0C, 0x3D, 0x32, 0x1B, 0x16, 0x4F, 0xC1, 0x0E, 0x24, 0x06, 0x4C, 0xC1, 0x02, 0x24, 0x01, 0x4C, 0xCE, 0xD0, 0x59, 0x3A, 0xE6, 0x00, 0xDD, 0x3B, 0xC6, 0xFF, 0x96, 0x68, 0x27, 0x04, 0x8B, 0x02, 0x3D, 0x04, 0xDD, 0xF9, 0xD6, 0x69, 0xC4, 0x80, 0x96, 0x5C, 0x8D, 0x06, 0x01, 0x1B, 0x8D, 0x02, 0x20, 0xF6, 0xB7, 0xBF, 0xFF, 0xDE, 0x3B, 0x09, 0x08, 0x09, 0x26, 0xFB, 0x39, 0x3C, 0x96, 0x3A, 0x27, 0x3B, 0x4A, 0x97, 0x3A, 0xDE, 0x38, 0xA6, 0x00, 0x08, 0xDF, 0x38, 0x81, 0x20, 0x27, 0xEE, 0x38, 0x39, 0x8D, 0xE9, 0x81, 0x2B, 0x26, 0x04, 0x5C, 0x27, 0x22, 0x39, 0x81, 0x2D, 0x26, 0x05, 0xC0, 0x01, 0x25, 0x19, 0x39, 0x81, 0x3E, 0x26, 0x03, 0x58, 0x20, 0xF6, 0x81, 0x3C, 0x26, 0x04, 0x54, 0x39, 0x8D, 0xC9, 0x81, 0x3D, 0x26, 0x08, 0x8D, 0x35, 0x7E, 0xEF, 0x10, 0x7E, 0xEC, 0x2E, 0x8D, 0x24, 0x25, 0xF9, 0x5F, 0x80, 0x30, 0x97, 0x82, 0x86, 0x0A, 0x3D, 0x4D, 0x26, 0xEE, 0xDB, 0x82, 0x25, 0xEA, 0x96, 0x3A, 0x27, 0x0E, 0x8D, 0xA4, 0x8D, 0x0B, 0x24, 0xE8, 0x7C, 0x00, 0x3A, 0xDE, 0x38, 0x09, 0xDF, 0x38, 0x39, 0x81, 0x30, 0x25, 0x04, 0x80, 0x3A, 0x80, 0xC6, 0x39, 0xDE, 0xF4, 0x3C, 0xDE, 0x38, 0x8D, 0x87, 0xBD, 0xEB, 0x76, 0x25, 0xC2, 0x8D, 0x80, 0x81, 0x3B, 0x26, 0xFA, 0xDF, 0xF4, 0xBD, 0xEA, 0x49, 0x38, 0xDF, 0xF4, 0x39, 0x0A, 0x0C, 0x01, 0x03, 0x05, 0x06, 0x08, 0x38, 0x18, 0xFB, 0xDD, 0xC3, 0xA9, 0x91, 0x7B, 0x65, 0x51, 0x3F, 0x2C, 0x1C, 0x0C, 0xFC, 0xEF, 0xE0, 0xD4, 0xC8, 0xBC, 0xB1, 0xA8, 0x9F, 0x95, 0x8D, 0x84, 0x7D, 0x76, 0x70, 0x69, 0x63, 0x5D, 0x58, 0x53, 0x4E, 0x4A, 0x46, 0x42, 0x3E, 0x3A, 0x37, 0x34, 0x30, 0x2E, 0x2B, 0x29, 0x26, 0x24, 0x22, 0x20, 0x1E, 0x1C, 0x1B, 0x19, 0x17, 0x16, 0x15, 0x13, 0x12, 0x11, 0x4F, 0x5F, 0xDD, 0x3B, 0x5C, 0xD7, 0x55, 0xBD, 0xD7, 0xCA, 0xCE, 0xD0, 0xA6, 0xBD, 0xCE, 0x81, 0x39, 0x81, 0x4E, 0x26, 0x04, 0x73, 0x00, 0x3B, 0x39, 0x81, 0x42, 0x26, 0x04, 0x73, 0x00, 0x3C, 0x39, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xD1, 0xE0, 0x36, 0xC6, 0x01, 0x96, 0x3A, 0x27, 0x10, 0xBD, 0xD2, 0x01, 0xBD, 0xEB, 0x76, 0x25, 0x05, 0xBD, 0xD0, 0x25, 0x20, 0x03, 0xBD, 0xCF, 0xFC, 0x32, 0x81, 0x43, 0x26, 0x09, 0xBD, 0xD7, 0xF2, 0xD7, 0x64, 0xBD, 0xD7, 0xCA, 0x39, 0x81, 0x41, 0x26, 0x07, 0xC1, 0x03, 0x22, 0x37, 0xD7, 0x66, 0x39, 0x81, 0x53, 0x26, 0x07, 0xC1, 0x3E, 0x22, 0x2C, 0xD7, 0x67, 0x39, 0x36, 0x4F, 0xDD, 0x3D, 0x50, 0x82, 0x00, 0xDD, 0x3F, 0xDE, 0x3F, 0x32, 0x81, 0x55, 0x27, 0x3C, 0x81, 0x44, 0x27, 0x36, 0x81, 0x4C, 0x27, 0x28, 0x81, 0x52, 0x27, 0x27, 0x80, 0x45, 0x27, 0x16, 0x4A, 0x27, 0x0D, 0x4A, 0x27, 0x14, 0x4A, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x96, 0x3F, 0x20, 0x54, 0xDC, 0x3D, 0xDE, 0x3D, 0x20, 0x4E, 0xDC, 0x3D, 0x20, 0x4A, 0x96, 0x3F, 0xDE, 0x3D, 0x20, 0x44, 0x96, 0x3F, 0x8C, 0xDC, 0x3D, 0xCE, 0x00, 0x00, 0x20, 0x3A, 0xDE, 0x3D, 0x4F, 0x5F, 0x20, 0x34, 0x4F, 0xD6, 0x67, 0xDD, 0xCA, 0xEC, 0x00, 0xDE, 0xCA, 0x27, 0x16, 0x97, 0xCE, 0x2A, 0x02, 0x8D, 0x0C, 0xBD, 0xD3, 0x57, 0xDC, 0xCC, 0x04, 0x04, 0x7D, 0x00, 0xCE, 0x2A, 0x04, 0x40, 0x50, 0x82, 0x00, 0x39, 0xEC, 0x00, 0xED, 0x04, 0x7D, 0x00, 0x82, 0x26, 0xF6, 0xE3, 0x08, 0x2A, 0x02, 0x4F, 0x5F, 0xED, 0x08, 0x39, 0xDD, 0x4E, 0xDF, 0x50, 0xCE, 0x00, 0x4E, 0x8D, 0xC3, 0xDD, 0x4E, 0xCE, 0x00, 0x50, 0x8D, 0xBC, 0xDD, 0x50, 0x96, 0x66, 0x27, 0x0F, 0x36, 0xDE, 0x50, 0xDC, 0x4E, 0xDF, 0x4E, 0x8D, 0xCA, 0xDD, 0x50, 0x32, 0x4A, 0x26, 0xF1, 0x97, 0x82, 0xCE, 0x00, 0x46, 0x8D, 0xC2, 0xCE, 0x00, 0x48, 0x8D, 0xBD, 0xCE, 0x00, 0xFF, 0x9C, 0x4E, 0x24, 0x02, 0xDF, 0x4E, 0xCE, 0x00, 0xBF, 0x9C, 0x50, 0x24, 0x02, 0xDF, 0x50, 0x96, 0x3B, 0x26, 0x08, 0xDC, 0x4E, 0xDD, 0x46, 0xDC, 0x50, 0xDD, 0x48, 0x96, 0x3C, 0x26, 0x0C, 0xBD, 0xD7, 0x07, 0xBD, 0xE0, 0xEF, 0xBD, 0xD5, 0xB7, 0xBD, 0xE1, 0x35, 0x4F, 0x5F, 0xDD, 0x3B, 0x39, 0x8D, 0x1F, 0x36, 0x8D, 0x21, 0xDD, 0x4E, 0x8D, 0x18, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0x8D, 0x12, 0xDD, 0x50, 0x32, 0x81, 0x2B, 0x27, 0x87, 0x81, 0x2D, 0x27, 0x83, 0x97, 0x82, 0x20, 0xA2, 0x7E, 0xCF, 0xC5, 0x8D, 0xFB, 0x81, 0x2B, 0x27, 0x07, 0x81, 0x2D, 0x27, 0x04, 0xBD, 0xD0, 0x25, 0x4F, 0x36, 0xBD, 0xCF, 0xFA, 0x32, 0x4D, 0x27, 0x04, 0x4F, 0x50, 0x82, 0x00, 0x39, 0xBD, 0xD3, 0xA8, 0xDE, 0x4A, 0xDF, 0x34, 0xDE, 0x4C, 0xDF, 0x36, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x38, 0xCE, 0x00, 0x38, 0xBD, 0xD7, 0x12, 0x86, 0x01, 0x97, 0x55, 0xBD, 0xD7, 0xB4, 0xCE, 0x01, 0x00, 0x9D, 0xF3, 0x27, 0x09, 0x8D, 0x51, 0x8B, 0x08, 0x97, 0xC9, 0xBD, 0xEF, 0x4F, 0xDF, 0x3A, 0x96, 0x58, 0x84, 0x18, 0x81, 0x10, 0x26, 0x05, 0xDC, 0x3A, 0x05, 0xDD, 0x3A, 0x8D, 0x42, 0xDD, 0x3C, 0x8D, 0x3E, 0xDD, 0x3E, 0xBD, 0xE0, 0xEF, 0x8D, 0x4E, 0xDE, 0x4E, 0x3C, 0xDE, 0x50, 0x3C, 0x96, 0x55, 0x26, 0x03, 0xBD, 0xD5, 0xB7, 0x7F, 0x00, 0x55, 0x38, 0xDF, 0x4C, 0x38, 0xDF, 0x4A, 0xDC, 0x3C, 0x5C, 0xC4, 0x07, 0x26, 0x03, 0x4C, 0x84, 0x07, 0xDD, 0x3C, 0x93, 0x3E, 0x26, 0xD8, 0x8D, 0x26, 0xBD, 0xD5, 0xB7, 0x7E, 0xE1, 0x32, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x0C, 0x96, 0xC9, 0x39, 0x5F, 0x9D, 0xF3, 0x27, 0x0B, 0x8D, 0xF0, 0x8B, 0x06, 0x97, 0xC9, 0xBD, 0xEF, 0x10, 0xC4, 0x3F, 0x17, 0xC4, 0x07, 0x44, 0x44, 0x44, 0x39, 0xDC, 0x3C, 0xCE, 0xD3, 0x84, 0x84, 0x01, 0x27, 0x03, 0x50, 0xCB, 0x08, 0x58, 0x58, 0x3A, 0x3C, 0xBD, 0xD3, 0x50, 0xDD, 0x4E, 0x38, 0x08, 0x08, 0x8D, 0x7D, 0xDD, 0x50, 0x96, 0x3C, 0x84, 0x03, 0x27, 0x0C, 0x80, 0x03, 0x27, 0x08, 0x96, 0x50, 0xDE, 0x4E, 0xDF, 0x50, 0xDD, 0x4E, 0xDC, 0x50, 0xDE, 0x3A, 0x8C, 0x01, 0x00, 0x27, 0x1B, 0x8C, 0x02, 0x00, 0x26, 0x05, 0x05, 0xDD, 0x50, 0x20, 0x11, 0x8D, 0x5B, 0x4D, 0x27, 0x06, 0xBD, 0xE1, 0x35, 0x7E, 0xEC, 0x2E, 0xD7, 0x50, 0x96, 0xCC, 0x97, 0x51, 0x96, 0x3C, 0x81, 0x02, 0x25, 0x0E, 0x81, 0x05, 0x22, 0x0A, 0xDC, 0x34, 0x93, 0x4E, 0x24, 0x12, 0x4F, 0x5F, 0x20, 0x0E, 0xDC, 0x34, 0xD3, 0x4E, 0x25, 0x06, 0xDD, 0x4E, 0x93, 0x42, 0x23, 0x04, 0xDC, 0x42, 0xDD, 0x4E, 0x96, 0x3C, 0x81, 0x04, 0x25, 0x0A, 0xDC, 0x36, 0x93, 0x50, 0x24, 0x12, 0x4F, 0x5F, 0x20, 0x0E, 0xDC, 0x36, 0xD3, 0x50, 0x25, 0x06, 0xDD, 0x50, 0x93, 0x44, 0x23, 0x04, 0xDC, 0x44, 0xDD, 0x50, 0x39, 0xDC, 0x38, 0xEE, 0x00, 0x27, 0xF9, 0x09, 0xDD, 0xD7, 0xDF, 0xD9, 0x7F, 0x00, 0xCA, 0x96, 0xDA, 0x3D, 0xDD, 0xCC, 0xDC, 0xD8, 0x3D, 0xDB, 0xCC, 0x89, 0x00, 0xDD, 0xCB, 0xD6, 0xD7, 0x96, 0xDA, 0x3D, 0xD3, 0xCB, 0xDD, 0xCB, 0x24, 0x03, 0x7C, 0x00, 0xCA, 0x96, 0xD7, 0xD6, 0xD9, 0x3D, 0xD3, 0xCA, 0xDD, 0xCA, 0x39, 0x00, 0x00, 0x00, 0x01, 0xFE, 0xC5, 0x19, 0x19, 0xFB, 0x16, 0x31, 0xF2, 0xF4, 0xFB, 0x4A, 0x51, 0xEC, 0x84, 0x61, 0xF9, 0xE1, 0xC7, 0x78, 0xAE, 0xD4, 0xDC, 0x8E, 0x3B, 0xC5, 0xE5, 0xA2, 0x69, 0xB5, 0x06, 0xB5, 0x06, 0x81, 0x40, 0x26, 0x02, 0x9D, 0xEB, 0xCE, 0x00, 0xFF, 0xDF, 0x42, 0xCE, 0x00, 0xBF, 0xDF, 0x44, 0xCE, 0x00, 0x42, 0xBD, 0xD7, 0x12, 0xBD, 0xD7, 0x56, 0x7E, 0xEA, 0x29, 0x8D, 0xE2, 0xD7, 0x55, 0xBD, 0xD7, 0xB4, 0xDE, 0x56, 0x3C, 0x9D, 0xF3, 0x27, 0x03, 0xBD, 0xD7, 0xB4, 0xD7, 0x38, 0x38, 0xDF, 0x56, 0xBD, 0xE0, 0xEF, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xA6, 0x00, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x49, 0x86, 0xFF, 0xBD, 0xD4, 0xE5, 0x96, 0x7E, 0x27, 0x07, 0xD6, 0x5F, 0x5C, 0xBD, 0xD9, 0x16, 0x8C, 0xDC, 0x99, 0xC3, 0x00, 0x10, 0xDD, 0x3C, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x57, 0xD4, 0xE1, 0x26, 0x03, 0x7E, 0xD4, 0xC7, 0xD6, 0x4B, 0x27, 0x26, 0x5C, 0xD7, 0x4B, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x38, 0xD4, 0xE1, 0x27, 0x14, 0x7A, 0x00, 0x4B, 0x27, 0x14, 0x48, 0x24, 0x02, 0x49, 0x09, 0xD6, 0x59, 0x2A, 0xE8, 0x49, 0x20, 0xE5, 0x7E, 0xD4, 0xD4, 0xBD, 0xD6, 0x33, 0x97, 0xE1, 0xCC, 0x00, 0x00, 0xDD, 0x3A, 0xD6, 0x4B, 0xD7, 0x4F, 0xDF, 0x52, 0xD6, 0x59, 0xC4, 0x7F, 0x3A, 0xDF, 0x36, 0x43, 0x50, 0xD3, 0x52, 0xDD, 0x34, 0xDE, 0x52, 0x96, 0xE1, 0x16, 0x43, 0xA4, 0x00, 0xD4, 0x57, 0x1B, 0xA7, 0x00, 0x96, 0x4D, 0x27, 0x20, 0xDE, 0x34, 0xA6, 0x00, 0x16, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x0D, 0xD8, 0x57, 0xD4, 0xE1, 0x27, 0x09, 0x96, 0x3A, 0x26, 0x05, 0x43, 0x8D, 0x5B, 0x97, 0x3A, 0x96, 0x4D, 0x91, 0x45, 0x27, 0x1A, 0xDE, 0x36, 0xA6, 0x00, 0x16, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x0D, 0xD8, 0x57, 0xD4, 0xE1, 0x27, 0x09, 0x96, 0x3B, 0x26, 0x05, 0x4C, 0x8D, 0x3B, 0x97, 0x3B, 0xD6, 0x4F, 0xD1, 0x43, 0x27, 0x23, 0x5C, 0xD7, 0x4F, 0xDE, 0x52, 0x96, 0xE1, 0x44, 0x24, 0x0A, 0x46, 0x08, 0xDF, 0x52, 0x7C, 0x00, 0x35, 0x7C, 0x00, 0x37, 0xD6, 0x59, 0x2A, 0x01, 0x46, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x38, 0xD4, 0xE1, 0x26, 0x90, 0x32, 0x97, 0x4B, 0x32, 0x81, 0xFF, 0x27, 0x05, 0x97, 0x4D, 0x7E, 0xD4, 0x01, 0x7E, 0xE1, 0x32, 0x30, 0x9C, 0x3C, 0x24, 0x06, 0xBD, 0xE1, 0x35, 0x7E, 0xE2, 0x36, 0xD6, 0x4D, 0x1B, 0x38, 0x36, 0x10, 0xD6, 0x4F, 0x37, 0x6E, 0x00, 0x9D, 0xEB, 0xBD, 0xE7, 0xE0, 0x8D, 0x03, 0x7E, 0xE7, 0x21, 0xBD, 0xC5, 0x51, 0xBD, 0xE8, 0x05, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE9, 0x0F, 0xCE, 0x01, 0xB1, 0x4F, 0xBD, 0xED, 0x08, 0x7E, 0xE6, 0xEA, 0xDE, 0x46, 0xDF, 0x4A, 0xDE, 0x48, 0xDF, 0x4C, 0x81, 0xA8, 0x27, 0x05, 0xCE, 0x00, 0x4A, 0x8D, 0x08, 0xC6, 0xA8, 0xBD, 0xEA, 0x31, 0xCE, 0x00, 0x4E, 0xBD, 0xEA, 0x2C, 0xBD, 0xD6, 0xEE, 0x7E, 0xEA, 0x29, 0x81, 0x88, 0x27, 0xB8, 0x81, 0x28, 0x27, 0x09, 0x81, 0xA8, 0x27, 0x05, 0xC6, 0x40, 0xBD, 0xEA, 0x31, 0x8D, 0xCB, 0xDC, 0x4E, 0xDD, 0x46, 0xDC, 0x50, 0xDD, 0x48, 0xBD, 0xD7, 0x07, 0xBD, 0xEA, 0x2F, 0x2B, 0x08, 0xBD, 0xD7, 0xEF, 0xBD, 0xD7, 0xD3, 0x20, 0x0F, 0xC6, 0xCC, 0x10, 0x97, 0x55, 0x27, 0x02, 0xC6, 0xCB, 0xBD, 0xEA, 0x31, 0xBD, 0xD7, 0xCA, 0x5F, 0x9D, 0xF3, 0x27, 0x18, 0xBD, 0xEA, 0x2F, 0xCE, 0x00, 0x4A, 0x8D, 0x33, 0x08, 0x08, 0x8D, 0x2F, 0xC6, 0x42, 0xBD, 0xEA, 0x31, 0x27, 0x05, 0xC6, 0x46, 0xBD, 0xEA, 0x31, 0xBD, 0xE0, 0xEF, 0x5D, 0x27, 0x19, 0x96, 0x4D, 0xC1, 0x46, 0x27, 0x51, 0xBD, 0xD6, 0x9F, 0xBD, 0xD6, 0x6F, 0x96, 0x51, 0xBD, 0xD6, 0x9F, 0x96, 0x4F, 0x97, 0x4B, 0xBD, 0xD6, 0x6F, 0x8C, 0x8D, 0x0E, 0x20, 0x44, 0xE6, 0x01, 0xA6, 0x05, 0x11, 0x24, 0x04, 0xA7, 0x01, 0xE7, 0x05, 0x39, 0xD6, 0x59, 0xC4, 0x7F, 0x4F, 0xDD, 0xBE, 0xCE, 0x00, 0x4A, 0x8D, 0xE8, 0x27, 0x18, 0x10, 0xE6, 0x07, 0x24, 0x0A, 0x40, 0x36, 0xA6, 0x03, 0xE7, 0x03, 0xA7, 0x07, 0x16, 0x32, 0xE0, 0x03, 0x26, 0x1A, 0x96, 0x4D, 0x7E, 0xD6, 0x9F, 0xCE, 0x00, 0x4C, 0x8D, 0xC9, 0x7E, 0xD6, 0x6F, 0x36, 0xBD, 0xD6, 0x9F, 0x32, 0x4C, 0x91, 0x51, 0x23, 0xF6, 0x7E, 0xE1, 0x32, 0x22, 0x07, 0x73, 0x00, 0xBE, 0x70, 0x00, 0xBF, 0x50, 0x11, 0x25, 0x4D, 0x97, 0xBB, 0xD7, 0xBD, 0x16, 0x8D, 0x1B, 0x8C, 0x8D, 0x29, 0xBD, 0xD7, 0x70, 0x7A, 0x00, 0x54, 0x27, 0x20, 0xDC, 0xC0, 0xD3, 0xBC, 0xDD, 0xC0, 0x93, 0xBA, 0x25, 0xEC, 0xDD, 0xC0, 0x8D, 0x22, 0x20, 0xE6, 0x4C, 0x97, 0x54, 0x4F, 0x54, 0xDD, 0xC0, 0x97, 0xBA, 0x97, 0xBC, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0x39, 0x96, 0xE1, 0x44, 0x24, 0x02, 0x46, 0x08, 0xD6, 0x59, 0x2A, 0x01, 0x46, 0x97, 0xE1, 0x39, 0xDF, 0x89, 0xDC, 0x89, 0xD3, 0xBE, 0xDD, 0x89, 0xDE, 0x89, 0x39, 0xD7, 0xBB, 0x97, 0xBD, 0x17, 0x8D, 0xCE, 0x8C, 0x8D, 0xEB, 0x96, 0xE1, 0xBD, 0xD7, 0x70, 0x7A, 0x00, 0x54, 0x27, 0xD1, 0xDC, 0xC0, 0xD3, 0xBC, 0xDD, 0xC0, 0x93, 0xBA, 0x25, 0xEA, 0xDD, 0xC0, 0x8D, 0xC4, 0x20, 0xE4, 0xD6, 0x51, 0xD0, 0x4D, 0x5C, 0xD7, 0x54, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xBD, 0xD7, 0x70, 0xD6, 0x59, 0xC4, 0x7F, 0x3A, 0x96, 0xE1, 0x7A, 0x00, 0x54, 0x26, 0xF1, 0x39, 0x59, 0x7D, 0x00, 0x59, 0x2B, 0x01, 0x54, 0xC4, 0x07, 0x3A, 0x39, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xD6, 0x59, 0xC4, 0x7F, 0x3D, 0x9B, 0x60, 0xDD, 0x52, 0xD6, 0x4B, 0x96, 0x4F, 0x7D, 0x00, 0x59, 0x2B, 0x01, 0x04, 0x04, 0x04, 0xC4, 0x1F, 0x10, 0x97, 0x54, 0xDE, 0x52, 0x3A, 0x3C, 0xCE, 0xD6, 0x96, 0xD6, 0x4B, 0x8D, 0xC7, 0xA6, 0x00, 0x43, 0xD6, 0x54, 0x27, 0x12, 0x38, 0xBD, 0xD7, 0x70, 0x96, 0x57, 0x8C, 0xA7, 0x00, 0x08, 0x7A, 0x00, 0x54, 0x26, 0xF8, 0x86, 0xFF, 0x3C, 0xCE, 0xD6, 0x97, 0xD6, 0x4F, 0x0D, 0x8D, 0xA6, 0xA4, 0x00, 0x38, 0x7E, 0xD7, 0x70, 0xCE, 0x00, 0x4A, 0x3C, 0xBD, 0xEF, 0x43, 0x38, 0xC1, 0xC0, 0x25, 0x02, 0xC6, 0xBF, 0x4F, 0xED, 0x02, 0xDC, 0xA5, 0x4D, 0x27, 0x03, 0xCC, 0x00, 0xFF, 0xED, 0x00, 0x39, 0xCE, 0x00, 0x4E, 0x8D, 0x06, 0xCE, 0x00, 0x4A, 0x8C, 0x8D, 0xD9, 0x96, 0x58, 0x81, 0x36, 0x27, 0x05, 0xEC, 0x02, 0x04, 0xED, 0x02, 0xEC, 0x00, 0x04, 0xED, 0x00, 0x39, 0x8D, 0xEB, 0xBD, 0xEA, 0x29, 0x8D, 0x50, 0x36, 0xBD, 0xE0, 0xA2, 0x96, 0x59, 0x33, 0x2B, 0x07, 0xD4, 0xE1, 0x27, 0x1C, 0x5F, 0x20, 0x12, 0xD4, 0xE1, 0x27, 0x0E, 0xC5, 0xF0, 0x27, 0x04, 0x54, 0x54, 0x54, 0x54, 0xC5, 0x0C, 0x27, 0x02, 0x54, 0x54, 0x5C, 0x96, 0x5B, 0x27, 0x02, 0xCB, 0x04, 0x7E, 0xEC, 0xE2, 0xBD, 0xEA, 0x2C, 0x20, 0xB5, 0x86, 0x4F, 0x97, 0x55, 0x8D, 0xF5, 0x8D, 0x51, 0xBD, 0xEA, 0x29, 0xBD, 0xE0, 0xEF, 0x8D, 0x0F, 0x8D, 0x03, 0x7E, 0xE1, 0x32, 0x16, 0x43, 0xA4, 0x00, 0xD4, 0x57, 0x1B, 0xA7, 0x00, 0x39, 0xD6, 0x59, 0xC4, 0x7F, 0x96, 0x4D, 0x3D, 0x9B, 0x60, 0xDD, 0x52, 0xD6, 0x4B, 0x96, 0x59, 0x2B, 0x19, 0x17, 0xCE, 0xD7, 0x98, 0xC4, 0x07, 0x3A, 0x16, 0xA6, 0x00, 0x54, 0x20, 0x16, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0xC0, 0x30, 0x0C, 0x03, 0x17, 0xCE, 0xD7, 0xA0, 0xC4, 0x03, 0x3A, 0x16, 0xA6, 0x00, 0x54, 0x54, 0xDE, 0x52, 0x3A, 0x39, 0x9D, 0xF3, 0x27, 0x12, 0x81, 0x29, 0x27, 0x0E, 0xBD, 0xEA, 0x2F, 0x81, 0x2C, 0x27, 0x07, 0xBD, 0xEF, 0x0D, 0x8D, 0x2A, 0x20, 0x09, 0xD6, 0x64, 0x7D, 0x00, 0x55, 0x26, 0x02, 0xD6, 0x65, 0xD7, 0x56, 0x86, 0x55, 0x3D, 0xD7, 0x57, 0x39, 0x81, 0x2C, 0x27, 0x08, 0x8D, 0x0E, 0xD7, 0x64, 0x9D, 0xF3, 0x27, 0x07, 0xBD, 0xEF, 0x47, 0x8D, 0x06, 0xD7, 0x65, 0x39, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x44, 0xC1, 0x05, 0x25, 0x02, 0xC0, 0x04, 0x96, 0x59, 0x2B, 0x05, 0xC4, 0x01, 0x27, 0x06, 0xC0, 0x5A, 0x2A, 0x02, 0xC6, 0x03, 0x39, 0x27, 0x03, 0x8D, 0xE0, 0x8C, 0xD6, 0x65, 0x86, 0x55, 0x3D, 0xBD, 0xE0, 0xEF, 0x17, 0xDE, 0x60, 0xED, 0x00, 0xED, 0x02, 0xC6, 0x04, 0x3A, 0x16, 0x9C, 0x62, 0x25, 0xF4, 0x7E, 0xE1, 0x32, 0xD3, 0x6E, 0xDD, 0x93, 0xC6, 0x02, 0xD7, 0x70, 0x5A, 0x8D, 0x41, 0xD7, 0x7D, 0x5C, 0x20, 0x26, 0x7E, 0xEC, 0x2E, 0x3B, 0x10, 0x26, 0xA0, 0x36, 0x10, 0x81, 0x2C, 0x27, 0x0D, 0xBD, 0xEF, 0x0D, 0xC1, 0x02, 0x22, 0xEC, 0x8D, 0x26, 0x9D, 0xF3, 0x27, 0x18, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5A, 0xD1, 0x5D, 0x24, 0xDB, 0x5C, 0xD7, 0x5F, 0xD1, 0x5E, 0x26, 0x01, 0x5F, 0xBD, 0xD9, 0x16, 0xDD, 0x60, 0x96, 0x58, 0x48, 0x84, 0x0E, 0xD3, 0x60, 0xDD, 0x62, 0x39, 0x58, 0xCE, 0xD8, 0x3D, 0x3A, 0xEC, 0x00, 0xDD, 0x58, 0xCC, 0x03, 0x00, 0xDD, 0x64, 0x39, 0xD6, 0x5E, 0x81, 0x2C, 0x27, 0x14, 0xBD, 0xEF, 0x0D, 0x96, 0x5A, 0x5D, 0x27, 0x06, 0xD6, 0x5F, 0x96, 0x58, 0x9A, 0x5B, 0x97, 0x5C, 0x9D, 0xF3, 0x27, 0x20, 0x37, 0xBD, 0xEF, 0x47, 0x17, 0x27, 0x02, 0x86, 0x40, 0x33, 0x5D, 0x27, 0x03, 0x97, 0x5B, 0x8C, 0x97, 0x5A, 0x20, 0xDD, 0xD6, 0x7F, 0x26, 0xCD, 0x96, 0x5E, 0x27, 0xC9, 0x96, 0x5A, 0x97, 0x5C, 0xD1, 0x5E, 0x27, 0x14, 0x96, 0x5E, 0x27, 0x10, 0x37, 0x16, 0x8D, 0x4B, 0xDD, 0x36, 0x8D, 0x9B, 0xCC, 0x40, 0x00, 0xDD, 0x34, 0x8D, 0x59, 0x33, 0xBD, 0xCE, 0x7B, 0xD1, 0x5E, 0x27, 0x48, 0xD7, 0x5E, 0x27, 0x10, 0x8D, 0x32, 0xDD, 0x34, 0xCC, 0x40, 0x00, 0xDD, 0x36, 0xBD, 0xD8, 0x6A, 0x93, 0x60, 0x20, 0x3F, 0x7E, 0xFB, 0xD4, 0x0E, 0xBD, 0x01, 0x91, 0xD6, 0xE8, 0x26, 0x02, 0x8D, 0xB4, 0x7E, 0xFA, 0xA7, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x0D, 0xD1, 0x5D, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xD1, 0x5E, 0x26, 0x01, 0x5F, 0x86, 0x0C, 0x3D, 0x17, 0x27, 0x05, 0xD6, 0x7E, 0x27, 0x04, 0x5F, 0x8B, 0x40, 0x39, 0x8B, 0xF8, 0x39, 0x8D, 0xDE, 0xDD, 0x34, 0x8D, 0xD5, 0xDD, 0x36, 0x86, 0x0C, 0xD3, 0x36, 0xDD, 0xBB, 0xBD, 0xE0, 0xEF, 0x0F, 0xDE, 0x36, 0x9F, 0x91, 0x9E, 0x34, 0x34, 0x32, 0x33, 0xED, 0x00, 0x32, 0x33, 0xED, 0x02, 0x32, 0x33, 0xED, 0x04, 0x32, 0x33, 0xED, 0x06, 0xC6, 0x08, 0x3A, 0x9C, 0xBB, 0x25, 0xE9, 0x9E, 0x91, 0xBD, 0xE1, 0x35, 0x39, 0x27, 0x03, 0x7E, 0xE6, 0x8A, 0x7F, 0x00, 0x7B, 0xBD, 0xE6, 0x51, 0x4D, 0x27, 0x78, 0x9D, 0xEB, 0x81, 0xC9, 0x26, 0xF4, 0x7A, 0x00, 0x7B, 0x2A, 0xEF, 0x9D, 0xEB, 0x7E, 0xE6, 0x8D, 0x26, 0x03, 0x7E, 0xE6, 0x5F, 0x81, 0x84, 0x26, 0x03, 0x7C, 0x00, 0x7B, 0x7E, 0xE6, 0x64, 0xCE, 0x00, 0xCA, 0x4F, 0x5F, 0xED, 0x00, 0xED, 0x02, 0x9D, 0xEB, 0x25, 0x14, 0x81, 0x48, 0x27, 0x21, 0x81, 0x4F, 0x27, 0x17, 0xCC, 0xA0, 0x00, 0x97, 0xC9, 0xD7, 0xDD, 0xD7, 0xCE, 0x7E, 0xEF, 0xD7, 0x81, 0x38, 0x25, 0x03, 0x7E, 0xEA, 0x3C, 0xC6, 0x07, 0x8D, 0x1B, 0x9D, 0xEB, 0x25, 0xF1, 0x20, 0xE3, 0x9D, 0xEB, 0x25, 0x0B, 0xBD, 0xEB, 0x76, 0x25, 0xDA, 0x81, 0x46, 0x22, 0xD6, 0x80, 0x07, 0xC6, 0x0F, 0x8D, 0x02, 0x20, 0xEB, 0x68, 0x03, 0x69, 0x02, 0x24, 0x03, 0x7E, 0xF0, 0x58, 0x54, 0x26, 0xF4, 0x80, 0x30, 0xAB, 0x03, 0xA7, 0x03, 0x39, 0xBD, 0x01, 0x9D, 0x25, 0x05, 0x81, 0x26, 0x27, 0x9D, 0x0C, 0x7E, 0xF3, 0x5C, 0xC6, 0x04, 0x3A, 0xDF, 0x89, 0xCE, 0x01, 0xB3, 0xDF, 0xDE, 0x5F, 0x6F, 0x00, 0xDE, 0x89, 0xA6, 0x00, 0x08, 0x4D, 0x26, 0x01, 0x39, 0xDF, 0x89, 0x81, 0x22, 0x26, 0x02, 0xC8, 0x01, 0x81, 0x3A, 0x26, 0x12, 0xC5, 0x01, 0x26, 0x0E, 0xC4, 0xFD, 0xA6, 0x00, 0x81, 0xC9, 0x27, 0xE3, 0x81, 0xDD, 0x27, 0xDF, 0x86, 0x3A, 0x4D, 0x2A, 0x32, 0x5D, 0x26, 0x2F, 0x81, 0x85, 0x26, 0x02, 0xCA, 0x02, 0x81, 0x83, 0x27, 0x04, 0x81, 0xDD, 0x26, 0x02, 0xCA, 0x04, 0xF7, 0x01, 0x84, 0xBD, 0x01, 0xA6, 0xF6, 0x01, 0x84, 0x81, 0xF7, 0x22, 0x0E, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x2B, 0x09, 0x08, 0x3C, 0x8D, 0x0B, 0x38, 0x20, 0xF5, 0x86, 0x21, 0x84, 0x7F, 0x8D, 0x02, 0x20, 0x9E, 0xDE, 0xDE, 0x8C, 0x02, 0xAD, 0x24, 0x05, 0xA7, 0x00, 0x08, 0xDF, 0xDE, 0x39, 0x38, 0x8D, 0x05, 0x27, 0x2F, 0x7E, 0xEA, 0x3C, 0xBD, 0xE6, 0xB2, 0x7E, 0x00, 0xF3, 0x9D, 0xEB, 0x81, 0x45, 0x26, 0x08, 0x9D, 0xEB, 0x24, 0x04, 0x8D, 0xEE, 0x27, 0x18, 0xBD, 0xE3, 0xB3, 0x7E, 0xE5, 0x3D, 0x09, 0xDF, 0xA5, 0xBD, 0xF4, 0x12, 0xD6, 0x7A, 0xFA, 0x01, 0x83, 0xC1, 0x02, 0x26, 0xCE, 0xBD, 0xE7, 0x66, 0xBD, 0xE3, 0xB9, 0x24, 0x03, 0x7E, 0xE6, 0x42, 0xBD, 0xD9, 0xF1, 0xDC, 0xDE, 0x83, 0x01, 0xB4, 0xD7, 0x34, 0x86, 0x01, 0x97, 0x35, 0xBD, 0xCC, 0x03, 0xCE, 0x01, 0xB3, 0xD6, 0x35, 0x26, 0x25, 0x5F, 0xBD, 0xDB, 0xAE, 0xBD, 0xD0, 0x2E, 0x25, 0x0B, 0x80, 0x30, 0x36, 0x86, 0x0A, 0x3D, 0x32, 0x1B, 0x16, 0x20, 0xED, 0xC0, 0x01, 0xC9, 0x01, 0x81, 0x41, 0x26, 0x05, 0xBD, 0xE7, 0x66, 0x20, 0xBF, 0x81, 0x4C, 0x26, 0x0C, 0x8D, 0x32, 0x7F, 0x00, 0x35, 0xBD, 0xE7, 0x66, 0x20, 0xC7, 0x31, 0x31, 0x81, 0x0D, 0x26, 0x0D, 0x8D, 0x22, 0xBD, 0xE7, 0x66, 0xCE, 0x01, 0xB3, 0xDF, 0xF4, 0x7E, 0xE2, 0x96, 0x81, 0x03, 0x26, 0x06, 0xBD, 0xE7, 0x66, 0x7E, 0xE2, 0x71, 0x8D, 0x02, 0x20, 0xB0, 0x81, 0x20, 0x27, 0x07, 0x81, 0x4E, 0x26, 0x0F, 0x8C, 0xC6, 0xFF, 0xA6, 0x00, 0x27, 0x07, 0xBD, 0xF9, 0xC6, 0x08, 0x5A, 0x26, 0xF5, 0x39, 0x81, 0x49, 0x27, 0x14, 0x81, 0x58, 0x27, 0x0E, 0x81, 0x48, 0x26, 0x4B, 0x6F, 0x00, 0x3C, 0x32, 0x33, 0x83, 0x01, 0xB4, 0xD7, 0x34, 0x8D, 0xDA, 0x8D, 0x6E, 0x81, 0x0D, 0x27, 0xAA, 0x81, 0x03, 0x27, 0xA6, 0x81, 0x0A, 0x27, 0xD9, 0x81, 0x08, 0x26, 0x0B, 0x8C, 0x01, 0xB3, 0x27, 0xE9, 0x8D, 0x7E, 0x8D, 0x32, 0x20, 0xE3, 0xD6, 0x34, 0xC1, 0xF8, 0x27, 0xDD, 0x5C, 0xD7, 0x34, 0xDF, 0xDE, 0x21, 0x08, 0xE6, 0x00, 0x26, 0xFB, 0x21, 0x09, 0xE6, 0x00, 0xE7, 0x01, 0x9C, 0xDE, 0x26, 0xF7, 0xA7, 0x00, 0x08, 0x8D, 0x62, 0x20, 0xC1, 0x81, 0x44, 0x26, 0x18, 0xA6, 0x00, 0x27, 0xA0, 0x8D, 0x04, 0x5A, 0x26, 0xF7, 0x39, 0x7A, 0x00, 0x34, 0x3C, 0x21, 0x08, 0xA6, 0x01, 0xA7, 0x00, 0x26, 0xF9, 0x38, 0x39, 0x81, 0x43, 0x26, 0x2A, 0xA6, 0x00, 0x27, 0x0C, 0x8D, 0x0B, 0x24, 0xFC, 0xA7, 0x00, 0x08, 0x8D, 0x33, 0x5A, 0x26, 0xF0, 0x39, 0xBD, 0xF8, 0x65, 0x81, 0x03, 0x27, 0x11, 0x81, 0x0A, 0x27, 0x0D, 0x81, 0x08, 0x27, 0x09, 0x81, 0x0D, 0x27, 0x05, 0x81, 0x20, 0x25, 0xE9, 0x0D, 0x39, 0x81, 0x08, 0x27, 0x04, 0x81, 0x42, 0x26, 0x11, 0x8D, 0x04, 0x5A, 0x26, 0xFB, 0x39, 0x8C, 0x01, 0xB3, 0x27, 0xD3, 0x09, 0x86, 0x08, 0x7E, 0xF9, 0xC6, 0x81, 0x4B, 0x27, 0x05, 0x80, 0x53, 0x27, 0x01, 0x39, 0x97, 0x36, 0x8D, 0xC1, 0x97, 0x37, 0xA6, 0x00, 0x27, 0x14, 0x7D, 0x00, 0x36, 0x26, 0x04, 0x8D, 0xE3, 0x08, 0x8C, 0x8D, 0x8D, 0xA6, 0x00, 0x91, 0x37, 0x26, 0xEB, 0x5A, 0x26, 0xE8, 0x39, 0x86, 0x4F, 0x97, 0x7C, 0x39, 0x81, 0x87, 0x27, 0x09, 0x81, 0xA6, 0x27, 0x06, 0x9D, 0xF3, 0x7E, 0xE7, 0x1F, 0xC6, 0x5F, 0xD7, 0x7D, 0x7E, 0x00, 0xEB, 0x38, 0x36, 0x0F, 0x17, 0xD6, 0x7D, 0x26, 0x02, 0x6E, 0x00, 0x36, 0xCE, 0x21, 0x50, 0x3C, 0x30, 0xCC, 0x00, 0x03, 0xBD, 0xC9, 0x96, 0x38, 0x31, 0x7E, 0xF9, 0xEE, 0x08, 0xDF, 0xF4, 0x7D, 0x00, 0x7C, 0x27, 0x3C, 0x86, 0x5B, 0xBD, 0xF9, 0xC6, 0x96, 0xE2, 0xBD, 0xF4, 0x19, 0x86, 0x5D, 0x7E, 0xF9, 0xC6, 0xBD, 0xEF, 0x4C, 0x08, 0xBD, 0xE5, 0x66, 0x86, 0xA6, 0x4A, 0x26, 0xFD, 0x09, 0x26, 0xF5, 0x39, 0xCE, 0x00, 0xFD, 0x9D, 0xEB, 0x81, 0xB2, 0x26, 0x05, 0x9D, 0xEB, 0xCE, 0x00, 0xFB, 0x3C, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x4C, 0x3C, 0x32, 0x33, 0x38, 0xED, 0x00, 0x39, 0xBD, 0xEB, 0xC7, 0x27, 0x03, 0xBD, 0xED, 0x85, 0xDC, 0x9D, 0x93, 0x9B, 0x20, 0x19, 0x93, 0x99, 0x36, 0x9D, 0xF3, 0x81, 0x89, 0x26, 0x09, 0x31, 0xDC, 0xA1, 0xC3, 0x00, 0x01, 0x36, 0x9D, 0xEB, 0x32, 0x8C, 0xDC, 0x78, 0x8C, 0xDC, 0xFD, 0xDD, 0xCA, 0xC6, 0x90, 0x7F, 0x00, 0x84, 0x0D, 0x7E, 0xF2, 0xC7, 0xD6, 0x7A, 0x7E, 0xF2, 0xBC, 0xBD, 0x01, 0xA0, 0x81, 0xC9, 0x24, 0x07, 0x81, 0xC4, 0x27, 0x5B, 0x7E, 0xE5, 0x49, 0x81, 0xF5, 0x27, 0x99, 0xCE, 0xC2, 0x93, 0x81, 0xE8, 0x7E, 0xE5, 0x54, 0xBD, 0xE9, 0x0E, 0xBD, 0xEF, 0x4F, 0xCE, 0x02, 0xAE, 0xCC, 0x27, 0x00, 0xED, 0x00, 0x96, 0xCC, 0x8D, 0x07, 0x96, 0xCD, 0x8D, 0x03, 0x7E, 0xEC, 0xF6, 0x16, 0x54, 0x54, 0x54, 0x54, 0x8D, 0x03, 0x16, 0xC4, 0x0F, 0x26, 0x05, 0x8C, 0x02, 0xAE, 0x27, 0x0D, 0xC1, 0x09, 0x23, 0x02, 0xCB, 0x07, 0xCB, 0x30, 0xE7, 0x00, 0x08, 0x6F, 0x00, 0x39, 0xDF, 0xD7, 0xE6, 0x00, 0xBD, 0xED, 0x5F, 0x3C, 0xDE, 0xD7, 0xBD, 0xEE, 0x38, 0xDE, 0xD7, 0x32, 0x33, 0xED, 0x02, 0x39, 0x9D, 0xEB, 0xBD, 0xEA, 0x2C, 0xBD, 0xEB, 0x1B, 0xDF, 0x34, 0xBD, 0xE9, 0x0F, 0xBD, 0xEF, 0x47, 0x5A, 0xD7, 0x38, 0xDE, 0x34, 0xE1, 0x00, 0x24, 0x6D, 0x81, 0x29, 0x27, 0x06, 0xBD, 0xEF, 0x47, 0x5D, 0x26, 0x02, 0xC6, 0xFF, 0xD7, 0x39, 0xBD, 0xEA, 0x29, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xDE, 0x34, 0xEC, 0x02, 0x93, 0x9B, 0x22, 0x02, 0x8D, 0xB3, 0xEE, 0x02, 0xD6, 0x38, 0x3A, 0xDF, 0x36, 0x8D, 0x4A, 0x3C, 0xDE, 0x34, 0xA6, 0x00, 0x90, 0x38, 0x4C, 0x11, 0x24, 0x01, 0x16, 0xD1, 0x39, 0x23, 0x02, 0xD6, 0x39, 0xDE, 0x36, 0xDF, 0x9F, 0x38, 0x7E, 0xEE, 0x3A, 0x96, 0xE8, 0x36, 0xBD, 0xEB, 0xC7, 0x27, 0x06, 0x2A, 0x12, 0xC1, 0xFE, 0x26, 0x0E, 0xD7, 0xE8, 0xBD, 0xFA, 0x7B, 0xD6, 0xE6, 0x32, 0x97, 0xE8, 0x4F, 0x7E, 0xEC, 0xE3, 0xC6, 0x26, 0x7E, 0xE2, 0x38, 0xBD, 0xEF, 0x0D, 0xC4, 0xFE, 0xC1, 0x36, 0x23, 0xF4, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0x7E, 0xEE, 0x53, 0xBD, 0xE9, 0x1A, 0xC6, 0x01, 0x37, 0x96, 0x84, 0x26, 0x11, 0xBD, 0xEF, 0x10, 0x30, 0xE7, 0x00, 0x27, 0xE2, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0x3C, 0x8D, 0xD7, 0x37, 0x3C, 0xC6, 0x01, 0x9D, 0xF3, 0x81, 0x2C, 0x26, 0x03, 0xBD, 0xEF, 0x47, 0x4F, 0xDD, 0xD0, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0xCB, 0x33, 0xD7, 0xCD, 0x38, 0xBD, 0xEE, 0x58, 0xDF, 0xC9, 0x17, 0x33, 0x9F, 0x91, 0x10, 0x25, 0x2B, 0x4C, 0x90, 0xCD, 0x25, 0x26, 0x4C, 0x7D, 0x00, 0xCD, 0x27, 0x22, 0x0F, 0x5A, 0x3A, 0x5C, 0xDD, 0xCE, 0x35, 0xDE, 0xCB, 0xD6, 0xCD, 0x32, 0xA1, 0x00, 0x26, 0x1B, 0x08, 0x5A, 0x26, 0xF7, 0xD6, 0xCF, 0x96, 0xD1, 0x27, 0x0F, 0x4A, 0x97, 0xD1, 0x26, 0x09, 0x8C, 0xD6, 0xD0, 0x9E, 0x91, 0x0E, 0x7E, 0xEC, 0xE2, 0x5F, 0xD7, 0xD0, 0xDC, 0xCE, 0x4A, 0x27, 0xF0, 0xDE, 0xC9, 0x20, 0xCE, 0xBD, 0xEF, 0x0D, 0x37, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0xBD, 0xEA, 0x29, 0x96, 0x84, 0x2B, 0x05, 0xBD, 0xEF, 0x10, 0x20, 0x03, 0xBD, 0xEE, 0xA6, 0x17, 0x33, 0x36, 0xBD, 0xEC, 0xFC, 0x32, 0x27, 0x06, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0x7E, 0xEE, 0x9D, 0x0B, 0x76, 0xB3, 0x83, 0xBD, 0xD3, 0x79, 0x1E, 0xF4, 0xA6, 0xF5, 0x7B, 0x83, 0xFC, 0xB0, 0x10, 0x7C, 0x0C, 0x1F, 0x67, 0xCA, 0x7C, 0xDE, 0x53, 0xCB, 0xC1, 0x7D, 0x14, 0x64, 0x70, 0x4C, 0x7D, 0xB7, 0xEA, 0x51, 0x7A, 0x7D, 0x63, 0x30, 0x88, 0x7E, 0x7E, 0x92, 0x44, 0x99, 0x3A, 0x7E, 0x4C, 0xCC, 0x91, 0xC7, 0x7F, 0xAA, 0xAA, 0xAA, 0x13, 0x81, 0x00, 0x00, 0x00, 0x00, 0x96, 0xCE, 0x36, 0x2A, 0x02, 0x8D, 0x30, 0x96, 0xC9, 0x36, 0x81, 0x81, 0x25, 0x06, 0xCE, 0xF0, 0x8B, 0xBD, 0xF1, 0xC6, 0xCE, 0xDE, 0x60, 0xBD, 0xF5, 0xF8, 0x32, 0x81, 0x81, 0x25, 0x06, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x72, 0x32, 0x4D, 0x2B, 0x0E, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x03, 0x7E, 0xF3, 0x35, 0x73, 0x00, 0xCE, 0x8D, 0xF8, 0x7E, 0xF5, 0x93, 0x8D, 0x05, 0x2B, 0x26, 0x7E, 0xF2, 0x51, 0xBD, 0xE9, 0x0C, 0x3C, 0x3C, 0x34, 0x30, 0xBD, 0xF2, 0x72, 0xBD, 0xD2, 0x99, 0xBD, 0xEA, 0x29, 0xBD, 0xF2, 0x6C, 0x30, 0x8D, 0xE7, 0x31, 0x38, 0x38, 0xCE, 0x00, 0xBA, 0x7E, 0xF2, 0xD9, 0x8D, 0xDF, 0x2B, 0xDA, 0x39, 0xBD, 0xEB, 0x1B, 0x3C, 0x96, 0x84, 0x36, 0xCC, 0x00, 0x34, 0x8D, 0x15, 0xBD, 0xEA, 0x2F, 0xBD, 0xEB, 0x1B, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x32, 0x33, 0x3C, 0x8D, 0x05, 0xCE, 0x00, 0x34, 0x32, 0x33, 0xDD, 0xBF, 0xC6, 0x05, 0x7E, 0xF7, 0xB2, 0xCE, 0x00, 0x74, 0x81, 0xE9, 0x27, 0x0A, 0x81, 0xDC, 0x27, 0x03, 0x7E, 0xE6, 0x92, 0xCE, 0x00, 0x76, 0x3C, 0x9D, 0xEB, 0xC6, 0xFF, 0xD7, 0xA5, 0x81, 0x91, 0x27, 0x14, 0x5A, 0x81, 0x93, 0x27, 0x0F, 0xC6, 0x81, 0xBD, 0xEA, 0x31, 0x8D, 0x51, 0xBD, 0xE3, 0xB9, 0x24, 0x07, 0x7E, 0xE6, 0x42, 0xD7, 0xA6, 0x9D, 0xEB, 0xDC, 0xA5, 0xC3, 0x00, 0x01, 0x38, 0xED, 0x00, 0x39, 0x0E, 0xD7, 0x7A, 0xF7, 0x01, 0x83, 0xDE, 0xE2, 0xDF, 0x78, 0xDE, 0x76, 0x8D, 0x40, 0x26, 0x4A, 0xCE, 0xE1, 0x8A, 0xC1, 0x26, 0x25, 0x03, 0xCE, 0xDF, 0x5C, 0x39, 0x44, 0x4E, 0x4E, 0x45, 0x57, 0x50, 0x46, 0x4E, 0x46, 0x53, 0x49, 0x45, 0x46, 0x44, 0x41, 0x4F, 0x4E, 0x4F, 0x44, 0x53, 0x26, 0x03, 0x7E, 0xE5, 0x60, 0x8D, 0x06, 0xBD, 0xE3, 0xB9, 0x7E, 0xE5, 0x62, 0x25, 0x04, 0x81, 0x28, 0x27, 0x03, 0x7E, 0xE6, 0xB2, 0xBD, 0xEA, 0x24, 0xBD, 0xEF, 0x4F, 0xDF, 0xA5, 0x39, 0x27, 0xFD, 0x3C, 0xDE, 0xE2, 0x08, 0x38, 0x27, 0xF6, 0xDF, 0xA5, 0x39, 0x30, 0xCC, 0xE5, 0x19, 0xED, 0x00, 0xDE, 0xA5, 0x08, 0x27, 0x07, 0x09, 0x09, 0xDF, 0xA5, 0x7E, 0xE6, 0x26, 0x7E, 0xE6, 0x51, 0x0E, 0x96, 0x73, 0x26, 0xD9, 0x7E, 0xF8, 0x79, 0x81, 0x03, 0x26, 0xD2, 0x7D, 0x00, 0x73, 0x26, 0x03, 0xB7, 0x01, 0x7F, 0x7F, 0x00, 0x73, 0x38, 0xDE, 0x74, 0x8D, 0xC3, 0x26, 0xD3, 0x7E, 0xE5, 0x7E, 0x81, 0x03, 0x26, 0x02, 0x97, 0x73, 0x7E, 0xEE, 0x91, 0xF2, 0xBA, 0xF3, 0x35, 0xF2, 0xD5, 0x01, 0x15, 0xF6, 0x2A, 0xF5, 0x4D, 0xF0, 0xB9, 0xF5, 0xC9, 0xF6, 0x8C, 0xF6, 0x86, 0xF6, 0xD2, 0xEF, 0x5F, 0xEE, 0x82, 0xEC, 0xED, 0xEF, 0x1C, 0xEE, 0xA2, 0xEE, 0x8E, 0xEE, 0xAD, 0xEE, 0xC8, 0xEE, 0xCF, 0xFB, 0x9C, 0xFC, 0x11, 0xFB, 0xED, 0xEC, 0xDB, 0x79, 0xEF, 0x80, 0x79, 0xEF, 0x75, 0x7B, 0xF0, 0xF1, 0x7B, 0xF1, 0xC8, 0x7F, 0xF5, 0x56, 0x50, 0xEA, 0x8E, 0x46, 0xEA, 0x8D, 0x01, 0xC6, 0xB4, 0xBD, 0xEA, 0x31, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x4C, 0xFF, 0x01, 0x16, 0x39, 0xC1, 0x18, 0x25, 0x03, 0x7E, 0xEA, 0x3C, 0x58, 0x7E, 0x00, 0xEB, 0xFE, 0x01, 0x80, 0x20, 0x21, 0xCE, 0x40, 0x00, 0x20, 0x36, 0xCE, 0x40, 0x00, 0x20, 0x18, 0x81, 0x40, 0x27, 0x03, 0x7E, 0xEF, 0x66, 0x9D, 0xEB, 0xBD, 0xEF, 0x43, 0x96, 0xA5, 0x84, 0x3F, 0x8B, 0x40, 0x97, 0xA5, 0xDE, 0xA5, 0x21, 0x16, 0x4F, 0x07, 0x0F, 0xB7, 0xFF, 0xF0, 0xE7, 0x00, 0x9A, 0x7E, 0xB7, 0xFF, 0xF0, 0x06, 0x39, 0x8D, 0x08, 0xC6, 0xFF, 0x39, 0x8D, 0x03, 0x7E, 0xEF, 0x47, 0x4F, 0x07, 0x0F, 0xB7, 0xFF, 0xF0, 0xE6, 0x00, 0x9A, 0x7E, 0xB7, 0xFF, 0xF0, 0x06, 0x4F, 0xD7, 0xE1, 0x39, 0xBD, 0x01, 0x94, 0xDE, 0xF4, 0x9D, 0xEB, 0x81, 0x26, 0x26, 0x03, 0x7E, 0xD9, 0x8A, 0x81, 0xBC, 0x27, 0x0C, 0x81, 0xEA, 0x25, 0x03, 0x7E, 0xE4, 0x6B, 0xDF, 0xF4, 0x7E, 0xE9, 0xEB, 0x9D, 0xEB, 0x81, 0x40, 0x26, 0xF5, 0x9D, 0xEB, 0xBD, 0xEA, 0x24, 0xBD, 0xEF, 0x4F, 0x96, 0xCC, 0x84, 0x3F, 0x8B, 0x40, 0x97, 0xCC, 0xDE, 0xCC, 0x8D, 0xB6, 0x7E, 0xEC, 0xE3, 0x38, 0x97, 0xE1, 0x96, 0x7E, 0x27, 0x0D, 0x4F, 0x07, 0x0F, 0xB7, 0xFF, 0xF0, 0xBF, 0xBE, 0xFE, 0x8E, 0xBE, 0xFD, 0x06, 0x96, 0xE1, 0x6E, 0x00, 0xD6, 0x5E, 0x27, 0x05, 0x36, 0xBD, 0xD8, 0xB3, 0x32, 0x8D, 0xDD, 0xFE, 0x01, 0x80, 0x7E, 0xFA, 0x1E, 0x8D, 0x1B, 0xCC, 0x0F, 0x01, 0xBA, 0x01, 0x82, 0xB7, 0x01, 0x82, 0xF7, 0x01, 0x2B, 0x32, 0x33, 0x38, 0x39, 0x8D, 0xC3, 0xCE, 0x40, 0x00, 0xBD, 0xFB, 0xD9, 0x8D, 0x01, 0x39, 0x38, 0x4F, 0x07, 0x9A, 0x7E, 0x85, 0x02, 0x27, 0x08, 0x0F, 0xBE, 0xBE, 0xFE, 0xB7, 0xFF, 0xF0, 0x06, 0x6E, 0x00, 0xE4, 0xC4, 0xE6, 0x1A, 0xE6, 0x04, 0xE6, 0x85, 0xE6, 0x72, 0xE6, 0x51, 0xDC, 0x0D, 0xDF, 0x2A, 0xC5, 0x41, 0xC4, 0x82, 0xE8, 0xBB, 0xEB, 0x12, 0xE8, 0x0E, 0xE6, 0xD3, 0xE5, 0xFA, 0xDF, 0x96, 0xE6, 0x31, 0xE5, 0x7E, 0xE0, 0x71, 0xE5, 0xA6, 0xE4, 0x0D, 0xC3, 0xC7, 0xE3, 0xCD, 0xFD, 0x5C, 0xFC, 0x3B, 0xE4, 0x0B, 0xE7, 0x1C, 0xC6, 0x5B, 0xFB, 0x55, 0xFB, 0xBF, 0xFF, 0xA5, 0xFC, 0x04, 0xFE, 0x2F, 0x4E, 0x46, 0x53, 0x4E, 0x52, 0x47, 0x4F, 0x44, 0x46, 0x43, 0x4F, 0x56, 0x4F, 0x4D, 0x55, 0x4C, 0x42, 0x53, 0x44, 0x44, 0x2F, 0x30, 0x49, 0x44, 0x54, 0x4D, 0x4F, 0x53, 0x4C, 0x53, 0x53, 0x54, 0x43, 0x4E, 0x49, 0x4F, 0x46, 0x4D, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x00, 0x20, 0x49, 0x4E, 0x20, 0x00, 0x0D, 0x4F, 0x4B, 0x0D, 0x00, 0x0D, 0x42, 0x52, 0x45, 0x41, 0x4B, 0x00, 0x81, 0x3A, 0x24, 0x0B, 0x81, 0x20, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0x80, 0x30, 0x80, 0xD0, 0x39, 0x30, 0xC6, 0x04, 0x3A, 0xC6, 0x12, 0xDF, 0x89, 0xA6, 0x00, 0x80, 0x80, 0x26, 0x14, 0xEE, 0x01, 0xDF, 0x8B, 0xDE, 0xB5, 0x27, 0x08, 0x9C, 0x8B, 0x27, 0x08, 0x8D, 0x3B, 0x20, 0xE6, 0xDE, 0x8B, 0xDF, 0xB5, 0xDE, 0x89, 0x4D, 0x39, 0x8D, 0x1E, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x9E, 0xBB, 0xDE, 0xBD, 0x08, 0x09, 0xA6, 0x00, 0x36, 0x9C, 0xC1, 0x26, 0xF8, 0x31, 0x9F, 0xBF, 0x9E, 0x91, 0x32, 0x06, 0x39, 0x4F, 0x58, 0xD3, 0x99, 0x9F, 0x91, 0xC3, 0x00, 0x3A, 0x25, 0x11, 0x93, 0x91, 0x24, 0x0D, 0xD3, 0x91, 0x39, 0x4F, 0xDF, 0x89, 0xD3, 0x89, 0xDD, 0x8B, 0xDE, 0x8B, 0x39, 0xC6, 0x0C, 0xBD, 0x01, 0x97, 0xBD, 0x01, 0x9A, 0xBD, 0xFC, 0x86, 0xB6, 0x01, 0x6E, 0x27, 0x03, 0xBD, 0xCB, 0x6A, 0xBD, 0xE3, 0xEE, 0xBD, 0xDF, 0x67, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0xBD, 0xE7, 0xBC, 0x3A, 0xA6, 0x00, 0xBD, 0xE7, 0xBE, 0xA6, 0x01, 0xBD, 0xE7, 0xBE, 0xCE, 0xE1, 0xAF, 0xBD, 0xE7, 0xA8, 0xDE, 0xE2, 0x08, 0x27, 0x03, 0xBD, 0xDA, 0x8D, 0xBD, 0xE7, 0x6A, 0xCE, 0xE1, 0xBC, 0xBD, 0xE7, 0xA8, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xBD, 0xFA, 0xA4, 0x25, 0xF6, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0x27, 0xEF, 0x25, 0x06, 0xBD, 0xE3, 0x11, 0x7E, 0xDA, 0x79, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0xFF, 0x01, 0xB0, 0xBD, 0xE3, 0x11, 0xD7, 0x82, 0xBD, 0xE3, 0xB9, 0x25, 0x1C, 0xDC, 0xC1, 0xA3, 0x00, 0xD3, 0x95, 0xDD, 0x95, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0xAE, 0x00, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x95, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xB6, 0x01, 0xB2, 0x27, 0x25, 0xDC, 0x95, 0xDD, 0xBD, 0xDB, 0x82, 0x89, 0x00, 0xDD, 0xBB, 0xBD, 0xE1, 0xFE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x8E, 0x01, 0xAD, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBF, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xDE, 0xBB, 0xDF, 0x95, 0xBD, 0xE3, 0xD9, 0xDE, 0xC1, 0x7E, 0xCB, 0x9F, 0xDE, 0x93, 0xEC, 0x00, 0x26, 0x01, 0x39, 0x3C, 0xC6, 0x04, 0x3A, 0x08, 0xA6, 0x00, 0x26, 0xFB, 0x08, 0x3C, 0x30, 0xEC, 0x00, 0xEE, 0x02, 0xED, 0x00, 0x38, 0x31, 0x31, 0x20, 0xE4, 0x7F, 0x00, 0x85, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0x01, 0xB1, 0xDF, 0xDE, 0x9F, 0x91, 0x07, 0x97, 0x87, 0x01, 0x0F, 0x9E, 0xF4, 0x33, 0xC1, 0x20, 0x27, 0x38, 0xD7, 0x81, 0xC1, 0x22, 0x27, 0x5B, 0x96, 0x85, 0x26, 0x2E, 0x7E, 0xE4, 0x89, 0x01, 0xC6, 0x86, 0x20, 0x26, 0xC1, 0x30, 0x25, 0x04, 0xC1, 0x3C, 0x25, 0x1E, 0x5D, 0x2B, 0x19, 0xCE, 0xC1, 0x50, 0x9E, 0xF4, 0x5F, 0x08, 0x32, 0x81, 0x20, 0x27, 0xFB, 0xA0, 0x00, 0x27, 0xF6, 0x81, 0x80, 0x26, 0x35, 0xCA, 0x80, 0xDE, 0xDE, 0x8C, 0xC6, 0x21, 0x9F, 0xF4, 0x9E, 0x91, 0x96, 0x87, 0x06, 0x7E, 0xE4, 0xA3, 0xE7, 0x00, 0x27, 0x38, 0xC0, 0x3A, 0x27, 0x04, 0xC1, 0x4B, 0x26, 0x02, 0xD7, 0x85, 0xC0, 0x49, 0x26, 0xA4, 0xD7, 0x81, 0x0F, 0x9E, 0xF4, 0x33, 0x5D, 0x27, 0xDB, 0xD1, 0x81, 0x27, 0xD7, 0x08, 0xE7, 0x00, 0x20, 0xF3, 0x9E, 0xF4, 0x5C, 0xA6, 0x00, 0x08, 0x2A, 0xFB, 0xA6, 0x00, 0x26, 0xB2, 0x9F, 0xF4, 0x9E, 0x91, 0xBD, 0x01, 0xA3, 0x9E, 0xF4, 0x33, 0x20, 0xB5, 0xE7, 0x01, 0xE7, 0x02, 0xDC, 0xDE, 0x83, 0x01, 0xAD, 0xCE, 0x01, 0xB1, 0xDF, 0xF4, 0x39, 0xDE, 0x93, 0xEC, 0x00, 0x27, 0x0A, 0xDC, 0xA5, 0xA3, 0x02, 0x23, 0x05, 0xEE, 0x00, 0x20, 0xF2, 0x0D, 0xDF, 0xC1, 0x39, 0x26, 0xFB, 0x37, 0xBD, 0xC3, 0xDB, 0x33, 0x6F, 0x00, 0x08, 0xDF, 0x95, 0xDE, 0x93, 0x09, 0xDF, 0xF4, 0xBD, 0x01, 0x8E, 0xDE, 0xA1, 0xDF, 0x9D, 0xBD, 0xE5, 0x60, 0xDE, 0x95, 0xDF, 0x97, 0xDF, 0x99, 0xCE, 0x01, 0x41, 0xFF, 0x01, 0x3D, 0x38, 0x9E, 0x9B, 0x4F, 0x36, 0x97, 0xA7, 0x97, 0xA8, 0x97, 0x86, 0xB7, 0x01, 0x6E, 0x6E, 0x00, 0xC6, 0xFE, 0xD7, 0xE8, 0x7E, 0x00, 0xF3, 0x8D, 0xF7, 0x07, 0x36, 0x8D, 0xF7, 0xBD, 0xE6, 0xB2, 0x8D, 0xA3, 0x32, 0x06, 0x3C, 0x27, 0x16, 0xBD, 0x00, 0xF3, 0x27, 0x16, 0x81, 0xA8, 0x26, 0x0A, 0xBD, 0x00, 0xEB, 0x27, 0x08, 0xBD, 0xE6, 0xB2, 0x27, 0x08, 0x7E, 0xEA, 0x3C, 0xCE, 0xFF, 0xFF, 0xDF, 0xA5, 0x38, 0x31, 0x31, 0xBD, 0xE7, 0x6A, 0xBD, 0xE5, 0x66, 0xEC, 0x00, 0x26, 0x06, 0x7F, 0x00, 0xE8, 0x7E, 0xE2, 0x71, 0xEC, 0x02, 0x93, 0xA5, 0x22, 0xF4, 0xEC, 0x02, 0x3C, 0xBD, 0xF4, 0x19, 0xBD, 0xE7, 0xB9, 0x38, 0xBD, 0xD9, 0xF1, 0x3C, 0x3C, 0xCE, 0x01, 0xB2, 0x08, 0xA6, 0x00, 0x27, 0xD0, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x16, 0x9D, 0xEB, 0xC1, 0xF5, 0x24, 0x0E, 0x37, 0xBD, 0xEA, 0x2C, 0x33, 0xC1, 0xEF, 0x22, 0x05, 0x37, 0xBD, 0xEA, 0x26, 0x33, 0xC0, 0xEA, 0x58, 0xCE, 0xC3, 0x65, 0x7E, 0xEA, 0x85, 0xC1, 0x3F, 0x26, 0x03, 0x7E, 0xE3, 0x3A, 0xC1, 0x27, 0x27, 0x03, 0x7E, 0xE3, 0x3E, 0xCC, 0x27, 0xDD, 0x08, 0xA7, 0x00, 0x7F, 0x00, 0x81, 0x7E, 0xE3, 0x8D, 0xC1, 0xC9, 0x26, 0x05, 0x08, 0x86, 0x3A, 0xA7, 0x00, 0x08, 0xDF, 0xDE, 0x7E, 0xE3, 0x6E, 0x80, 0x7F, 0xDF, 0x89, 0xCE, 0xC1, 0x51, 0x4A, 0x26, 0x01, 0x39, 0x6D, 0x00, 0x08, 0x2A, 0xFB, 0x20, 0xF5, 0x86, 0x80, 0x97, 0x86, 0xBD, 0xE6, 0xD3, 0xBD, 0xE1, 0xD8, 0x38, 0x26, 0x04, 0xDE, 0x89, 0x3A, 0x35, 0xC6, 0x09, 0xBD, 0xE2, 0x1A, 0xBD, 0xE6, 0x56, 0x3C, 0xDE, 0xE2, 0x3C, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xE9, 0x0E, 0xBD, 0xE9, 0x0C, 0xD6, 0xCE, 0xCA, 0x7F, 0xD4, 0xCA, 0xD7, 0xCA, 0xCE, 0xE4, 0xFA, 0x7E, 0xE9, 0xA4, 0xCE, 0xF0, 0x8B, 0xBD, 0xF2, 0x51, 0xBD, 0x00, 0xF3, 0x81, 0xA5, 0x26, 0x06, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xF2, 0xAD, 0xBD, 0xE9, 0xA2, 0xDE, 0xB5, 0x3C, 0x86, 0x80, 0x36, 0x8D, 0x4B, 0xDE, 0xF4, 0xDF, 0xA9, 0xA6, 0x00, 0x27, 0x07, 0x81, 0x3A, 0x27, 0x16, 0x7E, 0xEA, 0x3C, 0x08, 0xA6, 0x00, 0x08, 0xAA, 0x00, 0xB7, 0x01, 0x83, 0x27, 0x54, 0x08, 0xEC, 0x00, 0xDD, 0xE2, 0xBD, 0xDC, 0x3C, 0xBD, 0x00, 0xEB, 0x8D, 0x02, 0x20, 0xD5, 0x27, 0x71, 0x7E, 0xDC, 0xB8, 0x4D, 0x2B, 0x03, 0x7E, 0xE6, 0xD3, 0xCE, 0xE1, 0x48, 0x81, 0xA0, 0x22, 0xD1, 0x48, 0x16, 0x3A, 0xEE, 0x00, 0xBD, 0x00, 0xEB, 0x6E, 0x00, 0xDE, 0x93, 0x09, 0xDF, 0xAD, 0x39, 0xBD, 0xDF, 0xD6, 0x27, 0x0B, 0xBD, 0xDF, 0xDE, 0x01, 0x81, 0x13, 0x27, 0x04, 0xB7, 0x01, 0x7F, 0x39, 0xBD, 0xF8, 0x83, 0x27, 0xFB, 0x20, 0xED, 0x0D, 0x26, 0x36, 0xDE, 0xF4, 0xDF, 0xA9, 0x76, 0x01, 0x83, 0x38, 0xDE, 0xE2, 0x08, 0x27, 0x07, 0x09, 0xDF, 0xA3, 0xDE, 0xA9, 0xDF, 0xA7, 0x7F, 0x00, 0xE8, 0xCE, 0xE1, 0xC0, 0x7D, 0x01, 0x83, 0x2A, 0x03, 0x7E, 0xE2, 0x66, 0x7E, 0xE2, 0x71, 0x26, 0x0F, 0xC6, 0x20, 0xDE, 0xA7, 0x26, 0x03, 0x7E, 0xE2, 0x38, 0xDF, 0xF4, 0xDE, 0xA3, 0xDF, 0xE2, 0x39, 0x20, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x9D, 0xF3, 0x27, 0x31, 0xBD, 0xEF, 0x4C, 0x3C, 0xDE, 0xA1, 0xBD, 0x00, 0xF3, 0x27, 0x0C, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0x09, 0xBC, 0x01, 0x50, 0x22, 0x1D, 0x3C, 0x01, 0x30, 0xEC, 0x00, 0xA3, 0x02, 0x25, 0x14, 0xED, 0x02, 0x83, 0x00, 0x3A, 0x25, 0x0D, 0x93, 0x95, 0x25, 0x09, 0x38, 0xDF, 0xA1, 0x38, 0xDF, 0x9B, 0x7E, 0xE3, 0xDE, 0x7E, 0xE2, 0x36, 0xBD, 0xC3, 0x81, 0x9D, 0xF3, 0xBD, 0xC7, 0x9D, 0x20, 0x0E, 0xC6, 0x03, 0xBD, 0xE2, 0x1A, 0xDE, 0xF4, 0x3C, 0xDE, 0xE2, 0x3C, 0x86, 0x82, 0x36, 0xBD, 0x00, 0xF3, 0x8D, 0x03, 0x7E, 0xE5, 0x19, 0xBD, 0xDF, 0xA3, 0x8D, 0x3A, 0x08, 0xDC, 0xA5, 0x93, 0xE2, 0x22, 0x02, 0xDE, 0x93, 0xBD, 0xE3, 0xBB, 0x25, 0x15, 0x09, 0xDF, 0xF4, 0x39, 0x26, 0xFD, 0x86, 0xFF, 0x97, 0xB5, 0xBD, 0xE1, 0xD8, 0x35, 0x81, 0x02, 0x27, 0x0B, 0xC6, 0x04, 0x8C, 0xC6, 0x0E, 0x7E, 0xE2, 0x38, 0x7E, 0xEA, 0x3C, 0x32, 0x38, 0xDF, 0xE2, 0x38, 0xDF, 0xF4, 0x8D, 0x03, 0xDF, 0xF4, 0x39, 0xC6, 0x3A, 0x86, 0x5F, 0xD7, 0x80, 0x5F, 0xDE, 0xF4, 0x17, 0xD6, 0x80, 0x97, 0x80, 0xA6, 0x00, 0x27, 0xED, 0x11, 0x27, 0xEA, 0x08, 0x81, 0x22, 0x7E, 0xD9, 0x7B, 0x01, 0xBD, 0xE9, 0x0C, 0x9D, 0xF3, 0x81, 0x81, 0x27, 0x05, 0xC6, 0xA3, 0xBD, 0xEA, 0x31, 0x96, 0xC9, 0x7E, 0xD9, 0x5D, 0x8D, 0xD2, 0xDF, 0xF4, 0x39, 0xBD, 0x00, 0xF3, 0x25, 0x8B, 0x7E, 0xE5, 0x44, 0xBD, 0xEF, 0x0D, 0x36, 0x81, 0x82, 0x27, 0x04, 0x81, 0x81, 0x26, 0xA9, 0x5A, 0x26, 0x04, 0x32, 0x7E, 0xE5, 0x46, 0x9D, 0xEB, 0x37, 0xBD, 0xDF, 0xA3, 0x33, 0x81, 0x2C, 0x27, 0xEE, 0x31, 0x39, 0xCE, 0x00, 0x00, 0xDF, 0xA5, 0x24, 0xF8, 0x80, 0x30, 0x97, 0x80, 0xDC, 0xA5, 0x81, 0x18, 0x22, 0xD9, 0x05, 0x05, 0xD3, 0xA5, 0x05, 0xDB, 0x80, 0x89, 0x00, 0xDD, 0xA5, 0xBD, 0x00, 0xEB, 0x20, 0xE4, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0x96, 0x84, 0x36, 0xBD, 0xE9, 0x1A, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x27, 0x2F, 0xDE, 0xCC, 0xDC, 0x9B, 0xA3, 0x02, 0x24, 0x13, 0xDC, 0x95, 0x93, 0xCC, 0x22, 0x0D, 0xE6, 0x00, 0xBD, 0xEC, 0xFC, 0xDE, 0xC7, 0xBD, 0xEE, 0x38, 0xCE, 0x00, 0xD0, 0xDF, 0xC7, 0xBD, 0xEE, 0x70, 0xDE, 0xC7, 0xA6, 0x00, 0x36, 0xEC, 0x02, 0xDE, 0xB5, 0xED, 0x02, 0x32, 0xA7, 0x00, 0x39, 0x7E, 0xF2, 0x70, 0xBD, 0xE4, 0x04, 0x8D, 0x04, 0x7F, 0x00, 0xE8, 0x39, 0x27, 0x3F, 0x7E, 0xC5, 0xB8, 0x01, 0xBD, 0xFC, 0x29, 0xBD, 0x00, 0xF3, 0x27, 0x33, 0xBD, 0xEA, 0x2F, 0x27, 0x3B, 0x81, 0xA1, 0x27, 0x50, 0x81, 0x2C, 0x27, 0x34, 0x81, 0x3B, 0x27, 0x5E, 0xBD, 0xE9, 0x1A, 0x96, 0x84, 0x36, 0x26, 0x06, 0xBD, 0xF4, 0x26, 0xBD, 0xED, 0x05, 0x7E, 0xC3, 0xEB, 0x5D, 0x26, 0x09, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0x15, 0x8D, 0x58, 0xBD, 0x00, 0xF3, 0x26, 0xD2, 0x86, 0x0D, 0x20, 0x54, 0xBD, 0xFA, 0x7B, 0x27, 0xF7, 0x96, 0xE6, 0x26, 0xF3, 0x39, 0xBD, 0xFA, 0x7B, 0x27, 0x0A, 0xD6, 0xE6, 0xD1, 0xE5, 0x25, 0x06, 0x8D, 0xE5, 0x20, 0x1F, 0xD6, 0xE6, 0xD0, 0xE4, 0x24, 0xFC, 0x50, 0x20, 0x11, 0xBD, 0xEF, 0x0A, 0x81, 0x29, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0xBD, 0xFA, 0x7B, 0xD0, 0xE6, 0x23, 0x05, 0xBD, 0xC3, 0xFE, 0x01, 0x01, 0xBD, 0x00, 0xEB, 0x7E, 0xE7, 0x36, 0xBD, 0xED, 0x06, 0xBD, 0xEE, 0x56, 0x5C, 0x5A, 0x27, 0xC1, 0xA6, 0x00, 0x08, 0x8D, 0x07, 0x20, 0xF6, 0x86, 0x20, 0x8C, 0x86, 0x3F, 0x7E, 0xF9, 0xC6, 0x3F, 0x52, 0x45, 0x44, 0x4F, 0x0D, 0x00, 0x96, 0x87, 0x27, 0x06, 0xDE, 0xAB, 0xDF, 0xE2, 0x20, 0xC1, 0x96, 0xE8, 0x26, 0x22, 0xCE, 0xE7, 0xC0, 0x8D, 0xCD, 0xDE, 0xA9, 0xDF, 0xF4, 0x39, 0xDE, 0xE2, 0x08, 0x27, 0x10, 0x39, 0xC6, 0x2C, 0xE7, 0x00, 0xD6, 0xE8, 0x27, 0xF7, 0xD6, 0xE9, 0x27, 0xF3, 0xC6, 0x30, 0x8C, 0xC6, 0x16, 0x8C, 0xC6, 0x32, 0x7E, 0xE2, 0x38, 0x20, 0x12, 0xBD, 0xE7, 0xBC, 0xBD, 0xE7, 0xB9, 0xBD, 0xFA, 0xA4, 0x24, 0xDC, 0x38, 0x7E, 0xDF, 0xED, 0xDE, 0xAD, 0x86, 0x4F, 0x97, 0x87, 0xDF, 0xAF, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xDE, 0xF4, 0xDF, 0xA5, 0xDE, 0xAF, 0xA6, 0x00, 0x26, 0x09, 0x96, 0x87, 0x26, 0x4E, 0xBD, 0xE7, 0xBC, 0x8D, 0xD1, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0xD6, 0x84, 0x27, 0x1C, 0xDE, 0xF4, 0x97, 0x80, 0x81, 0x22, 0x27, 0x06, 0x09, 0xCC, 0x3A, 0x2C, 0x01, 0x01, 0xBD, 0xC5, 0x35, 0xBD, 0xED, 0x0C, 0xBD, 0xEF, 0x3E, 0xBD, 0xE6, 0xEA, 0x20, 0x06, 0xBD, 0xF3, 0x59, 0xBD, 0xF2, 0x70, 0xBD, 0x00, 0xF3, 0x27, 0x07, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE7, 0xC8, 0xDE, 0xF4, 0xDF, 0xAF, 0xDE, 0xA5, 0xDF, 0xF4, 0xBD, 0x00, 0xF3, 0x27, 0x25, 0xBD, 0xEA, 0x2F, 0x20, 0x9F, 0xDF, 0xF4, 0xBD, 0xE6, 0x56, 0x08, 0x4D, 0x26, 0x0F, 0xC6, 0x06, 0xA6, 0x00, 0xAA, 0x01, 0x27, 0x46, 0xEC, 0x02, 0xDD, 0xAB, 0xC6, 0x04, 0x3A, 0xA6, 0x00, 0x81, 0x85, 0x26, 0xE2, 0x20, 0x97, 0xDE, 0xAF, 0xD6, 0x87, 0x27, 0x03, 0x7E, 0xE5, 0x63, 0xA6, 0x00, 0x27, 0x06, 0xCE, 0xE8, 0xAA, 0x7E, 0xE7, 0xA8, 0x39, 0x3F, 0x45, 0x58, 0x54, 0x52, 0x41, 0x20, 0x49, 0x47, 0x4E, 0x4F, 0x52, 0x45, 0x44, 0x0D, 0x00, 0x26, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x03, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE1, 0xD8, 0x27, 0x04, 0xC6, 0x00, 0x20, 0x47, 0x35, 0x08, 0x08, 0x08, 0xBD, 0xF2, 0x51, 0x30, 0xA6, 0x08, 0x97, 0xCE, 0xDE, 0xB5, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x70, 0x30, 0xC6, 0x09, 0x3A, 0xBD, 0xF2, 0xD9, 0x30, 0xE0, 0x08, 0x27, 0x0C, 0xEE, 0x0E, 0xDF, 0xE2, 0x30, 0xEE, 0x10, 0xDF, 0xF4, 0x7E, 0xE5, 0x19, 0xC6, 0x12, 0x3A, 0x35, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x26, 0xF2, 0xBD, 0x00, 0xEB, 0x8D, 0xB6, 0x8D, 0x0C, 0x6D, 0x0D, 0x76, 0x00, 0x84, 0x28, 0x95, 0xC6, 0x18, 0x7E, 0xE2, 0x38, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0x4F, 0xC6, 0x37, 0x36, 0xC6, 0x01, 0xBD, 0xE2, 0x1A, 0xBD, 0xE9, 0xE5, 0x7F, 0x00, 0xB9, 0xBD, 0x00, 0xF3, 0x80, 0xAE, 0x25, 0x14, 0x81, 0x03, 0x24, 0x10, 0x81, 0x01, 0x49, 0x98, 0xB9, 0x91, 0xB9, 0x25, 0x59, 0x97, 0xB9, 0xBD, 0x00, 0xEB, 0x20, 0xE8, 0xD6, 0xB9, 0x26, 0x2B, 0x24, 0x66, 0x8B, 0x07, 0x24, 0x62, 0x99, 0x84, 0x26, 0x03, 0x7E, 0xEE, 0x06, 0x89, 0xFF, 0x16, 0x48, 0x1B, 0x16, 0xCE, 0xE0, 0x30, 0x3A, 0x32, 0xA1, 0x00, 0x24, 0x53, 0x8D, 0xA3, 0x36, 0x8D, 0x23, 0xDE, 0xB7, 0x32, 0x26, 0x18, 0x4D, 0x27, 0x6C, 0x20, 0x4D, 0x78, 0x00, 0x84, 0x59, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0xE9, 0x88, 0xD7, 0xB9, 0x20, 0xDC, 0x64, 0xEA, 0xAE, 0xA1, 0x00, 0x24, 0x36, 0x20, 0xDA, 0xEC, 0x01, 0x37, 0x36, 0x8D, 0x07, 0xD6, 0xB9, 0x20, 0x86, 0x7E, 0xEA, 0x3C, 0xD6, 0xCE, 0xA6, 0x00, 0x38, 0x37, 0xD6, 0xCD, 0x37, 0xD6, 0xCC, 0x37, 0xD6, 0xCB, 0x37, 0xD6, 0xCA, 0x37, 0xD6, 0xC9, 0x37, 0x6E, 0x00, 0xCE, 0x00, 0x00, 0x32, 0x4D, 0x27, 0x26, 0x81, 0x64, 0x27, 0x03, 0xBD, 0xE9, 0x0E, 0xDF, 0xB7, 0x33, 0x81, 0x5A, 0x27, 0x1A, 0x81, 0x7D, 0x27, 0x16, 0x54, 0xD7, 0x88, 0x32, 0x33, 0xDD, 0xD6, 0x38, 0xDF, 0xD8, 0x33, 0xD7, 0xDA, 0x33, 0xD7, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xD6, 0xC9, 0x39, 0x7F, 0x00, 0x84, 0x7E, 0xE0, 0xB4, 0x9D, 0xEB, 0x24, 0x03, 0x7E, 0xF3, 0x59, 0xBD, 0xEB, 0x76, 0x24, 0x52, 0x81, 0x2E, 0x27, 0xF4, 0x81, 0xA8, 0x27, 0x42, 0x81, 0xA7, 0x27, 0xE2, 0x81, 0x22, 0x26, 0x08, 0xDE, 0xF4, 0xBD, 0xED, 0x06, 0x7E, 0xEF, 0x3E, 0x81, 0xA4, 0x26, 0x0D, 0x86, 0x5A, 0xBD, 0xE9, 0x21, 0xBD, 0xEB, 0xC7, 0x43, 0x53, 0x7E, 0xEC, 0xE3, 0x80, 0xB1, 0x24, 0x31, 0x8D, 0x06, 0xBD, 0xE9, 0x1A, 0xC6, 0x29, 0x8C, 0xC6, 0x28, 0x8C, 0xC6, 0x2C, 0x3C, 0xDE, 0xF4, 0xE1, 0x00, 0x38, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0xC6, 0x02, 0x7E, 0xE2, 0x38, 0x86, 0x7D, 0xBD, 0xE9, 0x21, 0x7E, 0xF5, 0x93, 0xBD, 0xEB, 0x1B, 0xDF, 0xCC, 0x96, 0x84, 0x26, 0x92, 0x7E, 0xF2, 0x51, 0x16, 0xBD, 0xE0, 0x57, 0xC1, 0x2C, 0x24, 0x25, 0x37, 0xC1, 0x22, 0x25, 0x1D, 0x8D, 0xC8, 0x33, 0xC1, 0x28, 0x24, 0x19, 0x37, 0xBD, 0xE9, 0x1A, 0x8D, 0xC0, 0xBD, 0xE9, 0x0F, 0x32, 0xDE, 0xCC, 0x3C, 0x36, 0xBD, 0xEF, 0x0D, 0x32, 0x37, 0x16, 0x20, 0x03, 0x8D, 0xA3, 0x33, 0xCE, 0xE0, 0x00, 0x3A, 0xEE, 0x00, 0xAD, 0x00, 0x7E, 0xE9, 0x0E, 0x86, 0x4F, 0x97, 0x82, 0xBD, 0xEB, 0xC7, 0xDD, 0x80, 0xBD, 0xF2, 0x8B, 0xBD, 0xEB, 0xC7, 0x7D, 0x00, 0x82, 0x26, 0x06, 0x94, 0x80, 0xD4, 0x81, 0x20, 0x04, 0x9A, 0x80, 0xDA, 0x81, 0x7E, 0xEC, 0xE3, 0xBD, 0xE9, 0x10, 0x26, 0x10, 0x96, 0xDB, 0x8A, 0x7F, 0x94, 0xD7, 0x97, 0xD7, 0xCE, 0x00, 0xD6, 0xBD, 0xF2, 0xD9, 0x20, 0x40, 0x7F, 0x00, 0x84, 0x7A, 0x00, 0xB9, 0xBD, 0xEE, 0x56, 0xD7, 0xD0, 0xDF, 0xD2, 0xDE, 0xD9, 0xBD, 0xEE, 0x58, 0x96, 0xD0, 0x10, 0x27, 0x07, 0x86, 0x01, 0x24, 0x03, 0xD6, 0xD0, 0x40, 0x97, 0xCE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0xD2, 0x5C, 0x09, 0x5A, 0x26, 0x04, 0xD6, 0xCE, 0x20, 0x0B, 0x32, 0x08, 0xA1, 0x00, 0x27, 0xF3, 0xC6, 0xFF, 0x24, 0x01, 0x50, 0x9E, 0x91, 0x32, 0x06, 0xCB, 0x01, 0x59, 0xD4, 0x88, 0x27, 0x02, 0xC6, 0xFF, 0x7E, 0xF2, 0xBC, 0xBD, 0xEA, 0x2F, 0x16, 0x8D, 0x0A, 0xBD, 0x00, 0xF3, 0x26, 0xF5, 0x39, 0x5F, 0xBD, 0x00, 0xF3, 0xD7, 0x83, 0x97, 0xB1, 0xBD, 0x00, 0xF3, 0x8D, 0x4E, 0x24, 0x03, 0x7E, 0xEA, 0x3C, 0x5F, 0xD7, 0x84, 0xBD, 0x00, 0xEB, 0x25, 0x04, 0x8D, 0x3F, 0x25, 0x0A, 0x16, 0xBD, 0x00, 0xEB, 0x25, 0xFB, 0x8D, 0x35, 0x24, 0xF7, 0x81, 0x24, 0x26, 0x08, 0x73, 0x00, 0x84, 0xCB, 0x80, 0xBD, 0x00, 0xEB, 0xD7, 0xB2, 0xD6, 0x86, 0x5A, 0x26, 0x03, 0x7E, 0xEC, 0x07, 0x9B, 0x86, 0x80, 0x28, 0x26, 0x03, 0x7E, 0xEB, 0xDE, 0x7F, 0x00, 0x86, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x14, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x3F, 0xC6, 0x07, 0x3A, 0x20, 0xF1, 0x81, 0x41, 0x25, 0x04, 0x80, 0x5B, 0x80, 0xA5, 0x39, 0x38, 0x3C, 0x8C, 0xEA, 0x4C, 0x26, 0x04, 0xCE, 0xEB, 0xB7, 0x39, 0xDC, 0x99, 0xDD, 0xBD, 0xC3, 0x00, 0x07, 0xDD, 0xBB, 0xDE, 0x97, 0xDF, 0xC1, 0xBD, 0xE1, 0xFE, 0xDE, 0xBB, 0xDF, 0x99, 0xDE, 0xBF, 0xDF, 0x97, 0xDE, 0xC1, 0xDC, 0xB1, 0xED, 0x00, 0x4F, 0x5F, 0xED, 0x02, 0xED, 0x04, 0xA7, 0x06, 0x08, 0x08, 0xDF, 0xB3, 0x39, 0x90, 0x80, 0x00, 0x00, 0x00, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xE9, 0x0E, 0x96, 0xCE, 0x2B, 0x67, 0xBD, 0xE9, 0x0E, 0x96, 0xC9, 0x81, 0x90, 0x25, 0x08, 0xCE, 0xEB, 0xB5, 0xBD, 0xF2, 0xD9, 0x26, 0x56, 0xBD, 0xF3, 0x0B, 0xDC, 0xCC, 0x39, 0xDE, 0x83, 0x3C, 0x5F, 0x37, 0xDE, 0xB1, 0x3C, 0x8D, 0xD2, 0x38, 0xDF, 0xB1, 0x33, 0x5C, 0xD7, 0x82, 0x32, 0x33, 0xDE, 0xCC, 0x3C, 0x37, 0x36, 0xD6, 0x82, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0xE3, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0x83, 0xC6, 0xFF, 0x37, 0xDE, 0x97, 0x9C, 0x99, 0x27, 0x25, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x07, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0x20, 0xEF, 0xC6, 0x12, 0x32, 0x4D, 0x27, 0xBC, 0x96, 0x83, 0x26, 0x0B, 0xD6, 0x82, 0xE1, 0x04, 0x27, 0x5C, 0xC6, 0x10, 0x8C, 0xC6, 0x08, 0x7E, 0xE2, 0x38, 0x32, 0x4D, 0x27, 0xF7, 0xCC, 0x00, 0x05, 0xDD, 0xDE, 0xDC, 0xB1, 0xED, 0x00, 0xD6, 0x82, 0xE7, 0x04, 0xBD, 0xE2, 0x1A, 0xDF, 0xBB, 0xC6, 0x0B, 0x4F, 0x7D, 0x00, 0x83, 0x27, 0x05, 0x32, 0x33, 0xC3, 0x00, 0x01, 0xED, 0x05, 0x8D, 0x5F, 0xDD, 0xDE, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE6, 0xBD, 0xE2, 0x2D, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xBD, 0xE2, 0x1E, 0x83, 0x00, 0x35, 0xDD, 0x99, 0x4F, 0x09, 0xA7, 0x05, 0x9C, 0x89, 0x26, 0xF9, 0xDE, 0xBB, 0x96, 0x99, 0x93, 0xBB, 0xED, 0x02, 0x96, 0x83, 0x26, 0x31, 0xE6, 0x04, 0xD7, 0x82, 0x4F, 0x5F, 0xDD, 0xDE, 0x32, 0x33, 0xDD, 0xCC, 0x37, 0x36, 0xA3, 0x05, 0x24, 0x3F, 0xDC, 0xDE, 0x32, 0x33, 0x27, 0x04, 0x8D, 0x18, 0xD3, 0xCC, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE3, 0xDD, 0x89, 0x05, 0x05, 0xD3, 0x89, 0xC3, 0x00, 0x05, 0xBD, 0xE2, 0x2D, 0xDF, 0xB3, 0x39, 0x86, 0x10, 0x97, 0xBF, 0xEC, 0x05, 0xDD, 0x91, 0x4F, 0x5F, 0x05, 0x25, 0x12, 0x78, 0x00, 0xDF, 0x79, 0x00, 0xDE, 0x24, 0x04, 0xD3, 0x91, 0x25, 0x06, 0x7A, 0x00, 0xBF, 0x26, 0xEC, 0x39, 0x7E, 0xEC, 0x2B, 0x9F, 0x91, 0xDC, 0x91, 0x7E, 0xDC, 0x8F, 0x4F, 0x7F, 0x00, 0x84, 0xDD, 0xCA, 0xC6, 0x90, 0x7E, 0xF2, 0xC3, 0xBD, 0xE9, 0x0E, 0xCE, 0x02, 0xAE, 0xBD, 0xF4, 0x29, 0x38, 0xCE, 0x02, 0xAD, 0x20, 0x0A, 0xDF, 0xC7, 0x8D, 0x5F, 0xDF, 0xD2, 0xD7, 0xD0, 0x39, 0x09, 0x86, 0x22, 0x97, 0x80, 0x97, 0x81, 0x08, 0xDF, 0xDC, 0xDF, 0xD2, 0xC6, 0xFF, 0x5C, 0xA6, 0x00, 0x27, 0x0E, 0x08, 0x91, 0x80, 0x27, 0x04, 0x91, 0x81, 0x26, 0xF2, 0x81, 0x22, 0x27, 0x01, 0x09, 0xDF, 0xDE, 0xD7, 0xD0, 0x37, 0xDC, 0xDC, 0x83, 0x02, 0xAE, 0x33, 0x22, 0x07, 0x8D, 0xC7, 0xDE, 0xDC, 0xBD, 0xEE, 0x3A, 0xFE, 0x01, 0x3D, 0x8C, 0x01, 0x50, 0x26, 0x05, 0xC6, 0x1E, 0x7E, 0xE2, 0x38, 0x96, 0xD0, 0xA7, 0x00, 0xDC, 0xD2, 0xED, 0x02, 0x86, 0xFF, 0x97, 0x84, 0xFF, 0x01, 0x3F, 0xDF, 0xCC, 0xC6, 0x05, 0x3A, 0xFF, 0x01, 0x3D, 0x39, 0x7F, 0x00, 0x85, 0x37, 0x4F, 0xDD, 0x89, 0xDC, 0x9D, 0x93, 0x89, 0x93, 0x9B, 0x25, 0x0B, 0xD3, 0x9B, 0xDD, 0x9D, 0xDE, 0x9D, 0x08, 0xDF, 0x9F, 0x33, 0x39, 0xC6, 0x1A, 0x73, 0x00, 0x85, 0x27, 0xC4, 0x8D, 0x03, 0x33, 0x20, 0xDD, 0xDE, 0xA1, 0xDF, 0x9D, 0x4F, 0x5F, 0xDD, 0xC5, 0xDE, 0x9B, 0xDF, 0xC1, 0xCE, 0x01, 0x41, 0xBC, 0x01, 0x3D, 0x27, 0x04, 0x8D, 0x32, 0x20, 0xF7, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x04, 0x8D, 0x22, 0x20, 0xF8, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x27, 0x38, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x27, 0xE8, 0x8D, 0x08, 0x20, 0xF8, 0xA6, 0x01, 0x08, 0x08, 0x2A, 0x16, 0xE6, 0x00, 0x27, 0x12, 0xEC, 0x02, 0x93, 0x9D, 0x22, 0x0C, 0xEC, 0x02, 0x93, 0xC1, 0x23, 0x06, 0xDF, 0xC5, 0xEC, 0x02, 0xDD, 0xC1, 0xC6, 0x05, 0x3A, 0x39, 0xDE, 0xC5, 0x27, 0xFB, 0x4F, 0xE6, 0x00, 0x5A, 0xD3, 0xC1, 0xDD, 0xBD, 0xDE, 0x9D, 0xDF, 0xBB, 0xBD, 0xE2, 0x00, 0xDE, 0xC5, 0xDC, 0xBF, 0xED, 0x02, 0xDE, 0xBF, 0x09, 0x7E, 0xED, 0x87, 0xDE, 0xCC, 0x3C, 0xBD, 0xE9, 0xE5, 0xBD, 0xE9, 0x0F, 0x38, 0xDF, 0xDC, 0xE6, 0x00, 0xDE, 0xCC, 0xEB, 0x00, 0x24, 0x05, 0xC6, 0x1C, 0x7E, 0xE2, 0x38, 0xBD, 0xEC, 0xFC, 0xDE, 0xDC, 0xE6, 0x00, 0x8D, 0x10, 0xDE, 0xC7, 0x8D, 0x2C, 0x8D, 0x0C, 0xDE, 0xDC, 0x8D, 0x26, 0xBD, 0xED, 0x3A, 0x7E, 0xE9, 0x2E, 0xEE, 0x02, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0x9F, 0x5C, 0x20, 0x04, 0x32, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xF9, 0xDF, 0x9F, 0x9E, 0x91, 0x32, 0x06, 0x39, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xE6, 0x00, 0x8D, 0x14, 0x26, 0x0F, 0xEE, 0x07, 0x09, 0x9C, 0x9D, 0x26, 0x06, 0x37, 0xD3, 0x9D, 0xDD, 0x9D, 0x33, 0x08, 0x39, 0xEE, 0x02, 0x39, 0xBC, 0x01, 0x3F, 0x26, 0x0C, 0xFF, 0x01, 0x3D, 0x09, 0x09, 0x09, 0x09, 0x09, 0xFF, 0x01, 0x3F, 0x4F, 0x39, 0x8D, 0x03, 0x7E, 0xEC, 0xE2, 0x8D, 0xCA, 0x7F, 0x00, 0x84, 0x5D, 0x39, 0xBD, 0xEF, 0x10, 0xC6, 0x01, 0xBD, 0xED, 0x5F, 0x96, 0xCD, 0xBD, 0xED, 0x00, 0xA7, 0x00, 0x31, 0x31, 0x7E, 0xED, 0x3A, 0x8D, 0x02, 0x20, 0xDE, 0x8D, 0xDF, 0x27, 0x5D, 0xE6, 0x00, 0x39, 0x8D, 0x43, 0x4F, 0xE1, 0x00, 0x23, 0x03, 0xE6, 0x00, 0x4F, 0x37, 0x36, 0xBD, 0xEC, 0xFE, 0xDE, 0xC7, 0x8D, 0x98, 0x33, 0x3A, 0x33, 0xBD, 0xEE, 0x3A, 0x20, 0xD7, 0x8D, 0x28, 0xA6, 0x00, 0x10, 0x20, 0xE1, 0xC6, 0xFF, 0xD7, 0xCD, 0x8D, 0x44, 0x81, 0x29, 0x27, 0x03, 0xBD, 0xEF, 0x47, 0x8D, 0x14, 0x27, 0x27, 0x5F, 0x4A, 0xA1, 0x00, 0x24, 0xD1, 0x16, 0xE0, 0x00, 0x50, 0xD1, 0xCD, 0x23, 0xC9, 0xD6, 0xCD, 0x20, 0xC5, 0xBD, 0xEA, 0x29, 0x30, 0xEC, 0x05, 0xDD, 0xC7, 0xEC, 0x00, 0xED, 0x05, 0x31, 0x31, 0x31, 0x31, 0x32, 0xDE, 0xC7, 0x16, 0x39, 0x7E, 0xEC, 0x2E, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC0, 0x96, 0xCC, 0x26, 0xF0, 0xD6, 0xCD, 0x7E, 0x00, 0xF3, 0xBD, 0xEE, 0x87, 0x26, 0x03, 0x7E, 0xEF, 0xF4, 0xBD, 0xE2, 0x2C, 0xA6, 0x00, 0x36, 0x6F, 0x00, 0xDE, 0xF4, 0xDF, 0xDE, 0xDE, 0x89, 0xDF, 0xF4, 0x8D, 0xE3, 0xBD, 0xF3, 0x59, 0x32, 0xDE, 0x8B, 0xA7, 0x00, 0xDE, 0xDE, 0xDF, 0xF4, 0x39, 0x8D, 0x07, 0xDF, 0xA5, 0xBD, 0xEA, 0x2F, 0x20, 0xC1, 0xBD, 0xE9, 0x0C, 0x96, 0xCE, 0x2B, 0xB4, 0x96, 0xC9, 0x81, 0x90, 0x22, 0xAE, 0xBD, 0xF3, 0x0B, 0xDE, 0xCC, 0x39, 0x8D, 0xEE, 0xE6, 0x00, 0x7E, 0xEC, 0xE2, 0x8D, 0xDB, 0xDE, 0xA5, 0xE7, 0x00, 0x39, 0xCE, 0xF5, 0x24, 0x20, 0x0B, 0xBD, 0xF1, 0x60, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xDC, 0x20, 0x03, 0xBD, 0xF1, 0x60, 0x5D, 0x26, 0x03, 0x7E, 0xF2, 0x8B, 0xCE, 0x00, 0xD6, 0x16, 0x27, 0x6D, 0xD0, 0xC9, 0x27, 0x6A, 0x2B, 0x0A, 0x97, 0xC9, 0x96, 0xDB, 0x97, 0xCE, 0xCE, 0x00, 0xC9, 0x50, 0xC1, 0xF8, 0x2F, 0x5A, 0x4F, 0x64, 0x01, 0xBD, 0xF0, 0x80, 0xD6, 0xDC, 0x2A, 0x0B, 0x63, 0x01, 0x63, 0x02, 0x63, 0x03, 0x63, 0x04, 0x43, 0x89, 0x00, 0x97, 0xDD, 0x96, 0xCD, 0x99, 0xDA, 0x97, 0xCD, 0x96, 0xCC, 0x99, 0xD9, 0x97, 0xCC, 0x96, 0xCB, 0x99, 0xD8, 0x97, 0xCB, 0x96, 0xCA, 0x99, 0xD7, 0x97, 0xCA, 0x17, 0x2A, 0x47, 0x25, 0x02, 0x8D, 0x66, 0x5F, 0x96, 0xCA, 0x26, 0x34, 0x96, 0xCB, 0x97, 0xCA, 0x96, 0xCC, 0x97, 0xCB, 0x96, 0xCD, 0x97, 0xCC, 0x96, 0xDD, 0x97, 0xCD, 0x7F, 0x00, 0xDD, 0xCB, 0x08, 0xC1, 0x28, 0x2D, 0xE3, 0x4F, 0x97, 0xC9, 0x97, 0xCE, 0x39, 0x8D, 0x78, 0x0C, 0x20, 0xA7, 0x5C, 0x78, 0x00, 0xDD, 0x79, 0x00, 0xCD, 0x79, 0x00, 0xCC, 0x79, 0x00, 0xCB, 0x79, 0x00, 0xCA, 0x2A, 0xEE, 0x96, 0xC9, 0x10, 0x97, 0xC9, 0x23, 0xDC, 0x8C, 0x25, 0x09, 0x78, 0x00, 0xDD, 0x86, 0x00, 0x97, 0xDD, 0x20, 0x11, 0x7C, 0x00, 0xC9, 0x27, 0x2F, 0x76, 0x00, 0xCA, 0x76, 0x00, 0xCB, 0x76, 0x00, 0xCC, 0x76, 0x00, 0xCD, 0x24, 0x04, 0x8D, 0x12, 0x27, 0xE9, 0x39, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xCA, 0x73, 0x00, 0xCB, 0x73, 0x00, 0xCC, 0x73, 0x00, 0xCD, 0xDE, 0xCC, 0x08, 0xDF, 0xCC, 0x26, 0x05, 0xDE, 0xCA, 0x08, 0xDF, 0xCA, 0x39, 0xC6, 0x0A, 0x7E, 0xE2, 0x38, 0xCE, 0x00, 0x8C, 0xA6, 0x04, 0x97, 0xDD, 0xA6, 0x03, 0xA7, 0x04, 0xA6, 0x02, 0xA7, 0x03, 0xA6, 0x01, 0xA7, 0x02, 0x96, 0xD5, 0xA7, 0x01, 0xCB, 0x08, 0x2F, 0xE8, 0x96, 0xDD, 0xC0, 0x08, 0x27, 0x0C, 0x67, 0x01, 0x66, 0x02, 0x66, 0x03, 0x66, 0x04, 0x46, 0x5C, 0x26, 0xF4, 0x39, 0x81, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7F, 0x5E, 0x56, 0xCB, 0x79, 0x80, 0x13, 0x9B, 0x0B, 0x64, 0x80, 0x76, 0x38, 0x93, 0x16, 0x82, 0x38, 0xAA, 0x3B, 0x20, 0x80, 0x35, 0x04, 0xF3, 0x34, 0x81, 0x35, 0x04, 0xF3, 0x34, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x31, 0x72, 0x17, 0xF8, 0xBD, 0xF2, 0xAD, 0x2E, 0x03, 0x7E, 0xEC, 0x2E, 0xCE, 0xF0, 0xA5, 0x96, 0xC9, 0x80, 0x80, 0x36, 0x86, 0x80, 0x97, 0xC9, 0xBD, 0xEF, 0x7D, 0xCE, 0xF0, 0xAA, 0xBD, 0xF1, 0xC6, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x72, 0xCE, 0xF0, 0x90, 0xBD, 0xF5, 0xF8, 0xCE, 0xF0, 0xAF, 0xBD, 0xEF, 0x7D, 0x33, 0xBD, 0xF3, 0xE9, 0xCE, 0xF0, 0xB4, 0x8D, 0x6F, 0x27, 0x6C, 0xBD, 0xF1, 0x79, 0x86, 0x00, 0x97, 0x8D, 0x97, 0x8E, 0x97, 0x8F, 0x97, 0x90, 0xD6, 0xCD, 0x8D, 0x26, 0xD6, 0xDD, 0xF7, 0x01, 0x55, 0xD6, 0xCC, 0x8D, 0x1D, 0xD6, 0xDD, 0xF7, 0x01, 0x54, 0xD6, 0xCB, 0x8D, 0x14, 0xD6, 0xDD, 0xF7, 0x01, 0x53, 0xD6, 0xCA, 0x8D, 0x10, 0xD6, 0xDD, 0xF7, 0x01, 0x52, 0xBD, 0xF2, 0x48, 0x7E, 0xEF, 0xD6, 0x26, 0x03, 0x7E, 0xF0, 0x5D, 0x0D, 0x96, 0x8D, 0x56, 0x27, 0x2A, 0x24, 0x16, 0x96, 0x90, 0x9B, 0xDA, 0x97, 0x90, 0x96, 0x8F, 0x99, 0xD9, 0x97, 0x8F, 0x96, 0x8E, 0x99, 0xD8, 0x97, 0x8E, 0x96, 0x8D, 0x99, 0xD7, 0x46, 0x97, 0x8D, 0x76, 0x00, 0x8E, 0x76, 0x00, 0x8F, 0x76, 0x00, 0x90, 0x76, 0x00, 0xDD, 0x0C, 0x20, 0xD1, 0x39, 0xEC, 0x01, 0x97, 0xDB, 0x8A, 0x80, 0xDD, 0xD7, 0xD6, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xEC, 0x03, 0xDD, 0xD9, 0xA6, 0x00, 0x97, 0xD6, 0xD6, 0xC9, 0x39, 0x4D, 0x27, 0x19, 0x9B, 0xC9, 0x46, 0x49, 0x28, 0x13, 0x8B, 0x80, 0x97, 0xC9, 0x26, 0x03, 0x7E, 0xEF, 0xF7, 0x96, 0xDC, 0x97, 0xCE, 0x39, 0x96, 0xCE, 0x43, 0x20, 0x02, 0x32, 0x32, 0x2B, 0x03, 0x7E, 0xEF, 0xF4, 0x7E, 0xF0, 0x58, 0xBD, 0xF2, 0x9F, 0x27, 0x0F, 0x8B, 0x02, 0x25, 0xF4, 0x7F, 0x00, 0xDC, 0xBD, 0xEF, 0x89, 0x7C, 0x00, 0xC9, 0x27, 0xE9, 0x39, 0x84, 0x20, 0x00, 0x00, 0x00, 0xBD, 0xF2, 0x9F, 0xCE, 0xF1, 0xB4, 0x5F, 0xD7, 0xDC, 0xBD, 0xF2, 0x51, 0x8C, 0x8D, 0x98, 0x27, 0x79, 0x70, 0x00, 0xC9, 0x8D, 0xAA, 0x7C, 0x00, 0xC9, 0x27, 0xC8, 0xCE, 0x00, 0x8D, 0xC6, 0x04, 0xD7, 0x82, 0xC6, 0x01, 0x96, 0xCA, 0x91, 0xD7, 0x26, 0x13, 0x96, 0xCB, 0x91, 0xD8, 0x26, 0x0D, 0x96, 0xCC, 0x91, 0xD9, 0x26, 0x07, 0x96, 0xCD, 0x91, 0xDA, 0x26, 0x01, 0x0D, 0x07, 0x59, 0x24, 0x0C, 0xE7, 0x00, 0x08, 0x7A, 0x00, 0x82, 0x2B, 0x37, 0x27, 0x31, 0xC6, 0x01, 0x06, 0x25, 0x12, 0x78, 0x00, 0xDA, 0x79, 0x00, 0xD9, 0x79, 0x00, 0xD8, 0x79, 0x00, 0xD7, 0x25, 0xDF, 0x2B, 0xC4, 0x20, 0xDB, 0x96, 0xDA, 0x90, 0xCD, 0x97, 0xDA, 0x96, 0xD9, 0x92, 0xCC, 0x97, 0xD9, 0x96, 0xD8, 0x92, 0xCB, 0x97, 0xD8, 0x96, 0xD7, 0x92, 0xCA, 0x97, 0xD7, 0x20, 0xD4, 0xC6, 0x40, 0x20, 0xCD, 0x56, 0x56, 0x56, 0xD7, 0xDD, 0x8D, 0x08, 0x7E, 0xEF, 0xD6, 0xC6, 0x14, 0x7E, 0xE2, 0x38, 0xDE, 0x8D, 0xDF, 0xCA, 0xDE, 0x8F, 0xDF, 0xCC, 0x39, 0x36, 0xEC, 0x01, 0x97, 0xCE, 0x8A, 0x80, 0xDD, 0xCA, 0x7F, 0x00, 0xDD, 0xE6, 0x00, 0xEE, 0x03, 0xDF, 0xCC, 0xD7, 0xC9, 0x32, 0x39, 0xCE, 0x00, 0xBF, 0x20, 0x06, 0xCE, 0x00, 0xBA, 0x8C, 0xDE, 0xB5, 0x96, 0xC9, 0xA7, 0x00, 0x96, 0xCE, 0x8A, 0x7F, 0x94, 0xCA, 0xA7, 0x01, 0x96, 0xCB, 0xA7, 0x02, 0x96, 0xCC, 0xA7, 0x03, 0x96, 0xCD, 0xA7, 0x04, 0x39, 0x96, 0xDB, 0x97, 0xCE, 0xDE, 0xD6, 0xDF, 0xC9, 0x7F, 0x00, 0xDD, 0xDE, 0xD8, 0xDF, 0xCB, 0xDE, 0xD9, 0xDF, 0xCC, 0x39, 0xDC, 0xC9, 0xDD, 0xD6, 0xDE, 0xCB, 0xDF, 0xD8, 0xDE, 0xCD, 0xDF, 0xDA, 0x4D, 0x39, 0xD6, 0xC9, 0x27, 0x08, 0xD6, 0xCE, 0x59, 0xC6, 0xFF, 0x25, 0x01, 0x50, 0x39, 0x8D, 0xF1, 0xD7, 0xCA, 0x7F, 0x00, 0xCB, 0xC6, 0x88, 0x96, 0xCA, 0x80, 0x80, 0xD7, 0xC9, 0xCC, 0x00, 0x00, 0xDD, 0xCC, 0x97, 0xDD, 0x97, 0xCE, 0x7E, 0xEF, 0xD2, 0x7F, 0x00, 0xCE, 0x39, 0xE6, 0x00, 0x27, 0xD0, 0xE6, 0x01, 0xD8, 0xCE, 0x2B, 0xCE, 0xD6, 0xC9, 0xE1, 0x00, 0x26, 0x1D, 0xE6, 0x01, 0xCA, 0x7F, 0xD4, 0xCA, 0xE1, 0x01, 0x26, 0x13, 0xD6, 0xCB, 0xE1, 0x02, 0x26, 0x0D, 0xD6, 0xCC, 0xE1, 0x03, 0x26, 0x07, 0xD6, 0xCD, 0xE0, 0x04, 0x26, 0x01, 0x39, 0x56, 0xD8, 0xCE, 0x20, 0xA8, 0xD6, 0xC9, 0x27, 0x41, 0xC0, 0xA0, 0x96, 0xCE, 0x2A, 0x06, 0x73, 0x00, 0xD5, 0xBD, 0xF0, 0x3F, 0xCE, 0x00, 0xC9, 0xC1, 0xF8, 0x2E, 0x07, 0xBD, 0xF0, 0x74, 0x7F, 0x00, 0xD5, 0x39, 0x7F, 0x00, 0xD5, 0x96, 0xCE, 0x49, 0x76, 0x00, 0xCA, 0x7E, 0xF0, 0x80, 0xD6, 0xC9, 0xC1, 0xA0, 0x24, 0x1D, 0x8D, 0xCE, 0xD7, 0xDD, 0x96, 0xCE, 0xD7, 0xCE, 0x80, 0x80, 0x86, 0xA0, 0x97, 0xC9, 0x96, 0xCD, 0x97, 0x80, 0x7E, 0xEF, 0xD2, 0xD7, 0xCA, 0xD7, 0xCB, 0xD7, 0xCC, 0xD7, 0xCD, 0x39, 0x7E, 0xD9, 0xE4, 0xCE, 0x00, 0x00, 0xDF, 0xCE, 0xDF, 0xC9, 0xDF, 0xCB, 0xDF, 0xCC, 0xDF, 0xC1, 0xDF, 0xBF, 0x25, 0x6B, 0x81, 0x2D, 0x26, 0x05, 0x73, 0x00, 0xCF, 0x20, 0x04, 0x81, 0x2B, 0x26, 0x05, 0xBD, 0x00, 0xEB, 0x25, 0x59, 0x81, 0x2E, 0x27, 0x2D, 0x81, 0x45, 0x26, 0x2E, 0xBD, 0x00, 0xEB, 0x25, 0x69, 0x81, 0xA8, 0x27, 0x0E, 0x81, 0x2D, 0x27, 0x0A, 0x81, 0xA7, 0x27, 0x09, 0x81, 0x2B, 0x27, 0x05, 0x20, 0x08, 0x73, 0x00, 0xC2, 0xBD, 0x00, 0xEB, 0x25, 0x4F, 0x7D, 0x00, 0xC2, 0x27, 0x0A, 0x70, 0x00, 0xC1, 0x20, 0x05, 0x73, 0x00, 0xC0, 0x26, 0xC5, 0x96, 0xC1, 0x90, 0xBF, 0x97, 0xC1, 0x27, 0x14, 0x2A, 0x0A, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xC1, 0x26, 0xF8, 0x20, 0x08, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xC1, 0x26, 0xF8, 0x96, 0xCF, 0x2A, 0x83, 0x7E, 0xF5, 0x93, 0xD6, 0xBF, 0xD0, 0xC0, 0xD7, 0xBF, 0x36, 0xBD, 0xF1, 0x9F, 0x33, 0xC0, 0x30, 0x8D, 0x02, 0x20, 0x91, 0xBD, 0xF2, 0x6C, 0xBD, 0xF2, 0xBC, 0xCE, 0x00, 0xBA, 0x7E, 0xEF, 0x7D, 0xD6, 0xC1, 0x58, 0x58, 0xDB, 0xC1, 0x58, 0x80, 0x30, 0x1B, 0x97, 0xC1, 0x20, 0x9E, 0x9B, 0x3E, 0xBC, 0x1F, 0xFD, 0x9E, 0x6E, 0x6B, 0x27, 0xFD, 0x9E, 0x6E, 0x6B, 0x28, 0x00, 0xCE, 0xE1, 0xB6, 0x8D, 0x0C, 0xDC, 0xE2, 0xDD, 0xCA, 0xC6, 0x90, 0x0D, 0xBD, 0xF2, 0xC7, 0x8D, 0x03, 0x7E, 0xE7, 0xA8, 0xCE, 0x02, 0xAF, 0x86, 0x20, 0xD6, 0xCE, 0x2A, 0x02, 0x86, 0x2D, 0xA7, 0x00, 0x97, 0xCE, 0xDF, 0xDE, 0x08, 0x86, 0x30, 0xD6, 0xC9, 0x26, 0x03, 0x7E, 0xF5, 0x1C, 0x4F, 0xC1, 0x80, 0x22, 0x08, 0xCE, 0xF4, 0x0D, 0xBD, 0xF0, 0xEF, 0x86, 0xF7, 0x97, 0xBF, 0xCE, 0xF4, 0x08, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xCE, 0xF4, 0x03, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xBF, 0x20, 0xF0, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xBF, 0x20, 0xE0, 0xBD, 0xEF, 0x6D, 0xBD, 0xF3, 0x0B, 0xC6, 0x01, 0x96, 0xBF, 0x8B, 0x0A, 0x2B, 0x08, 0x81, 0x0B, 0x24, 0x04, 0x4A, 0x16, 0x86, 0x02, 0x4A, 0x4A, 0x97, 0xC1, 0xD7, 0xBF, 0x2E, 0x11, 0xDE, 0xDE, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0x5D, 0x27, 0x05, 0x86, 0x30, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xCE, 0xF5, 0x29, 0xC6, 0x80, 0x96, 0xCD, 0xAB, 0x03, 0x97, 0xCD, 0x96, 0xCC, 0xA9, 0x02, 0x97, 0xCC, 0x96, 0xCB, 0xA9, 0x01, 0x97, 0xCB, 0x96, 0xCA, 0xA9, 0x00, 0x97, 0xCA, 0x5C, 0x56, 0x59, 0x28, 0xE3, 0x24, 0x03, 0xC0, 0x0B, 0x50, 0xCB, 0x2F, 0x08, 0x08, 0x08, 0x08, 0xDF, 0xB3, 0xDE, 0xDE, 0x08, 0x17, 0x84, 0x7F, 0xA7, 0x00, 0x7A, 0x00, 0xBF, 0x26, 0x05, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xDE, 0xB3, 0x53, 0xC4, 0x80, 0x8C, 0xF5, 0x4D, 0x26, 0xB8, 0xDE, 0xDE, 0xA6, 0x00, 0x09, 0x81, 0x30, 0x27, 0xF9, 0x81, 0x2E, 0x27, 0x01, 0x08, 0x86, 0x2B, 0xD6, 0xC1, 0x27, 0x1E, 0x2A, 0x03, 0x86, 0x2D, 0x50, 0xA7, 0x02, 0x86, 0x45, 0xA7, 0x01, 0x86, 0x2F, 0x4C, 0xC0, 0x0A, 0x24, 0xFB, 0xCB, 0x3A, 0xA7, 0x03, 0xE7, 0x04, 0x6F, 0x05, 0x20, 0x04, 0xA7, 0x00, 0x6F, 0x01, 0xCE, 0x02, 0xAF, 0x39, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x0A, 0x1F, 0x00, 0x00, 0x98, 0x96, 0x80, 0xFF, 0xF0, 0xBD, 0xC0, 0x00, 0x01, 0x86, 0xA0, 0xFF, 0xFF, 0xD8, 0xF0, 0x00, 0x00, 0x03, 0xE8, 0xFF, 0xFF, 0xFF, 0x9C, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xF2, 0x9F, 0xCE, 0xF5, 0x24, 0xBD, 0xF2, 0x51, 0x27, 0x71, 0x4D, 0x26, 0x0A, 0x96, 0xCE, 0x2A, 0x03, 0x7E, 0xF2, 0x43, 0x7E, 0xEF, 0xF5, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0x5F, 0x96, 0xDB, 0x2A, 0x10, 0xBD, 0xF3, 0x35, 0xCE, 0x00, 0xC4, 0x96, 0xDB, 0xBD, 0xF2, 0xE3, 0x26, 0x03, 0x43, 0xD6, 0x80, 0xBD, 0xF2, 0x8D, 0x37, 0xBD, 0xF0, 0xB9, 0xCE, 0x00, 0xC4, 0xBD, 0xF0, 0xEF, 0x8D, 0x3A, 0x32, 0x46, 0x24, 0x90, 0x96, 0xC9, 0x27, 0x03, 0x73, 0x00, 0xCE, 0x39, 0x81, 0x38, 0xAA, 0x3B, 0x29, 0x07, 0x71, 0x34, 0x58, 0x3E, 0x56, 0x74, 0x16, 0x7E, 0xB3, 0x1B, 0x77, 0x2F, 0xEE, 0xE3, 0x85, 0x7A, 0x1D, 0x84, 0x1C, 0x2A, 0x7C, 0x63, 0x59, 0x58, 0x0A, 0x7E, 0x75, 0xFD, 0xE7, 0xC6, 0x80, 0x31, 0x72, 0x18, 0x10, 0x81, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xF5, 0x9B, 0x8D, 0x36, 0xBD, 0xF2, 0x6C, 0x96, 0xC9, 0x81, 0x88, 0x25, 0x03, 0x7E, 0xF1, 0x90, 0xBD, 0xF3, 0x35, 0x96, 0x80, 0x8B, 0x81, 0x27, 0xF4, 0x4A, 0x36, 0xCE, 0x00, 0xBA, 0xBD, 0xEF, 0x72, 0xCE, 0xF5, 0xA0, 0x8D, 0x17, 0x7F, 0x00, 0xDC, 0x32, 0xBD, 0xF1, 0x79, 0x39, 0xDF, 0xDE, 0xBD, 0xF2, 0x6C, 0x8D, 0x05, 0x8D, 0x08, 0xCE, 0x00, 0xBA, 0x7E, 0xF0, 0xEF, 0xDF, 0xDE, 0xBD, 0xF2, 0x67, 0xDE, 0xDE, 0xE6, 0x00, 0xD7, 0xCF, 0x08, 0xDF, 0xDE, 0x8D, 0xED, 0xDE, 0xDE, 0xC6, 0x05, 0x3A, 0xDF, 0xDE, 0xBD, 0xEF, 0x7D, 0xCE, 0x00, 0xBF, 0x7A, 0x00, 0xCF, 0x26, 0xEC, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x21, 0x27, 0x15, 0x8D, 0x10, 0xBD, 0xF2, 0x6C, 0x8D, 0x0E, 0xCE, 0x00, 0xBA, 0x8D, 0xC7, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x7D, 0x7E, 0xF3, 0x35, 0xFE, 0x01, 0x18, 0xDF, 0xCA, 0xFE, 0x01, 0x1A, 0xDF, 0xCC, 0xFE, 0xF6, 0x82, 0xDF, 0xD7, 0xFE, 0xF6, 0x84, 0xDF, 0xD9, 0xBD, 0xF0, 0xF6, 0xFC, 0x01, 0x54, 0xC3, 0x65, 0x8B, 0xFD, 0x01, 0x1A, 0xDD, 0xCC, 0xFC, 0x01, 0x52, 0xC9, 0xB0, 0x89, 0x05, 0xFD, 0x01, 0x18, 0xDD, 0xCA, 0x7F, 0x00, 0xCE, 0x86, 0x80, 0x97, 0xC9, 0x96, 0x8F, 0x97, 0xDD, 0x7E, 0xEF, 0xD6, 0x40, 0xE6, 0x4D, 0xAB, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x9F, 0xCE, 0xF6, 0xFB, 0xD6, 0xDB, 0xBD, 0xF1, 0xC0, 0xBD, 0xF2, 0x9F, 0xBD, 0xF3, 0x35, 0x7F, 0x00, 0xDC, 0x96, 0xD6, 0xD6, 0xC9, 0xBD, 0xEF, 0x75, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x72, 0x96, 0xCE, 0x36, 0x2A, 0x0A, 0xBD, 0xEF, 0x6D, 0x96, 0xCE, 0x2B, 0x06, 0x73, 0x00, 0x88, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x7D, 0x32, 0x4D, 0x2A, 0x03, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x05, 0x7E, 0xF5, 0xF8, 0xBD, 0xF2, 0x6C, 0x7F, 0x00, 0x88, 0x8D, 0xB2, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0xCE, 0x00, 0xBA, 0xBD, 0xF2, 0x51, 0x7F, 0x00, 0xCE, 0x96, 0x88, 0x8D, 0x06, 0xCE, 0x00, 0xC4, 0x7E, 0xF1, 0xC6, 0x36, 0x20, 0xC6, 0x81, 0x49, 0x0F, 0xDA, 0xA2, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x05, 0x84, 0xE6, 0x1A, 0x2D, 0x1B, 0x86, 0x28, 0x07, 0xFB, 0xF8, 0x87, 0x99, 0x68, 0x89, 0x01, 0x87, 0x23, 0x35, 0xDF, 0xE1, 0x86, 0xA5, 0x5D, 0xE7, 0x28, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0xA1, 0x43, 0x49, 0x93, 0x01, 0x82, 0x20, 0x58, 0x83, 0xCD, 0x01, 0x7E, 0xC0, 0x06, 0x5F, 0xD7, 0xE8, 0xBD, 0xD8, 0xBB, 0xBD, 0xFB, 0xD4, 0xBD, 0xC3, 0x84, 0xCC, 0x3A, 0x43, 0xDD, 0xFB, 0xC6, 0x08, 0xD7, 0x08, 0x7E, 0xE2, 0x71, 0x20, 0xE2, 0x4D, 0x45, 0x52, 0x47, 0x49, 0x4E, 0x47, 0x20, 0x00, 0x08, 0x8C, 0xBE, 0xFE, 0x24, 0x0A, 0xA7, 0x02, 0xE9, 0x02, 0xE7, 0x02, 0xEA, 0x02, 0x27, 0xF0, 0xFF, 0x01, 0x50, 0xDF, 0xA1, 0xDF, 0x9D, 0xDC, 0x9D, 0x83, 0x00, 0xC8, 0xDD, 0x9B, 0x9E, 0x9B, 0xCE, 0xF7, 0xCF, 0xCC, 0x00, 0xEB, 0x8D, 0x30, 0xCE, 0xF7, 0xDE, 0xCC, 0x01, 0x00, 0x8D, 0x28, 0x86, 0x39, 0xCE, 0x01, 0x85, 0xA7, 0x00, 0x08, 0x8C, 0x01, 0xAF, 0x26, 0xF8, 0x63, 0x00, 0xCC, 0x02, 0x09, 0xBD, 0xD8, 0x2A, 0xBD, 0xE3, 0xCF, 0xBD, 0xFB, 0xD4, 0xCE, 0xF8, 0x0F, 0xBD, 0xE7, 0xA8, 0x86, 0x55, 0x97, 0xEA, 0x7E, 0xF7, 0x3B, 0xDD, 0xBF, 0xE6, 0x00, 0x08, 0xA6, 0x00, 0xDF, 0xC1, 0xDE, 0xBF, 0xA7, 0x00, 0x08, 0xDF, 0xBF, 0xDE, 0xC1, 0x5A, 0x26, 0xEF, 0x39, 0x01, 0x96, 0x7E, 0xB7, 0xFF, 0xF0, 0xBD, 0xE3, 0xEE, 0x7E, 0xF7, 0x32, 0x0E, 0x7C, 0x00, 0xF5, 0x26, 0x03, 0x7C, 0x00, 0xF4, 0xB6, 0x00, 0x00, 0x7E, 0xE1, 0xC8, 0x31, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xC3, 0xA4, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xEC, 0x2E, 0x4F, 0xC7, 0x52, 0x59, 0xFF, 0x04, 0x5E, 0xEC, 0x2E, 0xF7, 0xC3, 0x00, 0x76, 0x00, 0x01, 0x10, 0x70, 0x84, 0x00, 0x01, 0x15, 0x1A, 0x0B, 0x00, 0x80, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x32, 0x2E, 0x31, 0x56, 0x0D, 0x42, 0x55, 0x49, 0x4C, 0x54, 0x20, 0x4D, 0x41, 0x52, 0x20, 0x31, 0x38, 0x2C, 0x20, 0x32, 0x30, 0x31, 0x31, 0x0D, 0x0D, 0x00, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x0D, 0x00, 0x7A, 0x01, 0x2B, 0x26, 0x1A, 0xB6, 0x01, 0x82, 0x88, 0x0F, 0xB7, 0x01, 0x82, 0x8A, 0x80, 0x36, 0xBD, 0xE0, 0x62, 0x32, 0xC6, 0x1E, 0x84, 0x0F, 0x27, 0x02, 0xC6, 0x32, 0xF7, 0x01, 0x2B, 0xCE, 0x03, 0xFA, 0x09, 0x26, 0xFD, 0x39, 0x7E, 0xC4, 0xFF, 0x3C, 0x37, 0x8D, 0xD3, 0x8D, 0x15, 0x27, 0xFA, 0x36, 0x86, 0x60, 0xBD, 0xE0, 0x62, 0x32, 0x20, 0x52, 0x4F, 0x8D, 0x54, 0x26, 0x05, 0x8D, 0x64, 0x4C, 0x27, 0x4A, 0xBD, 0x01, 0xA9, 0x3C, 0x37, 0x86, 0xFB, 0x8D, 0x44, 0x16, 0x27, 0x03, 0xF8, 0x01, 0x3B, 0xB7, 0x01, 0x3B, 0x5D, 0x27, 0x06, 0x8D, 0x42, 0xBD, 0xC4, 0xED, 0x01, 0xCE, 0x01, 0x30, 0x5F, 0x5A, 0xF7, 0x01, 0x39, 0x59, 0x24, 0x1D, 0x7C, 0x01, 0x39, 0x8D, 0x34, 0x37, 0x16, 0x08, 0xA8, 0x00, 0xA4, 0x00, 0xE7, 0x00, 0x33, 0x4D, 0x0D, 0x27, 0xEA, 0x36, 0x8D, 0x1D, 0x8D, 0x23, 0xA1, 0x00, 0x32, 0x26, 0x24, 0x4F, 0x8C, 0x86, 0x03, 0x4D, 0x33, 0x38, 0x39, 0x86, 0x7F, 0x97, 0x02, 0x96, 0x03, 0x43, 0x84, 0x02, 0x27, 0x02, 0x86, 0xFF, 0x39, 0xFE, 0x01, 0x1D, 0x7E, 0xF8, 0x61, 0xD7, 0x02, 0xB6, 0xBF, 0xFF, 0x8A, 0xC0, 0x39, 0xC6, 0xF8, 0xCB, 0x08, 0x44, 0x24, 0xFB, 0xFB, 0x01, 0x39, 0x86, 0xFE, 0x8D, 0xD8, 0xB7, 0x01, 0x3A, 0xBD, 0x01, 0xAC, 0x27, 0x11, 0xCE, 0xF9, 0x7C, 0xC1, 0x20, 0x26, 0x27, 0xB6, 0x01, 0x82, 0x8B, 0x10, 0xB7, 0x01, 0x82, 0x20, 0xB5, 0x17, 0x27, 0x05, 0xC1, 0x1A, 0x23, 0x1B, 0x8C, 0xC6, 0x1D, 0xCE, 0xF9, 0x39, 0x8D, 0xAE, 0x27, 0x0C, 0xCE, 0xF9, 0x4C, 0xC1, 0x20, 0x26, 0x05, 0x73, 0x01, 0x1C, 0x20, 0x98, 0x3A, 0xA6, 0x00, 0x20, 0x97, 0x8D, 0x99, 0xB8, 0x01, 0x1C, 0x26, 0x07, 0xB6, 0x01, 0x1C, 0x26, 0x07, 0xCA, 0x20, 0x17, 0x8A, 0x40, 0x20, 0x84, 0xCE, 0xF9, 0xAB, 0x3A, 0xA6, 0x00, 0x2A, 0xF6, 0xF6, 0x01, 0x82, 0xC4, 0x70, 0x1B, 0x20, 0xEE, 0x40, 0x0D, 0x20, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x2C, 0x2D, 0x2E, 0x2F, 0x13, 0x0D, 0x20, 0x00, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x3C, 0x3D, 0x3E, 0x3F, 0x88, 0x08, 0xB3, 0xB2, 0x82, 0x9B, 0x90, 0x84, 0xA3, 0x8A, 0x81, 0x9E, 0xBC, 0xBA, 0xB9, 0xA5, 0xC7, 0x15, 0x9C, 0x09, 0x8C, 0x80, 0xB5, 0x5E, 0xB1, 0x8F, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x20, 0x00, 0x8E, 0x93, 0x98, 0x97, 0x96, 0x94, 0x95, 0x9D, 0x86, 0x89, 0x92, 0xBB, 0x91, 0xB7, 0xB6, 0x89, 0x80, 0x82, 0x87, 0x8D, 0x86, 0x85, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x8F, 0x8C, 0x88, 0x8B, 0x55, 0x81, 0x8E, 0x83, 0x8A, 0x84, 0xBD, 0x01, 0x88, 0x3C, 0x37, 0x7E, 0xC4, 0xC6, 0x27, 0x4B, 0x16, 0x07, 0xBD, 0xDC, 0x21, 0xD6, 0x03, 0xC4, 0x04, 0x26, 0xFA, 0x8D, 0x2D, 0x5F, 0x8D, 0x2C, 0xC6, 0x08, 0x37, 0x5F, 0x44, 0x59, 0x8D, 0x24, 0x33, 0x5A, 0x26, 0xF6, 0x8D, 0x1C, 0x32, 0x06, 0x32, 0x81, 0x0D, 0x27, 0x0B, 0x7C, 0x01, 0x2A, 0xF6, 0x01, 0x2A, 0xF1, 0x01, 0x29, 0x25, 0x07, 0x7F, 0x01, 0x2A, 0x8D, 0x10, 0x8D, 0x0E, 0x33, 0x38, 0x39, 0xC6, 0x01, 0xD7, 0x03, 0x8D, 0x00, 0xFE, 0x01, 0x23, 0x20, 0x03, 0xFE, 0x01, 0x25, 0x7E, 0xF8, 0x61, 0x7E, 0xE1, 0x07, 0x81, 0x08, 0x26, 0x0C, 0x8C, 0x40, 0x00, 0x27, 0x50, 0x86, 0x60, 0x09, 0xA7, 0x00, 0x20, 0x2E, 0x81, 0x0D, 0x26, 0x14, 0xF6, 0x01, 0x81, 0x86, 0x60, 0xA7, 0x00, 0x08, 0x5C, 0xC5, 0x1F, 0x26, 0xF8, 0x20, 0x1B, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 0x20, 0x25, 0x2D, 0x4D, 0x2B, 0x0C, 0x81, 0x40, 0x25, 0x06, 0x81, 0x60, 0x25, 0x04, 0x84, 0xDF, 0x88, 0x40, 0xA7, 0x00, 0x08, 0xFF, 0x01, 0x80, 0x8C, 0x42, 0x00, 0x26, 0x13, 0xCE, 0x40, 0x00, 0xEC, 0x20, 0xED, 0x00, 0x08, 0x08, 0x8C, 0x41, 0xE0, 0x26, 0xF5, 0xC6, 0x60, 0xBD, 0xFB, 0xD9, 0x7E, 0xE1, 0x18, 0x39, 0xBD, 0x01, 0x8B, 0x3C, 0x37, 0x36, 0x96, 0xE8, 0x27, 0x08, 0xFE, 0x01, 0x27, 0xFC, 0x01, 0x29, 0x20, 0x0A, 0xF6, 0x01, 0x81, 0xC4, 0x1F, 0xCE, 0x10, 0x10, 0x86, 0x20, 0xDF, 0xE4, 0xD7, 0xE6, 0x97, 0xE7, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xFB, 0xD4, 0x7E, 0xD8, 0xF5, 0x7F, 0x01, 0x7F, 0xCE, 0x01, 0xB2, 0xC6, 0x01, 0xBD, 0xF8, 0x65, 0x7D, 0x00, 0xE9, 0x26, 0x4D, 0x7D, 0x00, 0xE8, 0x26, 0x44, 0x4D, 0x2A, 0x1E, 0x7D, 0x01, 0x3A, 0x27, 0x19, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x08, 0x3C, 0x36, 0x84, 0x7F, 0xDE, 0x89, 0x8D, 0x48, 0xDF, 0x89, 0x32, 0x38, 0x4D, 0x2A, 0xEE, 0xDE, 0x89, 0x20, 0xD2, 0x81, 0x0C, 0x27, 0xC0, 0x81, 0x08, 0x26, 0x08, 0x5A, 0x27, 0xBF, 0x09, 0x8D, 0x37, 0x20, 0xC2, 0x81, 0x15, 0x26, 0x0A, 0x5A, 0x27, 0xB3, 0x86, 0x08, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x81, 0x03, 0x0D, 0x27, 0x05, 0x81, 0x0D, 0x26, 0x0E, 0x4F, 0x07, 0x36, 0xBD, 0xE7, 0x66, 0x6F, 0x00, 0xCE, 0x01, 0xB1, 0x32, 0x06, 0x39, 0x81, 0x20, 0x25, 0x99, 0x8D, 0x02, 0x20, 0x95, 0xC1, 0xFA, 0x24, 0x82, 0xA7, 0x00, 0x08, 0x5C, 0x7E, 0xF9, 0xC6, 0x8D, 0x43, 0x3C, 0xBD, 0xE0, 0x9D, 0x38, 0xC1, 0x08, 0x22, 0x37, 0x5A, 0x2B, 0x05, 0x86, 0x10, 0x3D, 0x20, 0x08, 0xD6, 0xE1, 0x2A, 0x03, 0xC4, 0x70, 0x21, 0x5F, 0xD7, 0x82, 0x8D, 0x77, 0x96, 0xE1, 0x2B, 0x01, 0x4F, 0x84, 0x0F, 0xBA, 0x01, 0x3C, 0x9A, 0x82, 0x8A, 0x80, 0x7E, 0xE0, 0x88, 0x8D, 0x13, 0x8D, 0x62, 0xBD, 0xE0, 0xA2, 0x2A, 0xF2, 0x73, 0x01, 0x3C, 0xF4, 0x01, 0x3C, 0x7E, 0xE0, 0x89, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2C, 0xBD, 0xEF, 0x0D, 0xC1, 0x3F, 0x22, 0xF3, 0x37, 0xBD, 0xEF, 0x47, 0xC1, 0x1F, 0x22, 0xEB, 0x37, 0x54, 0x86, 0x20, 0x3D, 0xC3, 0x40, 0x00, 0x37, 0x36, 0x30, 0xE6, 0x03, 0x54, 0x38, 0x3A, 0x32, 0x33, 0x84, 0x01, 0x56, 0x49, 0xC6, 0x10, 0x54, 0x4A, 0x2A, 0xFC, 0xF7, 0x01, 0x3C, 0x39, 0x8D, 0xCF, 0xBD, 0xE0, 0x98, 0x96, 0xE1, 0x2A, 0x0E, 0xB4, 0x01, 0x3C, 0x27, 0x08, 0xD6, 0xE1, 0x54, 0x54, 0x54, 0x54, 0xC4, 0x07, 0x5C, 0x4F, 0x5D, 0x2A, 0x01, 0x43, 0xBD, 0xEC, 0xE3, 0x7E, 0xEA, 0x29, 0x01, 0x27, 0x13, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x1D, 0x5D, 0x27, 0x06, 0x5A, 0x86, 0x10, 0x3D, 0xCA, 0x0F, 0xCA, 0x80, 0x8C, 0xC6, 0x60, 0x7E, 0xE1, 0x2A, 0xFF, 0x01, 0x80, 0xE7, 0x00, 0x08, 0x8C, 0x42, 0x00, 0x26, 0xF8, 0x39, 0x8D, 0xED, 0xCE, 0xF8, 0x33, 0x7E, 0xE7, 0xA8, 0xB6, 0x01, 0x7F, 0x26, 0x03, 0xBD, 0xF8, 0x83, 0x7F, 0x01, 0x7F, 0x97, 0xCD, 0x27, 0x03, 0x7E, 0xDF, 0xF7, 0x97, 0xD0, 0x7E, 0xEE, 0x9D, 0x27, 0x06, 0xBD, 0xEF, 0x4C, 0xFF, 0x01, 0x1F, 0xCE, 0xC8, 0x4A, 0x6E, 0x00, 0xDE, 0x99, 0x3C, 0xBD, 0xEB, 0x1B, 0xBD, 0xEA, 0x29, 0xDF, 0x89, 0x38, 0xDC, 0x89, 0x9C, 0x99, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x7E, 0xDC, 0xA8, 0xBD, 0xEB, 0xBA, 0x83, 0x01, 0xFF, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xC3, 0x41, 0xFF, 0xFD, 0x01, 0x80, 0x39, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xBD, 0xCB, 0x05, 0x26, 0x05, 0xBD, 0xFD, 0xDB, 0xC6, 0x04, 0xF7, 0x01, 0x67, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xFD, 0x01, 0x6C, 0x8D, 0x2E, 0xFE, 0x01, 0x6F, 0xFF, 0x01, 0x78, 0x86, 0xFF, 0xB7, 0x01, 0x76, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x78, 0x23, 0x0E, 0x4D, 0x26, 0x07, 0xC1, 0xFF, 0x27, 0x03, 0xF7, 0x01, 0x76, 0x8D, 0x44, 0x20, 0xE2, 0x70, 0x01, 0x75, 0x7F, 0x01, 0x76, 0x8D, 0x3A, 0x86, 0x01, 0x97, 0x03, 0x39, 0xBD, 0xFD, 0x29, 0xCE, 0x01, 0x5F, 0xFF, 0x01, 0x78, 0xDF, 0xBF, 0x6F, 0x09, 0x6F, 0x0A, 0xCE, 0x01, 0x57, 0xC6, 0x08, 0xBD, 0xF7, 0xB2, 0x7F, 0x01, 0x75, 0x86, 0x0F, 0xB7, 0x01, 0x76, 0x8D, 0x0B, 0x8D, 0x12, 0x7C, 0x01, 0x75, 0xCE, 0x00, 0x00, 0xBD, 0xF8, 0x61, 0xFE, 0x01, 0x2F, 0x8D, 0x45, 0x09, 0x26, 0xFB, 0x39, 0x01, 0x0F, 0xF6, 0x01, 0x76, 0xF7, 0x01, 0x7B, 0xB6, 0x01, 0x76, 0x27, 0x09, 0xFE, 0x01, 0x78, 0xAB, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0xBB, 0x01, 0x75, 0xB7, 0x01, 0x7A, 0xFE, 0x01, 0x78, 0x8D, 0x20, 0x86, 0x3C, 0x8D, 0x1E, 0xB6, 0x01, 0x75, 0x8D, 0x19, 0xB6, 0x01, 0x76, 0x8D, 0x14, 0x4D, 0x27, 0x0A, 0xA6, 0x00, 0x08, 0x8D, 0x0C, 0x7A, 0x01, 0x7B, 0x26, 0xF6, 0xB6, 0x01, 0x7A, 0x8D, 0x02, 0x86, 0x55, 0x3C, 0x36, 0x36, 0xC6, 0x08, 0x30, 0x64, 0x00, 0xCE, 0x00, 0x20, 0x25, 0x03, 0xCE, 0x00, 0x40, 0x3C, 0x86, 0x01, 0x97, 0x03, 0x09, 0x26, 0xFD, 0x4F, 0x97, 0x03, 0x38, 0x09, 0x26, 0xFD, 0x5A, 0x26, 0xE3, 0x32, 0x32, 0x38, 0x39, 0x8D, 0x08, 0xBD, 0x00, 0xF3, 0x27, 0xF8, 0x7E, 0xEA, 0x3C, 0xCE, 0x01, 0x56, 0x6F, 0x00, 0x86, 0x20, 0x08, 0xA7, 0x00, 0x8C, 0x01, 0x5F, 0x26, 0xF8, 0x9D, 0xF3, 0x0F, 0x27, 0xE1, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0xF7, 0x01, 0x56, 0x27, 0xD6, 0x37, 0xCC, 0x01, 0x57, 0xDD, 0xBF, 0x33, 0x7E, 0xF7, 0xB2, 0x81, 0xA9, 0x26, 0x03, 0x7E, 0xFD, 0xB1, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xFE, 0x06, 0x4F, 0x8D, 0x22, 0xBD, 0xE3, 0xCF, 0x73, 0x01, 0x6E, 0xFC, 0x01, 0x6C, 0xD3, 0x93, 0xBD, 0xE2, 0x1E, 0xDE, 0x93, 0xFF, 0x01, 0x78, 0x8D, 0x4E, 0x2A, 0xF9, 0x4F, 0x97, 0x71, 0x97, 0x72, 0x7E, 0xC8, 0x61, 0x7E, 0xE2, 0xEB, 0x36, 0x8D, 0x10, 0x32, 0x7D, 0x01, 0x74, 0x26, 0x37, 0xB1, 0x01, 0x67, 0x27, 0x32, 0xC6, 0x24, 0x7E, 0xE2, 0x38, 0x8D, 0x8F, 0xBD, 0xFE, 0x37, 0x26, 0x03, 0x7E, 0xFF, 0x4E, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x8D, 0x28, 0x86, 0x04, 0x8D, 0xD8, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xB3, 0x01, 0x6C, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xFE, 0x01, 0x6F, 0xFF, 0x01, 0x78, 0x8D, 0x03, 0x2A, 0xF9, 0x39, 0xBD, 0xFE, 0xB6, 0x26, 0xD7, 0xB6, 0x01, 0x75, 0x27, 0xD2, 0x39, 0xBD, 0x00, 0xEB, 0xC6, 0x01, 0xD7, 0x86, 0xBD, 0xEB, 0x1B, 0x7F, 0x00, 0x86, 0xBD, 0xE9, 0x0E, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0xFF, 0x01, 0x71, 0xDE, 0x89, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0xFF, 0x01, 0x6F, 0xBD, 0x00, 0xF3, 0x27, 0xCC, 0x7E, 0xEA, 0x2F, 0xBD, 0x00, 0xEB, 0x86, 0x02, 0x8D, 0x82, 0xCE, 0x00, 0x00, 0xBD, 0x00, 0xF3, 0x27, 0x06, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x89, 0xFC, 0x01, 0x6A, 0xD3, 0x89, 0xFD, 0x01, 0x1F, 0xFC, 0x01, 0x6C, 0xD3, 0x89, 0x37, 0x36, 0x38, 0x20, 0x99, 0xBD, 0xFD, 0xA2, 0x8D, 0x56, 0x26, 0x9D, 0x39, 0x96, 0xE2, 0x4C, 0x26, 0x0A, 0xBD, 0xFB, 0xD4, 0x86, 0x53, 0x8D, 0x3E, 0xBD, 0xE7, 0xB9, 0x8D, 0x62, 0xBA, 0x01, 0x75, 0x26, 0x33, 0x5F, 0x37, 0xCE, 0x01, 0x5F, 0x3A, 0xA6, 0x00, 0xDE, 0xE2, 0x08, 0x26, 0x02, 0x8D, 0x25, 0xCE, 0x01, 0x57, 0x3A, 0xA0, 0x00, 0x30, 0xAA, 0x00, 0xA7, 0x00, 0x5C, 0xC1, 0x08, 0x26, 0xE3, 0x32, 0x4D, 0x27, 0x0B, 0x7D, 0x01, 0x56, 0x27, 0x06, 0x8D, 0x10, 0x26, 0x07, 0x20, 0xBC, 0xC6, 0x46, 0x8D, 0x22, 0x4F, 0x39, 0x7F, 0x00, 0xE8, 0x7E, 0xF9, 0xC6, 0xBD, 0xFF, 0x4E, 0x86, 0xFF, 0x16, 0x8D, 0x2A, 0x26, 0x07, 0xB6, 0x01, 0x75, 0x40, 0x2B, 0xF3, 0x4A, 0xB7, 0x01, 0x7B, 0x39, 0xBD, 0xE0, 0x67, 0xC8, 0x40, 0x96, 0xE2, 0x4C, 0x26, 0x03, 0xBD, 0xE0, 0x6C, 0x39, 0xBD, 0xFF, 0x4E, 0xCE, 0x01, 0x5F, 0xFF, 0x01, 0x78, 0x86, 0x0F, 0x8C, 0x86, 0xFF, 0x5F, 0x36, 0xF7, 0x01, 0x73, 0x01, 0x0F, 0x8D, 0xDB, 0xFE, 0x01, 0x78, 0x4F, 0x8D, 0x5B, 0x46, 0x81, 0x3C, 0x26, 0xF9, 0x8D, 0x46, 0xB7, 0x01, 0x75, 0x8D, 0x41, 0xB7, 0x01, 0x76, 0x33, 0x11, 0x22, 0x31, 0xBB, 0x01, 0x75, 0xB7, 0x01, 0x7A, 0xB6, 0x01, 0x76, 0xB7, 0x01, 0x7B, 0x27, 0x19, 0x8D, 0x2A, 0x7D, 0x01, 0x73, 0x26, 0x07, 0xA7, 0x00, 0xA1, 0x00, 0x26, 0x19, 0x08, 0xBB, 0x01, 0x7A, 0xB7, 0x01, 0x7A, 0x7A, 0x01, 0x7B, 0x26, 0xE7, 0x8D, 0x11, 0xB0, 0x01, 0x7A, 0x27, 0x08, 0x86, 0x01, 0x8C, 0x86, 0x03, 0x8C, 0x86, 0x02, 0xB7, 0x01, 0x7B, 0x39, 0x86, 0x08, 0xB7, 0x01, 0x7C, 0x8D, 0x07, 0x46, 0x7A, 0x01, 0x7C, 0x26, 0xF8, 0x39, 0x8D, 0x08, 0xF6, 0x01, 0x7D, 0x5A, 0xF1, 0x01, 0x2C, 0x39, 0x7F, 0x01, 0x7D, 0x7D, 0x01, 0x7E, 0x26, 0x11, 0x8D, 0x07, 0x26, 0xFC, 0x8D, 0x03, 0x27, 0xFC, 0x39, 0x7C, 0x01, 0x7D, 0xD6, 0x03, 0xC4, 0x10, 0x39, 0x8D, 0xF6, 0x27, 0xFC, 0x8D, 0xF2, 0x26, 0xFC, 0x39, 0x01, 0x0F, 0x7F, 0x01, 0x7C, 0x8D, 0xDF, 0x8D, 0x2D, 0x22, 0x12, 0x8D, 0x22, 0x25, 0x12, 0x7A, 0x01, 0x7C, 0xB6, 0x01, 0x7C, 0x81, 0xA0, 0x26, 0xEC, 0xB7, 0x01, 0x7E, 0x39, 0x8D, 0x10, 0x22, 0xE6, 0x8D, 0x13, 0x25, 0xE6, 0x7C, 0x01, 0x7C, 0xB6, 0x01, 0x7C, 0x80, 0x60, 0x20, 0xE8, 0x7F, 0x01, 0x7D, 0x8D, 0xB6, 0x20, 0x05, 0x7F, 0x01, 0x7D, 0x8D, 0xC0, 0xF6, 0x01, 0x7D, 0xF1, 0x01, 0x2D, 0x22, 0x04, 0xF1, 0x01, 0x2E, 0x39, 0x7F, 0x01, 0x7C, 0x39, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5D, 0x26, 0x37, 0x7E, 0xEC, 0x2E, 0x8D, 0xF5, 0x37, 0x8D, 0xEF, 0x32, 0x36, 0x37, 0x07, 0x36, 0x0F, 0x96, 0x5C, 0x01, 0x01, 0xDE, 0x09, 0xD6, 0x08, 0xDF, 0x0B, 0x88, 0x80, 0xB7, 0xBF, 0xFF, 0x30, 0xE6, 0x02, 0x08, 0x08, 0x5C, 0x26, 0xFB, 0xD6, 0x08, 0x58, 0x2A, 0xEE, 0x30, 0x6A, 0x01, 0x26, 0xE3, 0x96, 0x5C, 0xB7, 0xBF, 0xFF, 0x32, 0x38, 0x06, 0x39, 0x45, 0x58, 0xF8, 0x83, 0xF9, 0xC6, 0xFF, 0x4E, 0xFE, 0xB9, 0xFC, 0xC0, 0xFF, 0xAB, 0xFC, 0xB7, 0xEC, 0xE3, 0xEB, 0xC7, 0x00, 0xC9, 0x01, 0x00, 0x01, 0x03, 0x01, 0x06, 0x01, 0x09, 0x01, 0x0C, 0x01, 0x0F, 0x01, 0x12, 0xC0, 0x06];
//MC10.ROM = [0x0F, 0x8D, 0x00, 0x38, 0xC6, 0x15, 0x3A, 0x35, 0xCE, 0xC0, 0x00, 0x32, 0x33, 0xED, 0x00, 0x08, 0x08, 0x26, 0xF8, 0xFE, 0xFF, 0xFE, 0x6E, 0x00, 0xC9, 0x96, 0xC9, 0x2A, 0xFF, 0xFF, 0x0F, 0xCC, 0xFF, 0x01, 0xDD, 0x00, 0xDD, 0x02, 0x4F, 0x5F, 0xFD, 0xFF, 0xF0, 0x8E, 0x01, 0xF1, 0x86, 0xFB, 0xBD, 0xF8, 0xD0, 0x26, 0x21, 0x96, 0xEA, 0x81, 0x55, 0x26, 0x1B, 0xCE, 0xC0, 0x2B, 0xCC, 0x00, 0x16, 0x8D, 0x54, 0x73, 0xFF, 0xF1, 0xFE, 0x01, 0x21, 0x20, 0x04, 0x01, 0xFE, 0x42, 0x21, 0xA6, 0x00, 0x4A, 0x26, 0x02, 0x6E, 0x00, 0x7F, 0xFF, 0xF1, 0x8E, 0x42, 0xFF, 0xBF, 0xBF, 0xFF, 0x7F, 0x00, 0x7E, 0xBD, 0xFB, 0xD4, 0x21, 0x22, 0x73, 0xFF, 0xF1, 0x5F, 0xCE, 0x3F, 0xE0, 0xE7, 0x1F, 0x09, 0x26, 0xFB, 0xCE, 0xC0, 0xE9, 0x08, 0xEC, 0x00, 0xFD, 0x01, 0x80, 0x08, 0x08, 0xA6, 0x00, 0x27, 0xF4, 0x2B, 0x21, 0xBD, 0xF9, 0xC9, 0x20, 0xF4, 0x7C, 0xFF, 0xF0, 0x8D, 0x03, 0x7F, 0xFF, 0xF0, 0xCE, 0xC0, 0x00, 0xCC, 0x40, 0x00, 0x9F, 0x91, 0x35, 0x38, 0x3C, 0x38, 0x83, 0x00, 0x02, 0x22, 0xF8, 0x9E, 0x91, 0x39, 0x4F, 0x20, 0x0E, 0x97, 0x02, 0x0D, 0x4C, 0xF5, 0xBF, 0xFF, 0x27, 0x05, 0x79, 0x00, 0x02, 0x25, 0xF5, 0x81, 0x02, 0x2C, 0xEB, 0xCE, 0x40, 0x00, 0xC6, 0x80, 0xBD, 0xFB, 0xD9, 0x4D, 0x27, 0x15, 0x4A, 0x27, 0x1F, 0xC6, 0x02, 0xF7, 0xFF, 0xF1, 0x8D, 0xBA, 0x7C, 0xFF, 0xF1, 0xCE, 0xC0, 0x33, 0xFF, 0x01, 0x21, 0x20, 0x1F, 0xCE, 0x4C, 0x00, 0xDF, 0x6E, 0xCE, 0x41, 0xFD, 0xCC, 0x05, 0x00, 0x20, 0x0B, 0xCE, 0x02, 0xC1, 0xDF, 0x6E, 0xCE, 0x00, 0xFD, 0xCC, 0x08, 0x02, 0x97, 0x5D, 0xD7, 0x7E, 0xF7, 0xFF, 0xF0, 0xCC, 0xFF, 0x00, 0xF7, 0xBF, 0xFF, 0x7E, 0xF7, 0x55, 0x40, 0x0A, 0xA9, 0x32, 0x30, 0x31, 0x31, 0x20, 0x41, 0x54, 0x4B, 0x00, 0x40, 0x83, 0x5B, 0x30, 0x5D, 0x20, 0x20, 0x4D, 0x49, 0x43, 0x52, 0x4F, 0x43, 0x4F, 0x4C, 0x4F, 0x52, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x00, 0x40, 0xA3, 0x5B, 0x31, 0x5D, 0x20, 0x20, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x00, 0x40, 0xC3, 0x5B, 0x32, 0x5D, 0x20, 0x20, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x28, 0x4C, 0x41, 0x52, 0x47, 0x45, 0x29, 0x00, 0x41, 0xE4, 0x44, 0x41, 0x52, 0x52, 0x45, 0x4E, 0x20, 0x41, 0x54, 0x4B, 0x49, 0x4E, 0x53, 0x4F, 0x4E, 0x20, 0x2D, 0x20, 0x32, 0x30, 0x31, 0x31, 0xFF, 0x46, 0x4F, 0xD2, 0x47, 0x4F, 0x54, 0xCF, 0x47, 0x4F, 0x53, 0x55, 0xC2, 0x52, 0x45, 0xCD, 0x49, 0xC6, 0x44, 0x41, 0x54, 0xC1, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x4F, 0xCE, 0x49, 0x4E, 0x50, 0x55, 0xD4, 0x45, 0x4E, 0xC4, 0x4E, 0x45, 0x58, 0xD4, 0x44, 0x49, 0xCD, 0x52, 0x45, 0x41, 0xC4, 0x4C, 0x45, 0xD4, 0x52, 0x55, 0xCE, 0x52, 0x45, 0x53, 0x54, 0x4F, 0x52, 0xC5, 0x52, 0x45, 0x54, 0x55, 0x52, 0xCE, 0x53, 0x54, 0x4F, 0xD0, 0x50, 0x4F, 0x4B, 0xC5, 0x43, 0x4F, 0x4E, 0xD4, 0x4C, 0x49, 0x53, 0xD4, 0x43, 0x4C, 0x45, 0x41, 0xD2, 0x4E, 0x45, 0xD7, 0x43, 0x4C, 0x4F, 0x41, 0xC4, 0x43, 0x53, 0x41, 0x56, 0xC5, 0x4C, 0x4C, 0x49, 0x53, 0xD4, 0x4C, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x53, 0x45, 0xD4, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x43, 0x4C, 0xD3, 0x53, 0x4F, 0x55, 0x4E, 0xC4, 0x45, 0x58, 0x45, 0xC3, 0x53, 0x4B, 0x49, 0x50, 0xC6, 0x54, 0x41, 0x42, 0xA8, 0x54, 0xCF, 0x54, 0x48, 0x45, 0xCE, 0x4E, 0x4F, 0xD4, 0x53, 0x54, 0x45, 0xD0, 0x4F, 0x46, 0xC6, 0xAB, 0xAD, 0xAA, 0xAF, 0xDE, 0x41, 0x4E, 0xC4, 0x4F, 0xD2, 0xBE, 0xBD, 0xBC, 0x53, 0x47, 0xCE, 0x49, 0x4E, 0xD4, 0x41, 0x42, 0xD3, 0x55, 0x53, 0xD2, 0x52, 0x4E, 0xC4, 0x53, 0x51, 0xD2, 0x4C, 0x4F, 0xC7, 0x45, 0x58, 0xD0, 0x53, 0x49, 0xCE, 0x43, 0x4F, 0xD3, 0x54, 0x41, 0xCE, 0x50, 0x45, 0x45, 0xCB, 0x4C, 0x45, 0xCE, 0x53, 0x54, 0x52, 0xA4, 0x56, 0x41, 0xCC, 0x41, 0x53, 0xC3, 0x43, 0x48, 0x52, 0xA4, 0x4C, 0x45, 0x46, 0x54, 0xA4, 0x52, 0x49, 0x47, 0x48, 0x54, 0xA4, 0x4D, 0x49, 0x44, 0xA4, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x56, 0x41, 0x52, 0x50, 0x54, 0xD2, 0x49, 0x4E, 0x4B, 0x45, 0x59, 0xA4, 0x4D, 0x45, 0xCD, 0x45, 0x4C, 0x53, 0xC5, 0x50, 0x43, 0x4C, 0xD3, 0x50, 0x53, 0x45, 0xD4, 0x50, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x4C, 0x49, 0x4E, 0xC5, 0x43, 0x49, 0x52, 0x43, 0x4C, 0xC5, 0x50, 0x41, 0x49, 0x4E, 0xD4, 0x44, 0x52, 0x41, 0xD7, 0x50, 0x4D, 0x4F, 0x44, 0xC5, 0x53, 0x43, 0x52, 0x45, 0x45, 0xCE, 0x43, 0x4F, 0x4C, 0x4F, 0xD2, 0x50, 0x43, 0x4F, 0x50, 0xD9, 0x50, 0x4C, 0x41, 0xD9, 0x4F, 0x50, 0x45, 0xCE, 0x43, 0x4C, 0x4F, 0x53, 0xC5, 0x46, 0x49, 0x4C, 0x45, 0xD3, 0x43, 0x48, 0x41, 0x49, 0xCE, 0x53, 0x57, 0x41, 0xD0, 0x57, 0x41, 0x49, 0xD4, 0x45, 0x52, 0x52, 0x4F, 0xD2, 0xA7, 0x44, 0x45, 0xC6, 0x4C, 0x4F, 0x41, 0xC4, 0x53, 0x41, 0x56, 0xC5, 0x4D, 0x45, 0x52, 0x47, 0xC5, 0x44, 0x49, 0xD2, 0x45, 0x44, 0x49, 0xD4, 0x52, 0x45, 0x4E, 0x55, 0xCD, 0x41, 0x55, 0x54, 0xCF, 0x44, 0x45, 0xCC, 0x54, 0x52, 0x4F, 0xCE, 0x54, 0x52, 0x4F, 0x46, 0xC6, 0x42, 0x52, 0x45, 0x41, 0xCB, 0x48, 0x45, 0x58, 0xA4, 0x45, 0x4F, 0xC6, 0x46, 0x49, 0xD8, 0x50, 0x4F, 0xD3, 0x53, 0x54, 0x52, 0x4D, 0x45, 0xCD, 0x41, 0x54, 0xCE, 0x50, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x53, 0x54, 0x52, 0x49, 0x4E, 0x47, 0xA4, 0x49, 0x4E, 0x53, 0x54, 0xD2, 0x4D, 0x49, 0x4E, 0x56, 0x41, 0xCC, 0x4D, 0x41, 0x58, 0x56, 0x41, 0xCC, 0x54, 0x49, 0x4D, 0x45, 0xD2, 0x45, 0x52, 0x52, 0xCC, 0x45, 0x52, 0x52, 0xCE, 0x00, 0xE6, 0x85, 0xD8, 0x0B, 0xD7, 0x5B, 0xD7, 0x5C, 0xD5, 0x31, 0xD2, 0x1F, 0xD3, 0xC4, 0xD0, 0x95, 0xD8, 0x43, 0xD8, 0x85, 0xD7, 0xDB, 0xD9, 0x27, 0xCE, 0x76, 0xC5, 0xE0, 0xC4, 0x9B, 0xC4, 0x09, 0xC7, 0x32, 0xDF, 0x02, 0xDC, 0x53, 0xDD, 0x9B, 0xE6, 0x85, 0xE0, 0x46, 0xC7, 0xA4, 0xCA, 0x77, 0xC7, 0x7C, 0xC6, 0x83, 0xDA, 0x6B, 0xCC, 0x45, 0xCC, 0x0B, 0xCE, 0x17, 0xDC, 0x08, 0xDC, 0x09, 0xDC, 0xD2, 0xC6, 0x3B, 0xDE, 0xC7, 0xDD, 0x7A, 0xDC, 0x81, 0xDE, 0x9D, 0xD7, 0x23, 0xDE, 0x35, 0xDD, 0xB0, 0xDE, 0xD7, 0xDE, 0xFD, 0xDC, 0xA6, 0xDC, 0xA3, 0xDC, 0xB3, 0xBD, 0xC4, 0x87, 0x8D, 0x5D, 0x8D, 0x34, 0xDD, 0x66, 0xD7, 0x68, 0xDD, 0x74, 0xDD, 0x76, 0xD7, 0x73, 0xC6, 0x80, 0xDD, 0x46, 0xC6, 0x60, 0xDD, 0x48, 0xCC, 0x8F, 0x02, 0xDD, 0x69, 0x86, 0x04, 0xDD, 0x6B, 0x39, 0xDC, 0x0B, 0xD3, 0xFB, 0x95, 0x08, 0xDD, 0x0B, 0xDC, 0xF9, 0x27, 0x11, 0xB3, 0x00, 0x3D, 0xDD, 0xF9, 0x22, 0x0F, 0x32, 0xBE, 0x00, 0x36, 0x06, 0x4F, 0x5F, 0xDD, 0xF9, 0x39, 0xDE, 0xFD, 0x08, 0xDF, 0xFD, 0x3B, 0x81, 0xDC, 0x27, 0x16, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE5, 0xBF, 0xDC, 0xA1, 0x93, 0x9B, 0x37, 0x36, 0x7E, 0xE5, 0xCE, 0xDE, 0x93, 0x6F, 0x00, 0x08, 0x8C, 0x9D, 0xEB, 0xCC, 0xFF, 0xFF, 0xDD, 0x78, 0xD7, 0x7A, 0x39, 0xBD, 0xE7, 0xAB, 0x33, 0x96, 0xE8, 0x2E, 0x03, 0x7E, 0xE7, 0x55, 0xBD, 0xE7, 0x66, 0x9D, 0xF3, 0x7E, 0xE7, 0x36, 0x96, 0xE8, 0x2E, 0x06, 0xBD, 0xE7, 0xB9, 0x5A, 0x26, 0xFA, 0x39, 0x8D, 0x7C, 0xBD, 0xEF, 0x0D, 0xC1, 0x0F, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xD7, 0x70, 0xDC, 0x93, 0xDD, 0xC1, 0x83, 0x00, 0x01, 0x93, 0x6E, 0xDD, 0xD7, 0x86, 0x82, 0xD6, 0x70, 0x3D, 0x05, 0x93, 0xD7, 0xDD, 0xD7, 0x27, 0x50, 0x2B, 0x0F, 0xDC, 0x99, 0xDD, 0xBD, 0xD3, 0xD7, 0xDD, 0xBB, 0x25, 0x45, 0xBD, 0xE1, 0xFE, 0x20, 0x0F, 0xD3, 0x93, 0xDD, 0xBF, 0xDC, 0x99, 0x93, 0x93, 0x9F, 0x91, 0xBD, 0xCE, 0x5D, 0x9E, 0x91, 0xCE, 0x00, 0x93, 0x8D, 0x25, 0x08, 0x08, 0x8C, 0x00, 0x9B, 0x26, 0xF7, 0xBD, 0xE2, 0xF3, 0xDD, 0xA7, 0xDE, 0x93, 0x09, 0xE7, 0x00, 0xD7, 0x71, 0xBD, 0xC6, 0xDE, 0x8D, 0x1F, 0xDE, 0xE2, 0x08, 0x27, 0x0E, 0xCE, 0x00, 0xF4, 0x8D, 0x03, 0xCE, 0x00, 0xAD, 0xEC, 0x00, 0xD3, 0xD7, 0xED, 0x00, 0x39, 0x7E, 0xE2, 0x36, 0x8D, 0x03, 0x7E, 0xE5, 0x7F, 0x86, 0xFF, 0x21, 0x4F, 0xD6, 0x70, 0xD7, 0x6D, 0x27, 0x09, 0x36, 0x8D, 0x0E, 0x32, 0x7A, 0x00, 0x6D, 0x26, 0xF7, 0x39, 0x27, 0xEA, 0xBD, 0xC5, 0x84, 0x86, 0xFF, 0x97, 0x82, 0xBD, 0xC5, 0xA4, 0xA6, 0x00, 0x6F, 0x00, 0x94, 0x82, 0x2A, 0xEB, 0xE6, 0x02, 0x27, 0x03, 0x8D, 0x01, 0x5F, 0x4F, 0xDD, 0x83, 0xC6, 0x04, 0x3A, 0xFF, 0x01, 0x6F, 0xD6, 0x7E, 0xD7, 0xFF, 0x7E, 0xCA, 0xD2, 0x36, 0xBD, 0xC5, 0x70, 0x24, 0x03, 0x7E, 0xF9, 0xCE, 0x32, 0xE6, 0x00, 0x2A, 0x16, 0xDA, 0x6D, 0xD7, 0xE0, 0xE6, 0x02, 0x3C, 0x3A, 0xA7, 0x04, 0x38, 0x6C, 0x02, 0x26, 0x07, 0x36, 0xCC, 0x01, 0x00, 0x8D, 0xCE, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xF8, 0xD2, 0x27, 0xFA, 0x38, 0xBD, 0xF8, 0xCE, 0x27, 0x04, 0x86, 0x0C, 0x20, 0xEE, 0x7E, 0xF8, 0xC8, 0xBD, 0x01, 0x85, 0x3C, 0x37, 0x7F, 0x00, 0xE9, 0x8D, 0x67, 0x24, 0x03, 0x7E, 0xF8, 0x6A, 0xE6, 0x00, 0x2F, 0x20, 0xDA, 0x6D, 0xD7, 0xE0, 0xEC, 0x01, 0x27, 0x15, 0x3C, 0xE6, 0x03, 0x3A, 0xA6, 0x04, 0x38, 0x6C, 0x03, 0x6A, 0x02, 0x26, 0xC3, 0x6F, 0x01, 0x36, 0xBD, 0xC6, 0x21, 0x20, 0xBA, 0x73, 0x00, 0xE9, 0x4F, 0x20, 0xB5, 0x27, 0x06, 0x7D, 0x00, 0xE8, 0x27, 0x02, 0x4F, 0x16, 0xDD, 0x80, 0x39, 0xBD, 0xE7, 0xE0, 0x8D, 0x03, 0x7E, 0xE7, 0x21, 0x8D, 0x06, 0xBD, 0xE7, 0xFF, 0x7E, 0xE8, 0x11, 0x81, 0x23, 0x26, 0x0C, 0x8D, 0x22, 0x2B, 0x79, 0x5D, 0x2B, 0x79, 0x97, 0xE8, 0xBD, 0xEA, 0x2F, 0x81, 0x22, 0x26, 0x1E, 0xBD, 0xEA, 0x07, 0xC6, 0x3B, 0xBD, 0xEA, 0x31, 0x7E, 0xE7, 0xAB, 0x0D, 0xD6, 0xE8, 0x2F, 0x0E, 0xD7, 0x6D, 0x20, 0x33, 0x8D, 0x0E, 0x27, 0x04, 0xE6, 0x00, 0x27, 0x57, 0x96, 0x6D, 0x39, 0x8D, 0x03, 0x27, 0x4A, 0x39, 0x81, 0x23, 0x26, 0x02, 0x9D, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC7, 0xD7, 0x6D, 0x27, 0x08, 0xC3, 0x00, 0x02, 0x27, 0x19, 0x83, 0x00, 0x03, 0x4D, 0x26, 0x2E, 0xD6, 0x6D, 0x27, 0x0F, 0xD1, 0x70, 0x22, 0x26, 0x5A, 0x86, 0x82, 0x3D, 0x05, 0xD3, 0x6E, 0xDD, 0x91, 0xDE, 0x91, 0x39, 0x81, 0x40, 0x26, 0x03, 0x7E, 0xE7, 0x2B, 0x81, 0x23, 0x27, 0x03, 0x7E, 0xE7, 0x38, 0x8D, 0xB1, 0x2F, 0x03, 0x5D, 0x2A, 0x08, 0x97, 0xE8, 0x7E, 0xE7, 0x2E, 0x7E, 0xDD, 0x96, 0x7E, 0xFD, 0x9D, 0xC6, 0x36, 0x8C, 0xC6, 0x34, 0x7E, 0xE2, 0x38, 0xBD, 0xDD, 0xAA, 0x5D, 0x27, 0xEF, 0x86, 0x80, 0xE6, 0x00, 0xC1, 0x4F, 0x27, 0x0B, 0xC1, 0x41, 0x27, 0x06, 0xC1, 0x49, 0x26, 0xDF, 0x44, 0x21, 0x47, 0x36, 0xBD, 0xEA, 0x2F, 0x8D, 0x85, 0xA6, 0x00, 0x26, 0xD8, 0xBD, 0xEA, 0x2F, 0x8D, 0x4B, 0x33, 0x37, 0xDA, 0x6D, 0xBD, 0xCA, 0x5B, 0xCC, 0x02, 0x4F, 0x8D, 0x59, 0x8D, 0x8E, 0x4F, 0x5F, 0xED, 0x01, 0xA7, 0x03, 0x33, 0xE7, 0x00, 0x2B, 0x96, 0x3C, 0xC6, 0x04, 0x3A, 0xFF, 0x01, 0x6F, 0xFF, 0x01, 0x71, 0x7C, 0x01, 0x71, 0xD6, 0x7E, 0xD7, 0xFF, 0xBD, 0xC8, 0x25, 0x38, 0xDC, 0x8D, 0xED, 0x01, 0x39, 0xBD, 0xC5, 0x92, 0xBD, 0xC5, 0x7B, 0x2B, 0x92, 0x27, 0x0A, 0x5D, 0x2B, 0x8D, 0xEC, 0x01, 0x27, 0x02, 0xC6, 0xFF, 0x53, 0x17, 0x7E, 0xEC, 0xE3, 0x5F, 0xD7, 0x82, 0xD7, 0x83, 0xD7, 0x71, 0x39, 0x81, 0xE2, 0x27, 0x03, 0x7E, 0xFB, 0x25, 0x9D, 0xEB, 0x8D, 0x14, 0xD6, 0x83, 0x27, 0x25, 0xCC, 0x01, 0x43, 0xCE, 0xC8, 0xC8, 0xBD, 0xC8, 0x92, 0xD6, 0x8B, 0x27, 0xE3, 0x7E, 0xE2, 0x38, 0x8D, 0xD7, 0x9D, 0xF3, 0x27, 0xDA, 0x7E, 0xCA, 0x5B, 0x81, 0x94, 0x26, 0x0B, 0x8D, 0xCA, 0xC6, 0x44, 0x9D, 0xEB, 0x27, 0x07, 0x7E, 0xEA, 0x3C, 0x8D, 0xE6, 0xC6, 0x46, 0xD7, 0x37, 0x86, 0x01, 0xD6, 0x37, 0xCE, 0xC8, 0xCB, 0x8D, 0xCF, 0x38, 0xD6, 0x8C, 0x26, 0x0A, 0x96, 0xE2, 0x4C, 0x26, 0x03, 0xCE, 0xE2, 0x71, 0x6E, 0x00, 0xBD, 0xE5, 0x66, 0x3C, 0x4F, 0xDD, 0x8D, 0xD7, 0x82, 0xCE, 0x21, 0x24, 0xDF, 0x80, 0xCE, 0x01, 0xB2, 0xDF, 0x8B, 0xBD, 0xC9, 0x1C, 0x27, 0x03, 0x7E, 0xC8, 0x89, 0x0E, 0xDE, 0x8B, 0xD6, 0x82, 0xBD, 0xE7, 0xAE, 0xBD, 0xE7, 0x6A, 0x4F, 0x97, 0x83, 0x43, 0x97, 0x82, 0x20, 0xBA, 0xDE, 0x95, 0x9C, 0x97, 0x24, 0x09, 0x8D, 0x2C, 0xBD, 0xED, 0xC7, 0x8D, 0x2F, 0x20, 0xF3, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x24, 0x24, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x24, 0xE8, 0x8D, 0x07, 0xBD, 0xED, 0xCD, 0x8D, 0x0A, 0x20, 0xF3, 0x7F, 0x00, 0xC5, 0xDC, 0x93, 0xDD, 0xC1, 0x39, 0x96, 0xC5, 0x27, 0xFB, 0x3C, 0xDE, 0xC5, 0x96, 0x71, 0x27, 0x05, 0xBD, 0xDD, 0x0A, 0x38, 0x39, 0xEC, 0x02, 0xD3, 0xD7, 0xED, 0x02, 0x38, 0x39, 0xCC, 0x11, 0x00, 0xDD, 0x71, 0xBD, 0xCA, 0x5E, 0xD6, 0xE0, 0x26, 0x55, 0xDC, 0x95, 0x93, 0x99, 0x27, 0x69, 0xD3, 0x9B, 0xDD, 0x37, 0xDC, 0x97, 0x93, 0x95, 0xDD, 0x39, 0xDE, 0x34, 0x9C, 0x9B, 0x23, 0x07, 0x9C, 0x9D, 0x22, 0x03, 0x09, 0xDF, 0x9D, 0x8D, 0x81, 0x73, 0x00, 0x71, 0xDE, 0x95, 0xDF, 0xC1, 0xDE, 0x9B, 0x09, 0xDF, 0xBB, 0xDE, 0x99, 0x09, 0xDF, 0xBD, 0x8E, 0x00, 0xDD, 0xBD, 0xE2, 0x00, 0xDE, 0xBF, 0x35, 0x73, 0x01, 0x6E, 0x20, 0x31, 0x8D, 0x0D, 0x81, 0x4D, 0x27, 0x11, 0xDE, 0x93, 0xA6, 0x00, 0x97, 0x72, 0x5F, 0x20, 0x1D, 0x81, 0xA9, 0x27, 0x04, 0x81, 0xD2, 0x26, 0x9E, 0x7E, 0xEA, 0x3C, 0x38, 0x7E, 0xE3, 0xD9, 0x7E, 0xE3, 0xDE, 0x27, 0xF7, 0x25, 0xF9, 0x8D, 0xE8, 0xC6, 0x5F, 0x7F, 0x00, 0x72, 0xD7, 0x71, 0xBD, 0xCA, 0x5E, 0xCC, 0x02, 0x4C, 0xCE, 0xC8, 0xCE, 0xBD, 0xC8, 0x92, 0xDC, 0x8D, 0x27, 0x79, 0x96, 0xE0, 0x26, 0x21, 0xD6, 0x71, 0x2B, 0x1A, 0xD6, 0x72, 0x27, 0x10, 0xDE, 0x93, 0xDF, 0x37, 0xDE, 0x95, 0xDF, 0x39, 0xC6, 0x08, 0x3A, 0xDF, 0x93, 0xFF, 0x01, 0x6F, 0xBD, 0xE3, 0xCF, 0x73, 0x01, 0x6E, 0x77, 0x00, 0x71, 0x9F, 0x91, 0x8E, 0x00, 0xCE, 0xDC, 0x8D, 0x27, 0x49, 0x96, 0xE0, 0x81, 0x02, 0x27, 0x1E, 0xFC, 0x01, 0x6F, 0xDD, 0x8B, 0xD3, 0x8D, 0xFD, 0x01, 0x6F, 0x7D, 0x00, 0xE0, 0x27, 0x08, 0xB3, 0x01, 0x71, 0x23, 0x10, 0x7E, 0xE2, 0x36, 0xDD, 0x95, 0xBD, 0xE2, 0x20, 0x20, 0x06, 0xDC, 0x8B, 0xD3, 0xDE, 0xDD, 0x8B, 0xCC, 0x04, 0x47, 0xCE, 0xC9, 0x0D, 0x8D, 0x75, 0x9C, 0x8F, 0x26, 0xF7, 0x96, 0xE0, 0x85, 0x40, 0x27, 0x03, 0x39, 0x9F, 0x91, 0xCC, 0x03, 0x4E, 0xCE, 0xC8, 0xFD, 0x8D, 0x63, 0x20, 0xB3, 0x9E, 0x91, 0xD6, 0x90, 0x26, 0x54, 0x96, 0xE0, 0x27, 0x1F, 0x81, 0x02, 0x26, 0x6C, 0xDC, 0x8B, 0xD3, 0xDE, 0xFD, 0x01, 0x1F, 0x96, 0x71, 0x27, 0x61, 0x96, 0x08, 0x36, 0x84, 0xF7, 0x97, 0x08, 0xFE, 0x01, 0x1F, 0xAD, 0x00, 0x32, 0x97, 0x08, 0x39, 0x5F, 0xDE, 0x95, 0xED, 0x00, 0xA7, 0x02, 0xBD, 0xE2, 0xF3, 0x08, 0x08, 0xDF, 0x95, 0x96, 0x71, 0x2B, 0x11, 0xBD, 0xE3, 0xD9, 0x96, 0x72, 0x26, 0x0D, 0x96, 0x71, 0x26, 0x03, 0x7E, 0xE2, 0x71, 0x7E, 0xCB, 0x49, 0x7E, 0xCB, 0x24, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0x7E, 0xCB, 0xBC, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x38, 0x4A, 0x27, 0xF7, 0xD7, 0x81, 0x3C, 0x37, 0x36, 0x86, 0x21, 0x97, 0x80, 0x0F, 0xAD, 0x00, 0x07, 0xD6, 0x7E, 0xF7, 0xFF, 0xF0, 0x06, 0x32, 0x33, 0x26, 0xE5, 0x31, 0x31, 0x39, 0x8D, 0x05, 0x81, 0x03, 0x27, 0xFA, 0x39, 0xCE, 0x00, 0x1C, 0xCC, 0x00, 0x04, 0x09, 0x27, 0xF6, 0xD5, 0x03, 0x27, 0x04, 0x8A, 0x02, 0x20, 0xF5, 0x8A, 0x01, 0x20, 0xF1, 0xC6, 0x01, 0x8C, 0xC6, 0x02, 0x8C, 0xC6, 0x06, 0x4F, 0xDD, 0x8D, 0x8D, 0xD7, 0xCE, 0x00, 0x80, 0xCC, 0x00, 0x04, 0xBD, 0xC9, 0x96, 0x96, 0x81, 0x81, 0x53, 0x26, 0x09, 0xCE, 0x01, 0x6A, 0xCC, 0x00, 0x04, 0xBD, 0xC9, 0x96, 0xD6, 0x83, 0x27, 0x06, 0x4F, 0xDE, 0x34, 0xBD, 0xC9, 0x96, 0xCE, 0x00, 0x8B, 0x0D, 0x20, 0x2B, 0xD6, 0x6D, 0xD7, 0x82, 0xCE, 0x00, 0x8B, 0xDF, 0x8B, 0xCC, 0x00, 0x06, 0xDD, 0x8D, 0x20, 0x11, 0xD6, 0x6D, 0xD7, 0x82, 0x96, 0xE0, 0x81, 0x02, 0x27, 0x05, 0x96, 0xFF, 0xB7, 0xFF, 0xF0, 0x8D, 0x8E, 0xCE, 0x00, 0x80, 0xCC, 0x00, 0x03, 0x8D, 0x70, 0xDE, 0x8B, 0xDC, 0x8D, 0x0F, 0xDD, 0xDC, 0xCC, 0x00, 0x00, 0xDD, 0xD8, 0xCC, 0x04, 0x01, 0xC9, 0x00, 0x09, 0xDF, 0xDA, 0x9F, 0xD6, 0x9E, 0xDC, 0x27, 0x51, 0x95, 0x03, 0x27, 0x23, 0xCE, 0x00, 0x00, 0x95, 0x03, 0x27, 0x1C, 0x95, 0x03, 0x27, 0x18, 0x09, 0x95, 0x03, 0x27, 0x13, 0x8C, 0x00, 0x01, 0x95, 0x03, 0x27, 0x0C, 0x24, 0xEE, 0x95, 0x03, 0x27, 0x06, 0x5A, 0x26, 0xE7, 0x5A, 0x20, 0x2B, 0x34, 0xBF, 0x00, 0xDC, 0x31, 0x9E, 0xDA, 0x31, 0x9F, 0xDA, 0xC6, 0x40, 0x96, 0x03, 0x09, 0x08, 0xDE, 0xD8, 0x44, 0x44, 0x04, 0x24, 0xF5, 0xB6, 0x00, 0x03, 0x44, 0x44, 0x04, 0x37, 0x3A, 0xDF, 0xD8, 0xCC, 0x04, 0x01, 0xB5, 0x00, 0x03, 0x26, 0xAC, 0x21, 0x5F, 0x9E, 0xD6, 0x5D, 0x39, 0xDD, 0xDC, 0x4F, 0x5F, 0xDD, 0xD8, 0x86, 0x11, 0x06, 0x97, 0x03, 0xE6, 0x00, 0x08, 0x3C, 0xDE, 0xD8, 0x3A, 0x86, 0x08, 0x58, 0xD7, 0x03, 0x56, 0xDF, 0xD8, 0x3C, 0x38, 0x80, 0x01, 0x26, 0xF5, 0xF7, 0x00, 0x03, 0x4C, 0xDE, 0xDC, 0x09, 0xDF, 0xDC, 0x38, 0x26, 0xDD, 0x97, 0x03, 0xDE, 0xD8, 0x39, 0xC6, 0x77, 0x30, 0xE7, 0x03, 0x4F, 0x5F, 0xDD, 0x8D, 0xD6, 0x6D, 0xD7, 0x82, 0xD6, 0xFF, 0xF7, 0xFF, 0xF0, 0xCE, 0x00, 0x80, 0xC6, 0x05, 0x8D, 0xB6, 0xDC, 0x83, 0x27, 0x07, 0xFE, 0x01, 0x6F, 0x8D, 0xAD, 0xDF, 0x8D, 0xCE, 0x00, 0x8F, 0xCC, 0x00, 0x02, 0x7E, 0xC9, 0x2A, 0xC6, 0x2C, 0xBD, 0xD9, 0x04, 0xFD, 0x01, 0x6F, 0x8B, 0x0C, 0xFD, 0x01, 0x71, 0x39, 0x5F, 0xD7, 0x6D, 0xD7, 0x36, 0x81, 0x4D, 0x27, 0x1C, 0x81, 0xA9, 0x27, 0x12, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0x81, 0xD2, 0x26, 0x13, 0xCC, 0x40, 0x00, 0x8D, 0xDC, 0xC6, 0x06, 0x20, 0x06, 0xBD, 0xFD, 0xDB, 0xC6, 0x02, 0x8C, 0x9D, 0xEB, 0xCB, 0x02, 0xD7, 0xE0, 0xBD, 0xE9, 0x1A, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xDF, 0x34, 0xCE, 0x00, 0x00, 0xFF, 0x01, 0x6A, 0x9D, 0xF3, 0x27, 0x12, 0xD6, 0xE0, 0xC1, 0x08, 0x27, 0xAD, 0xD6, 0x71, 0x26, 0x06, 0xC6, 0x02, 0xD1, 0xE0, 0x26, 0x07, 0x8D, 0x79, 0xDF, 0xDE, 0x39, 0xC6, 0x2C, 0x7E, 0xE2, 0x38, 0x8D, 0xCE, 0x8C, 0x8D, 0xA2, 0xDE, 0x34, 0xBD, 0xEE, 0x58, 0xDF, 0x34, 0x96, 0xE0, 0xDD, 0x82, 0x5D, 0x27, 0xE8, 0x80, 0x08, 0x27, 0x02, 0x96, 0x7E, 0x97, 0xFF, 0x39, 0x8D, 0x89, 0x96, 0xE0, 0x26, 0x0A, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xDE, 0xDE, 0x81, 0x02, 0x27, 0x0C, 0x8D, 0xD1, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xFD, 0x01, 0x6C, 0x8C, 0x8D, 0x47, 0xCC, 0x02, 0x53, 0xCE, 0xC8, 0xC8, 0xBD, 0xC8, 0x92, 0xD6, 0x8B, 0x26, 0xB0, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0x81, 0x03, 0x23, 0x03, 0xCC, 0x04, 0x00, 0xDD, 0x83, 0x9F, 0x91, 0x8E, 0x00, 0xCE, 0x8D, 0x14, 0x9E, 0x91, 0xDC, 0x83, 0x27, 0x1D, 0xF3, 0x01, 0x6F, 0xFD, 0x01, 0x6F, 0x20, 0xDC, 0xBD, 0xEA, 0x2F, 0x7E, 0xEF, 0x4C, 0xCC, 0x04, 0x57, 0xCE, 0xC9, 0xC7, 0xBD, 0xC8, 0x8F, 0xDE, 0x8F, 0x9C, 0x8D, 0x26, 0xF4, 0x39, 0xFF, 0x01, 0x6F, 0xFF, 0x01, 0x6C, 0xFF, 0x01, 0x6A, 0x8D, 0xDF, 0xBC, 0x01, 0x6F, 0x25, 0x10, 0x08, 0xFF, 0x01, 0x71, 0x9D, 0xF3, 0x27, 0x05, 0x8D, 0xD0, 0xFF, 0x01, 0x6A, 0x7E, 0xCA, 0x60, 0x7E, 0xEC, 0x2E, 0x9D, 0xF3, 0x81, 0x4D, 0x26, 0x15, 0x38, 0x9D, 0xEB, 0xBD, 0xFD, 0x33, 0x8D, 0xB9, 0x8D, 0xCD, 0xC6, 0x02, 0xF7, 0x01, 0x67, 0xBD, 0xFC, 0x8E, 0x7E, 0xFC, 0x5D, 0x5F, 0x81, 0xA9, 0x39, 0xDC, 0x9B, 0x93, 0x37, 0xD3, 0x95, 0xDD, 0x99, 0xDC, 0x95, 0xD3, 0x39, 0xDD, 0x97, 0x0F, 0x9E, 0x37, 0x34, 0xDE, 0x95, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x99, 0x25, 0xF8, 0x9E, 0x9B, 0xD6, 0x36, 0x27, 0x03, 0x7E, 0xE2, 0x49, 0x7F, 0x01, 0x6E, 0xDE, 0x93, 0xDC, 0xDE, 0x27, 0x07, 0xDD, 0xA5, 0xBD, 0xE3, 0xBB, 0x25, 0x09, 0x09, 0xDF, 0xF4, 0xBD, 0xE3, 0xEE, 0x7E, 0xE5, 0x19, 0xCC, 0xFF, 0xFF, 0xDD, 0xE2, 0x7E, 0xE6, 0x42, 0xD7, 0x36, 0x96, 0x72, 0x26, 0x7B, 0x96, 0x71, 0x2A, 0x03, 0x44, 0x24, 0xAD, 0x7E, 0xE3, 0xCF, 0xD3, 0x3E, 0x25, 0x19, 0xDD, 0x3E, 0xDD, 0xA5, 0x83, 0xF9, 0xFF, 0x22, 0x10, 0x8D, 0x7A, 0xBD, 0xFA, 0xA4, 0x25, 0x09, 0xDF, 0xF4, 0x9D, 0xEB, 0x27, 0x03, 0x7E, 0xE2, 0x96, 0x4F, 0x5F, 0xFD, 0x02, 0xBF, 0x7E, 0xE2, 0x71, 0xBD, 0xE2, 0xF5, 0x96, 0x72, 0x26, 0x08, 0xFC, 0x02, 0xBF, 0x26, 0xCF, 0x7E, 0xE2, 0x7A, 0xDE, 0x95, 0xDF, 0x39, 0xFE, 0x01, 0x6F, 0xDF, 0x93, 0xFE, 0x01, 0x71, 0xDF, 0x95, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xDE, 0x93, 0xEC, 0x00, 0xFD, 0x01, 0x6F, 0x27, 0x21, 0xEC, 0x02, 0xDD, 0xA5, 0xBD, 0xD9, 0xF1, 0x8D, 0x27, 0xCE, 0xF7, 0x4B, 0xBD, 0xE7, 0xA8, 0x8D, 0x28, 0xF6, 0x01, 0x81, 0xC4, 0xE0, 0xF7, 0x01, 0x81, 0xCE, 0x01, 0xB3, 0xDF, 0xF4, 0x7E, 0xE2, 0x96, 0x7F, 0x00, 0x72, 0x8D, 0x0A, 0xBD, 0xCC, 0xF5, 0xD6, 0x36, 0x26, 0x0B, 0x7E, 0xE2, 0x71, 0xDE, 0x39, 0xDF, 0x95, 0xDE, 0x37, 0xDF, 0x93, 0x39, 0xDC, 0xA5, 0xBD, 0xF4, 0x19, 0x7E, 0xE7, 0xB9, 0xCE, 0x00, 0x0A, 0xFF, 0x02, 0xBF, 0x24, 0x02, 0x8D, 0x29, 0xDF, 0x3E, 0x8D, 0x17, 0x24, 0x08, 0xFF, 0x02, 0xBF, 0x27, 0x47, 0xBD, 0xFD, 0x2B, 0xBD, 0xE7, 0x6A, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xDC, 0x3E, 0x7E, 0xCB, 0x80, 0x9D, 0xF3, 0x27, 0x10, 0xBD, 0xEA, 0x2F, 0x25, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x05, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0x0D, 0x39, 0xCC, 0x00, 0x0A, 0xDD, 0x34, 0xDD, 0x38, 0x5F, 0xDD, 0x36, 0x9D, 0xF3, 0x27, 0x1A, 0x24, 0x04, 0x8D, 0xE7, 0xDF, 0x34, 0x8D, 0xD5, 0x24, 0x10, 0xDF, 0x36, 0x8D, 0xCF, 0x24, 0x0A, 0xDF, 0x38, 0x26, 0x03, 0x7E, 0xEC, 0x2E, 0xBD, 0xFD, 0x2B, 0xBD, 0xE3, 0xDE, 0xDC, 0x36, 0xDD, 0xA5, 0xBD, 0xE3, 0xB9, 0xDF, 0x3A, 0xDC, 0x34, 0xDD, 0xA5, 0xBD, 0xE3, 0xB9, 0x9C, 0x3A, 0x25, 0xE3, 0xDE, 0x3A, 0x4F, 0x5F, 0xC3, 0x00, 0x01, 0xEE, 0x00, 0x26, 0xF9, 0x83, 0x00, 0x01, 0x27, 0x5C, 0x05, 0x05, 0xDD, 0x89, 0xDC, 0xA1, 0x93, 0x89, 0xDD, 0x3C, 0xDD, 0x40, 0x83, 0x00, 0x3A, 0xDD, 0xBB, 0x93, 0x95, 0x23, 0x04, 0x93, 0x89, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0x9E, 0x3C, 0x34, 0xDE, 0x3A, 0xEC, 0x02, 0xEE, 0x00, 0x27, 0x1B, 0xDF, 0x3A, 0xDE, 0x40, 0xED, 0x00, 0xDC, 0x34, 0xED, 0x02, 0x81, 0xF9, 0x22, 0x9E, 0xD3, 0x38, 0x25, 0x9A, 0xDD, 0x34, 0xC6, 0x04, 0x3A, 0xDF, 0x40, 0x20, 0xDD, 0xDE, 0x93, 0xDF, 0xC1, 0xDE, 0x95, 0xDF, 0xBD, 0xBD, 0xE2, 0x00, 0x0F, 0x9E, 0xBF, 0x34, 0xDE, 0x93, 0x09, 0x32, 0x33, 0xED, 0x01, 0x26, 0x11, 0x9E, 0x9B, 0x8D, 0x03, 0x7E, 0xE2, 0x71, 0xBD, 0xE2, 0xF3, 0x08, 0x08, 0xDF, 0x95, 0x7E, 0xE3, 0xDE, 0x32, 0x33, 0xED, 0x03, 0xDD, 0xA5, 0xDF, 0x40, 0xDE, 0x3C, 0xA3, 0x00, 0x23, 0x0A, 0xC6, 0x04, 0x3A, 0xDC, 0xA5, 0x9C, 0xA1, 0x25, 0xF3, 0x0D, 0xEC, 0x02, 0xDE, 0x40, 0x25, 0x02, 0xED, 0x03, 0xEC, 0x03, 0xDD, 0xE2, 0xC6, 0x04, 0x3A, 0x5F, 0x20, 0x04, 0xCA, 0x80, 0xCA, 0x02, 0x32, 0x08, 0xA7, 0x00, 0x27, 0xB5, 0x81, 0x20, 0x27, 0xF6, 0x5D, 0x2B, 0xF3, 0xC5, 0x04, 0x27, 0x04, 0x81, 0x2C, 0x27, 0x3B, 0x81, 0x22, 0x26, 0x02, 0xC8, 0x01, 0x81, 0x3A, 0x26, 0x06, 0xC5, 0x01, 0x26, 0xDD, 0xC4, 0xF9, 0x4D, 0x2A, 0xD8, 0xC5, 0x03, 0x26, 0xD4, 0x81, 0x85, 0x27, 0xCE, 0x81, 0x83, 0x27, 0xC8, 0x81, 0xDD, 0x27, 0xC4, 0x81, 0x81, 0x27, 0x14, 0x81, 0x82, 0x27, 0x10, 0x81, 0xA3, 0x27, 0x0C, 0x81, 0xC9, 0x27, 0x08, 0x81, 0x8E, 0x27, 0x04, 0x81, 0x8F, 0x26, 0xB0, 0x9F, 0x3E, 0x32, 0x08, 0xA7, 0x00, 0x27, 0xAC, 0x81, 0x20, 0x27, 0xF4, 0x81, 0x39, 0x22, 0xBB, 0x80, 0x30, 0x25, 0x9C, 0x09, 0x16, 0x4F, 0xDD, 0xCA, 0x9F, 0x89, 0x32, 0x81, 0x20, 0x27, 0xFB, 0x81, 0x39, 0x22, 0x17, 0x80, 0x30, 0x25, 0x13, 0x97, 0x80, 0x96, 0xCA, 0x81, 0x18, 0x22, 0x5C, 0x05, 0x05, 0xD3, 0xCA, 0x05, 0xDB, 0x80, 0x89, 0x00, 0x20, 0xDC, 0xDF, 0x40, 0xDE, 0x89, 0xDF, 0x3E, 0xDE, 0x3C, 0xDC, 0xCA, 0xA3, 0x00, 0x23, 0x08, 0xC6, 0x04, 0x3A, 0x9C, 0xA1, 0x25, 0xF3, 0x0D, 0x25, 0x04, 0xEC, 0x02, 0xDD, 0xCA, 0x9E, 0x3C, 0x34, 0x24, 0x1E, 0xDC, 0xCA, 0x93, 0x36, 0x25, 0x18, 0xDE, 0xCA, 0x3C, 0xCE, 0xCE, 0x0F, 0xBD, 0xE7, 0xA8, 0x30, 0xEC, 0x00, 0xBD, 0xF4, 0x19, 0xBD, 0xF4, 0x12, 0xBD, 0xE7, 0x66, 0x38, 0xDF, 0xCA, 0xBD, 0xDC, 0xAA, 0xBD, 0xF4, 0x26, 0x8E, 0x02, 0xAF, 0xDE, 0x40, 0x32, 0x08, 0xA7, 0x00, 0x26, 0xFA, 0x09, 0x9E, 0x3E, 0xC6, 0x04, 0x7E, 0xCD, 0x2D, 0x55, 0x4C, 0x20, 0x00, 0x7E, 0xEC, 0x2E, 0x27, 0xFB, 0xBD, 0xE6, 0xB2, 0xBD, 0xE3, 0xB9, 0xDF, 0xBF, 0x9D, 0xF3, 0x27, 0x15, 0xCC, 0xFF, 0xA8, 0x97, 0xA5, 0xBD, 0xEA, 0x31, 0x27, 0x0B, 0xBD, 0xE6, 0xB2, 0xBD, 0xFD, 0x2B, 0xCE, 0x00, 0xBF, 0xEE, 0x00, 0xEC, 0x00, 0x27, 0x06, 0xEC, 0x02, 0x93, 0xA5, 0x23, 0xF4, 0xDF, 0xC1, 0xDC, 0x95, 0x93, 0xC1, 0x8D, 0x11, 0xDE, 0xBB, 0xDF, 0x95, 0x9E, 0x9B, 0xBD, 0xE3, 0xDE, 0xDE, 0xBF, 0xBD, 0xE2, 0xF5, 0x7E, 0xE2, 0x71, 0x38, 0xDF, 0x8B, 0xDE, 0xBF, 0xD3, 0xBF, 0xDD, 0xBB, 0x0F, 0x9E, 0xC1, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBB, 0x26, 0xF8, 0xDE, 0x8B, 0x6E, 0x00, 0xCE, 0xCE, 0xC2, 0x8D, 0x06, 0x96, 0x5C, 0xB7, 0xBF, 0xFF, 0x39, 0xDF, 0x34, 0x5F, 0x37, 0x37, 0x5C, 0x37, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0x8C, 0x33, 0x38, 0xD7, 0x3A, 0x27, 0xFA, 0xDF, 0x38, 0x27, 0xE7, 0x96, 0x3A, 0x27, 0xF2, 0xBD, 0xCF, 0xC5, 0x81, 0x3B, 0x27, 0xF5, 0x81, 0x27, 0x27, 0xF1, 0x81, 0x58, 0x27, 0x06, 0xDE, 0x34, 0xAD, 0x00, 0x20, 0xE7, 0xBD, 0xD0, 0x37, 0xC6, 0x02, 0xBD, 0xE2, 0x1A, 0xDE, 0x38, 0x3C, 0xD6, 0x3A, 0x37, 0x20, 0xC9, 0x81, 0x4F, 0x26, 0x0D, 0xD6, 0x6A, 0x5C, 0x8D, 0x55, 0x5A, 0xC1, 0x04, 0x22, 0x5D, 0xD7, 0x6A, 0x39, 0x81, 0x56, 0x26, 0x12, 0xD6, 0x69, 0xC4, 0x1F, 0x8D, 0x43, 0xC1, 0x1F, 0x22, 0x4C, 0x5D, 0x27, 0x02, 0xCA, 0x80, 0xD7, 0x69, 0x39, 0x81, 0x4C, 0x26, 0x25, 0xD6, 0x6B, 0x8D, 0x2F, 0x5D, 0x27, 0x39, 0xD7, 0x6B, 0x7F, 0x00, 0x68, 0x8D, 0x03, 0x24, 0xFC, 0x39, 0x96, 0x3A, 0x27, 0x0A, 0xBD, 0xCF, 0xC5, 0x81, 0x2E, 0x27, 0x05, 0xBD, 0xD0, 0x25, 0x0D, 0x39, 0x7C, 0x00, 0x68, 0x39, 0x81, 0x54, 0x26, 0x0D, 0xD6, 0x6C, 0x8D, 0x06, 0x5D, 0x27, 0x10, 0xD7, 0x6C, 0x39, 0x7E, 0xCF, 0xDA, 0x81, 0x50, 0x26, 0x1A, 0xBD, 0xCF, 0xFA, 0x5D, 0x26, 0x03, 0x7E, 0xEC, 0x2E, 0xDE, 0x68, 0x3C, 0x4F, 0x97, 0x68, 0x97, 0x69, 0x8D, 0x04, 0x38, 0xDF, 0x68, 0x39, 0x36, 0x20, 0x3C, 0x81, 0x4E, 0x26, 0x02, 0x8D, 0x7E, 0x81, 0x41, 0x25, 0x04, 0x81, 0x47, 0x23, 0x06, 0xBD, 0xCF, 0xFC, 0x5A, 0x20, 0x21, 0x16, 0xC0, 0x41, 0xCE, 0xD0, 0x52, 0x3A, 0xE6, 0x00, 0x96, 0x3A, 0x27, 0xF0, 0x8D, 0x61, 0x81, 0x23, 0x27, 0x0E, 0x81, 0x2B, 0x27, 0x0A, 0xC0, 0x02, 0x81, 0x2D, 0x27, 0x04, 0x5C, 0xBD, 0xD0, 0x25, 0xC1, 0x0B, 0x22, 0xB3, 0x37, 0xD6, 0x6B, 0x96, 0x6C, 0x3D, 0xDD, 0x3D, 0x30, 0xDF, 0x36, 0x96, 0x6A, 0xC6, 0x0C, 0x3D, 0x32, 0x1B, 0x16, 0x4F, 0xC1, 0x0E, 0x24, 0x06, 0x4C, 0xC1, 0x02, 0x24, 0x01, 0x4C, 0xCE, 0xD0, 0x59, 0x3A, 0xE6, 0x00, 0xDD, 0x3B, 0xC6, 0xFF, 0x96, 0x68, 0x27, 0x04, 0x8B, 0x02, 0x3D, 0x04, 0xDD, 0xF9, 0xD6, 0x69, 0xC4, 0x80, 0x96, 0x5C, 0x8D, 0x06, 0x01, 0x1B, 0x8D, 0x02, 0x20, 0xF6, 0xB7, 0xBF, 0xFF, 0xDE, 0x3B, 0x09, 0x08, 0x09, 0x26, 0xFB, 0x39, 0x3C, 0x96, 0x3A, 0x27, 0x3B, 0x4A, 0x97, 0x3A, 0xDE, 0x38, 0xA6, 0x00, 0x08, 0xDF, 0x38, 0x81, 0x20, 0x27, 0xEE, 0x38, 0x39, 0x8D, 0xE9, 0x81, 0x2B, 0x26, 0x04, 0x5C, 0x27, 0x22, 0x39, 0x81, 0x2D, 0x26, 0x05, 0xC0, 0x01, 0x25, 0x19, 0x39, 0x81, 0x3E, 0x26, 0x03, 0x58, 0x20, 0xF6, 0x81, 0x3C, 0x26, 0x04, 0x54, 0x39, 0x8D, 0xC9, 0x81, 0x3D, 0x26, 0x08, 0x8D, 0x35, 0x7E, 0xEF, 0x10, 0x7E, 0xEC, 0x2E, 0x8D, 0x24, 0x25, 0xF9, 0x5F, 0x80, 0x30, 0x97, 0x82, 0x86, 0x0A, 0x3D, 0x4D, 0x26, 0xEE, 0xDB, 0x82, 0x25, 0xEA, 0x96, 0x3A, 0x27, 0x0E, 0x8D, 0xA4, 0x8D, 0x0B, 0x24, 0xE8, 0x7C, 0x00, 0x3A, 0xDE, 0x38, 0x09, 0xDF, 0x38, 0x39, 0x81, 0x30, 0x25, 0x04, 0x80, 0x3A, 0x80, 0xC6, 0x39, 0xDE, 0xF4, 0x3C, 0xDE, 0x38, 0x8D, 0x87, 0xBD, 0xEB, 0x76, 0x25, 0xC2, 0x8D, 0x80, 0x81, 0x3B, 0x26, 0xFA, 0xDF, 0xF4, 0xBD, 0xEA, 0x49, 0x38, 0xDF, 0xF4, 0x39, 0x0A, 0x0C, 0x01, 0x03, 0x05, 0x06, 0x08, 0x38, 0x18, 0xFB, 0xDD, 0xC3, 0xA9, 0x91, 0x7B, 0x65, 0x51, 0x3F, 0x2C, 0x1C, 0x0C, 0xFC, 0xEF, 0xE0, 0xD4, 0xC8, 0xBC, 0xB1, 0xA8, 0x9F, 0x95, 0x8D, 0x84, 0x7D, 0x76, 0x70, 0x69, 0x63, 0x5D, 0x58, 0x53, 0x4E, 0x4A, 0x46, 0x42, 0x3E, 0x3A, 0x37, 0x34, 0x30, 0x2E, 0x2B, 0x29, 0x26, 0x24, 0x22, 0x20, 0x1E, 0x1C, 0x1B, 0x19, 0x17, 0x16, 0x15, 0x13, 0x12, 0x11, 0x4F, 0x5F, 0xDD, 0x3B, 0x5C, 0xD7, 0x55, 0xBD, 0xD7, 0xCA, 0xCE, 0xD0, 0xA6, 0xBD, 0xCE, 0x81, 0x39, 0x81, 0x4E, 0x26, 0x04, 0x73, 0x00, 0x3B, 0x39, 0x81, 0x42, 0x26, 0x04, 0x73, 0x00, 0x3C, 0x39, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xD1, 0xE0, 0x36, 0xC6, 0x01, 0x96, 0x3A, 0x27, 0x10, 0xBD, 0xD2, 0x01, 0xBD, 0xEB, 0x76, 0x25, 0x05, 0xBD, 0xD0, 0x25, 0x20, 0x03, 0xBD, 0xCF, 0xFC, 0x32, 0x81, 0x43, 0x26, 0x09, 0xBD, 0xD7, 0xF2, 0xD7, 0x64, 0xBD, 0xD7, 0xCA, 0x39, 0x81, 0x41, 0x26, 0x07, 0xC1, 0x03, 0x22, 0x37, 0xD7, 0x66, 0x39, 0x81, 0x53, 0x26, 0x07, 0xC1, 0x3E, 0x22, 0x2C, 0xD7, 0x67, 0x39, 0x36, 0x4F, 0xDD, 0x3D, 0x50, 0x82, 0x00, 0xDD, 0x3F, 0xDE, 0x3F, 0x32, 0x81, 0x55, 0x27, 0x3C, 0x81, 0x44, 0x27, 0x36, 0x81, 0x4C, 0x27, 0x28, 0x81, 0x52, 0x27, 0x27, 0x80, 0x45, 0x27, 0x16, 0x4A, 0x27, 0x0D, 0x4A, 0x27, 0x14, 0x4A, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x96, 0x3F, 0x20, 0x54, 0xDC, 0x3D, 0xDE, 0x3D, 0x20, 0x4E, 0xDC, 0x3D, 0x20, 0x4A, 0x96, 0x3F, 0xDE, 0x3D, 0x20, 0x44, 0x96, 0x3F, 0x8C, 0xDC, 0x3D, 0xCE, 0x00, 0x00, 0x20, 0x3A, 0xDE, 0x3D, 0x4F, 0x5F, 0x20, 0x34, 0x4F, 0xD6, 0x67, 0xDD, 0xCA, 0xEC, 0x00, 0xDE, 0xCA, 0x27, 0x16, 0x97, 0xCE, 0x2A, 0x02, 0x8D, 0x0C, 0xBD, 0xD3, 0x57, 0xDC, 0xCC, 0x04, 0x04, 0x7D, 0x00, 0xCE, 0x2A, 0x04, 0x40, 0x50, 0x82, 0x00, 0x39, 0xEC, 0x00, 0xED, 0x04, 0x7D, 0x00, 0x82, 0x26, 0xF6, 0xE3, 0x08, 0x2A, 0x02, 0x4F, 0x5F, 0xED, 0x08, 0x39, 0xDD, 0x4E, 0xDF, 0x50, 0xCE, 0x00, 0x4E, 0x8D, 0xC3, 0xDD, 0x4E, 0xCE, 0x00, 0x50, 0x8D, 0xBC, 0xDD, 0x50, 0x96, 0x66, 0x27, 0x0F, 0x36, 0xDE, 0x50, 0xDC, 0x4E, 0xDF, 0x4E, 0x8D, 0xCA, 0xDD, 0x50, 0x32, 0x4A, 0x26, 0xF1, 0x97, 0x82, 0xCE, 0x00, 0x46, 0x8D, 0xC2, 0xCE, 0x00, 0x48, 0x8D, 0xBD, 0xCE, 0x00, 0xFF, 0x9C, 0x4E, 0x24, 0x02, 0xDF, 0x4E, 0xCE, 0x00, 0xBF, 0x9C, 0x50, 0x24, 0x02, 0xDF, 0x50, 0x96, 0x3B, 0x26, 0x08, 0xDC, 0x4E, 0xDD, 0x46, 0xDC, 0x50, 0xDD, 0x48, 0x96, 0x3C, 0x26, 0x0C, 0xBD, 0xD7, 0x07, 0xBD, 0xE0, 0xEF, 0xBD, 0xD5, 0xB7, 0xBD, 0xE1, 0x35, 0x4F, 0x5F, 0xDD, 0x3B, 0x39, 0x8D, 0x1F, 0x36, 0x8D, 0x21, 0xDD, 0x4E, 0x8D, 0x18, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0x8D, 0x12, 0xDD, 0x50, 0x32, 0x81, 0x2B, 0x27, 0x87, 0x81, 0x2D, 0x27, 0x83, 0x97, 0x82, 0x20, 0xA2, 0x7E, 0xCF, 0xC5, 0x8D, 0xFB, 0x81, 0x2B, 0x27, 0x07, 0x81, 0x2D, 0x27, 0x04, 0xBD, 0xD0, 0x25, 0x4F, 0x36, 0xBD, 0xCF, 0xFA, 0x32, 0x4D, 0x27, 0x04, 0x4F, 0x50, 0x82, 0x00, 0x39, 0xBD, 0xD3, 0xA8, 0xDE, 0x4A, 0xDF, 0x34, 0xDE, 0x4C, 0xDF, 0x36, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x38, 0xCE, 0x00, 0x38, 0xBD, 0xD7, 0x12, 0x86, 0x01, 0x97, 0x55, 0xBD, 0xD7, 0xB4, 0xCE, 0x01, 0x00, 0x9D, 0xF3, 0x27, 0x09, 0x8D, 0x51, 0x8B, 0x08, 0x97, 0xC9, 0xBD, 0xEF, 0x4F, 0xDF, 0x3A, 0x96, 0x58, 0x84, 0x18, 0x81, 0x10, 0x26, 0x05, 0xDC, 0x3A, 0x05, 0xDD, 0x3A, 0x8D, 0x42, 0xDD, 0x3C, 0x8D, 0x3E, 0xDD, 0x3E, 0xBD, 0xE0, 0xEF, 0x8D, 0x4E, 0xDE, 0x4E, 0x3C, 0xDE, 0x50, 0x3C, 0x96, 0x55, 0x26, 0x03, 0xBD, 0xD5, 0xB7, 0x7F, 0x00, 0x55, 0x38, 0xDF, 0x4C, 0x38, 0xDF, 0x4A, 0xDC, 0x3C, 0x5C, 0xC4, 0x07, 0x26, 0x03, 0x4C, 0x84, 0x07, 0xDD, 0x3C, 0x93, 0x3E, 0x26, 0xD8, 0x8D, 0x26, 0xBD, 0xD5, 0xB7, 0x7E, 0xE1, 0x32, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x0C, 0x96, 0xC9, 0x39, 0x5F, 0x9D, 0xF3, 0x27, 0x0B, 0x8D, 0xF0, 0x8B, 0x06, 0x97, 0xC9, 0xBD, 0xEF, 0x10, 0xC4, 0x3F, 0x17, 0xC4, 0x07, 0x44, 0x44, 0x44, 0x39, 0xDC, 0x3C, 0xCE, 0xD3, 0x84, 0x84, 0x01, 0x27, 0x03, 0x50, 0xCB, 0x08, 0x58, 0x58, 0x3A, 0x3C, 0xBD, 0xD3, 0x50, 0xDD, 0x4E, 0x38, 0x08, 0x08, 0x8D, 0x7D, 0xDD, 0x50, 0x96, 0x3C, 0x84, 0x03, 0x27, 0x0C, 0x80, 0x03, 0x27, 0x08, 0x96, 0x50, 0xDE, 0x4E, 0xDF, 0x50, 0xDD, 0x4E, 0xDC, 0x50, 0xDE, 0x3A, 0x8C, 0x01, 0x00, 0x27, 0x1B, 0x8C, 0x02, 0x00, 0x26, 0x05, 0x05, 0xDD, 0x50, 0x20, 0x11, 0x8D, 0x5B, 0x4D, 0x27, 0x06, 0xBD, 0xE1, 0x35, 0x7E, 0xEC, 0x2E, 0xD7, 0x50, 0x96, 0xCC, 0x97, 0x51, 0x96, 0x3C, 0x81, 0x02, 0x25, 0x0E, 0x81, 0x05, 0x22, 0x0A, 0xDC, 0x34, 0x93, 0x4E, 0x24, 0x12, 0x4F, 0x5F, 0x20, 0x0E, 0xDC, 0x34, 0xD3, 0x4E, 0x25, 0x06, 0xDD, 0x4E, 0x93, 0x42, 0x23, 0x04, 0xDC, 0x42, 0xDD, 0x4E, 0x96, 0x3C, 0x81, 0x04, 0x25, 0x0A, 0xDC, 0x36, 0x93, 0x50, 0x24, 0x12, 0x4F, 0x5F, 0x20, 0x0E, 0xDC, 0x36, 0xD3, 0x50, 0x25, 0x06, 0xDD, 0x50, 0x93, 0x44, 0x23, 0x04, 0xDC, 0x44, 0xDD, 0x50, 0x39, 0xDC, 0x38, 0xEE, 0x00, 0x27, 0xF9, 0x09, 0xDD, 0xD7, 0xDF, 0xD9, 0x7F, 0x00, 0xCA, 0x96, 0xDA, 0x3D, 0xDD, 0xCC, 0xDC, 0xD8, 0x3D, 0xDB, 0xCC, 0x89, 0x00, 0xDD, 0xCB, 0xD6, 0xD7, 0x96, 0xDA, 0x3D, 0xD3, 0xCB, 0xDD, 0xCB, 0x24, 0x03, 0x7C, 0x00, 0xCA, 0x96, 0xD7, 0xD6, 0xD9, 0x3D, 0xD3, 0xCA, 0xDD, 0xCA, 0x39, 0x00, 0x00, 0x00, 0x01, 0xFE, 0xC5, 0x19, 0x19, 0xFB, 0x16, 0x31, 0xF2, 0xF4, 0xFB, 0x4A, 0x51, 0xEC, 0x84, 0x61, 0xF9, 0xE1, 0xC7, 0x78, 0xAE, 0xD4, 0xDC, 0x8E, 0x3B, 0xC5, 0xE5, 0xA2, 0x69, 0xB5, 0x06, 0xB5, 0x06, 0x81, 0x40, 0x26, 0x02, 0x9D, 0xEB, 0xCE, 0x00, 0xFF, 0xDF, 0x42, 0xCE, 0x00, 0xBF, 0xDF, 0x44, 0xCE, 0x00, 0x42, 0xBD, 0xD7, 0x12, 0xBD, 0xD7, 0x56, 0x7E, 0xEA, 0x29, 0x8D, 0xE2, 0xD7, 0x55, 0xBD, 0xD7, 0xB4, 0xDE, 0x56, 0x3C, 0x9D, 0xF3, 0x27, 0x03, 0xBD, 0xD7, 0xB4, 0xD7, 0x38, 0x38, 0xDF, 0x56, 0xBD, 0xE0, 0xEF, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xA6, 0x00, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x49, 0x86, 0xFF, 0xBD, 0xD4, 0xE5, 0x96, 0x7E, 0x27, 0x07, 0xD6, 0x5F, 0x5C, 0xBD, 0xD9, 0x16, 0x8C, 0xDC, 0x99, 0xC3, 0x00, 0x10, 0xDD, 0x3C, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x57, 0xD4, 0xE1, 0x26, 0x03, 0x7E, 0xD4, 0xC7, 0xD6, 0x4B, 0x27, 0x26, 0x5C, 0xD7, 0x4B, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x38, 0xD4, 0xE1, 0x27, 0x14, 0x7A, 0x00, 0x4B, 0x27, 0x14, 0x48, 0x24, 0x02, 0x49, 0x09, 0xD6, 0x59, 0x2A, 0xE8, 0x49, 0x20, 0xE5, 0x7E, 0xD4, 0xD4, 0xBD, 0xD6, 0x33, 0x97, 0xE1, 0xCC, 0x00, 0x00, 0xDD, 0x3A, 0xD6, 0x4B, 0xD7, 0x4F, 0xDF, 0x52, 0xD6, 0x59, 0xC4, 0x7F, 0x3A, 0xDF, 0x36, 0x43, 0x50, 0xD3, 0x52, 0xDD, 0x34, 0xDE, 0x52, 0x96, 0xE1, 0x16, 0x43, 0xA4, 0x00, 0xD4, 0x57, 0x1B, 0xA7, 0x00, 0x96, 0x4D, 0x27, 0x20, 0xDE, 0x34, 0xA6, 0x00, 0x16, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x0D, 0xD8, 0x57, 0xD4, 0xE1, 0x27, 0x09, 0x96, 0x3A, 0x26, 0x05, 0x43, 0x8D, 0x5B, 0x97, 0x3A, 0x96, 0x4D, 0x91, 0x45, 0x27, 0x1A, 0xDE, 0x36, 0xA6, 0x00, 0x16, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x0D, 0xD8, 0x57, 0xD4, 0xE1, 0x27, 0x09, 0x96, 0x3B, 0x26, 0x05, 0x4C, 0x8D, 0x3B, 0x97, 0x3B, 0xD6, 0x4F, 0xD1, 0x43, 0x27, 0x23, 0x5C, 0xD7, 0x4F, 0xDE, 0x52, 0x96, 0xE1, 0x44, 0x24, 0x0A, 0x46, 0x08, 0xDF, 0x52, 0x7C, 0x00, 0x35, 0x7C, 0x00, 0x37, 0xD6, 0x59, 0x2A, 0x01, 0x46, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x38, 0xD4, 0xE1, 0x26, 0x90, 0x32, 0x97, 0x4B, 0x32, 0x81, 0xFF, 0x27, 0x05, 0x97, 0x4D, 0x7E, 0xD4, 0x01, 0x7E, 0xE1, 0x32, 0x30, 0x9C, 0x3C, 0x24, 0x06, 0xBD, 0xE1, 0x35, 0x7E, 0xE2, 0x36, 0xD6, 0x4D, 0x1B, 0x38, 0x36, 0x10, 0xD6, 0x4F, 0x37, 0x6E, 0x00, 0x9D, 0xEB, 0xBD, 0xE7, 0xE0, 0x8D, 0x03, 0x7E, 0xE7, 0x21, 0xBD, 0xC5, 0x51, 0xBD, 0xE8, 0x05, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE9, 0x0F, 0xCE, 0x01, 0xB1, 0x4F, 0xBD, 0xED, 0x08, 0x7E, 0xE6, 0xEA, 0xDE, 0x46, 0xDF, 0x4A, 0xDE, 0x48, 0xDF, 0x4C, 0x81, 0xA8, 0x27, 0x05, 0xCE, 0x00, 0x4A, 0x8D, 0x08, 0xC6, 0xA8, 0xBD, 0xEA, 0x31, 0xCE, 0x00, 0x4E, 0xBD, 0xEA, 0x2C, 0xBD, 0xD6, 0xEE, 0x7E, 0xEA, 0x29, 0x81, 0x88, 0x27, 0xB8, 0x81, 0x28, 0x27, 0x09, 0x81, 0xA8, 0x27, 0x05, 0xC6, 0x40, 0xBD, 0xEA, 0x31, 0x8D, 0xCB, 0xDC, 0x4E, 0xDD, 0x46, 0xDC, 0x50, 0xDD, 0x48, 0xBD, 0xD7, 0x07, 0xBD, 0xEA, 0x2F, 0x2B, 0x08, 0xBD, 0xD7, 0xEF, 0xBD, 0xD7, 0xD3, 0x20, 0x0F, 0xC6, 0xCC, 0x10, 0x97, 0x55, 0x27, 0x02, 0xC6, 0xCB, 0xBD, 0xEA, 0x31, 0xBD, 0xD7, 0xCA, 0x5F, 0x9D, 0xF3, 0x27, 0x18, 0xBD, 0xEA, 0x2F, 0xCE, 0x00, 0x4A, 0x8D, 0x33, 0x08, 0x08, 0x8D, 0x2F, 0xC6, 0x42, 0xBD, 0xEA, 0x31, 0x27, 0x05, 0xC6, 0x46, 0xBD, 0xEA, 0x31, 0xBD, 0xE0, 0xEF, 0x5D, 0x27, 0x19, 0x96, 0x4D, 0xC1, 0x46, 0x27, 0x51, 0xBD, 0xD6, 0x9F, 0xBD, 0xD6, 0x6F, 0x96, 0x51, 0xBD, 0xD6, 0x9F, 0x96, 0x4F, 0x97, 0x4B, 0xBD, 0xD6, 0x6F, 0x8C, 0x8D, 0x0E, 0x20, 0x44, 0xE6, 0x01, 0xA6, 0x05, 0x11, 0x24, 0x04, 0xA7, 0x01, 0xE7, 0x05, 0x39, 0xD6, 0x59, 0xC4, 0x7F, 0x4F, 0xDD, 0xBE, 0xCE, 0x00, 0x4A, 0x8D, 0xE8, 0x27, 0x18, 0x10, 0xE6, 0x07, 0x24, 0x0A, 0x40, 0x36, 0xA6, 0x03, 0xE7, 0x03, 0xA7, 0x07, 0x16, 0x32, 0xE0, 0x03, 0x26, 0x1A, 0x96, 0x4D, 0x7E, 0xD6, 0x9F, 0xCE, 0x00, 0x4C, 0x8D, 0xC9, 0x7E, 0xD6, 0x6F, 0x36, 0xBD, 0xD6, 0x9F, 0x32, 0x4C, 0x91, 0x51, 0x23, 0xF6, 0x7E, 0xE1, 0x32, 0x22, 0x07, 0x73, 0x00, 0xBE, 0x70, 0x00, 0xBF, 0x50, 0x11, 0x25, 0x4D, 0x97, 0xBB, 0xD7, 0xBD, 0x16, 0x8D, 0x1B, 0x8C, 0x8D, 0x29, 0xBD, 0xD7, 0x70, 0x7A, 0x00, 0x54, 0x27, 0x20, 0xDC, 0xC0, 0xD3, 0xBC, 0xDD, 0xC0, 0x93, 0xBA, 0x25, 0xEC, 0xDD, 0xC0, 0x8D, 0x22, 0x20, 0xE6, 0x4C, 0x97, 0x54, 0x4F, 0x54, 0xDD, 0xC0, 0x97, 0xBA, 0x97, 0xBC, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0x39, 0x96, 0xE1, 0x44, 0x24, 0x02, 0x46, 0x08, 0xD6, 0x59, 0x2A, 0x01, 0x46, 0x97, 0xE1, 0x39, 0xDF, 0x89, 0xDC, 0x89, 0xD3, 0xBE, 0xDD, 0x89, 0xDE, 0x89, 0x39, 0xD7, 0xBB, 0x97, 0xBD, 0x17, 0x8D, 0xCE, 0x8C, 0x8D, 0xEB, 0x96, 0xE1, 0xBD, 0xD7, 0x70, 0x7A, 0x00, 0x54, 0x27, 0xD1, 0xDC, 0xC0, 0xD3, 0xBC, 0xDD, 0xC0, 0x93, 0xBA, 0x25, 0xEA, 0xDD, 0xC0, 0x8D, 0xC4, 0x20, 0xE4, 0xD6, 0x51, 0xD0, 0x4D, 0x5C, 0xD7, 0x54, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xBD, 0xD7, 0x70, 0xD6, 0x59, 0xC4, 0x7F, 0x3A, 0x96, 0xE1, 0x7A, 0x00, 0x54, 0x26, 0xF1, 0x39, 0x59, 0x7D, 0x00, 0x59, 0x2B, 0x01, 0x54, 0xC4, 0x07, 0x3A, 0x39, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xD6, 0x59, 0xC4, 0x7F, 0x3D, 0x9B, 0x60, 0xDD, 0x52, 0xD6, 0x4B, 0x96, 0x4F, 0x7D, 0x00, 0x59, 0x2B, 0x01, 0x04, 0x04, 0x04, 0xC4, 0x1F, 0x10, 0x97, 0x54, 0xDE, 0x52, 0x3A, 0x3C, 0xCE, 0xD6, 0x96, 0xD6, 0x4B, 0x8D, 0xC7, 0xA6, 0x00, 0x43, 0xD6, 0x54, 0x27, 0x12, 0x38, 0xBD, 0xD7, 0x70, 0x96, 0x57, 0x8C, 0xA7, 0x00, 0x08, 0x7A, 0x00, 0x54, 0x26, 0xF8, 0x86, 0xFF, 0x3C, 0xCE, 0xD6, 0x97, 0xD6, 0x4F, 0x0D, 0x8D, 0xA6, 0xA4, 0x00, 0x38, 0x7E, 0xD7, 0x70, 0xCE, 0x00, 0x4A, 0x3C, 0xBD, 0xEF, 0x43, 0x38, 0xC1, 0xC0, 0x25, 0x02, 0xC6, 0xBF, 0x4F, 0xED, 0x02, 0xDC, 0xA5, 0x4D, 0x27, 0x03, 0xCC, 0x00, 0xFF, 0xED, 0x00, 0x39, 0xCE, 0x00, 0x4E, 0x8D, 0x06, 0xCE, 0x00, 0x4A, 0x8C, 0x8D, 0xD9, 0x96, 0x58, 0x81, 0x36, 0x27, 0x05, 0xEC, 0x02, 0x04, 0xED, 0x02, 0xEC, 0x00, 0x04, 0xED, 0x00, 0x39, 0x8D, 0xEB, 0xBD, 0xEA, 0x29, 0x8D, 0x50, 0x36, 0xBD, 0xE0, 0xA2, 0x96, 0x59, 0x33, 0x2B, 0x07, 0xD4, 0xE1, 0x27, 0x1C, 0x5F, 0x20, 0x12, 0xD4, 0xE1, 0x27, 0x0E, 0xC5, 0xF0, 0x27, 0x04, 0x54, 0x54, 0x54, 0x54, 0xC5, 0x0C, 0x27, 0x02, 0x54, 0x54, 0x5C, 0x96, 0x5B, 0x27, 0x02, 0xCB, 0x04, 0x7E, 0xEC, 0xE2, 0xBD, 0xEA, 0x2C, 0x20, 0xB5, 0x86, 0x4F, 0x97, 0x55, 0x8D, 0xF5, 0x8D, 0x51, 0xBD, 0xEA, 0x29, 0xBD, 0xE0, 0xEF, 0x8D, 0x0F, 0x8D, 0x03, 0x7E, 0xE1, 0x32, 0x16, 0x43, 0xA4, 0x00, 0xD4, 0x57, 0x1B, 0xA7, 0x00, 0x39, 0xD6, 0x59, 0xC4, 0x7F, 0x96, 0x4D, 0x3D, 0x9B, 0x60, 0xDD, 0x52, 0xD6, 0x4B, 0x96, 0x59, 0x2B, 0x19, 0x17, 0xCE, 0xD7, 0x98, 0xC4, 0x07, 0x3A, 0x16, 0xA6, 0x00, 0x54, 0x20, 0x16, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0xC0, 0x30, 0x0C, 0x03, 0x17, 0xCE, 0xD7, 0xA0, 0xC4, 0x03, 0x3A, 0x16, 0xA6, 0x00, 0x54, 0x54, 0xDE, 0x52, 0x3A, 0x39, 0x9D, 0xF3, 0x27, 0x12, 0x81, 0x29, 0x27, 0x0E, 0xBD, 0xEA, 0x2F, 0x81, 0x2C, 0x27, 0x07, 0xBD, 0xEF, 0x0D, 0x8D, 0x2A, 0x20, 0x09, 0xD6, 0x64, 0x7D, 0x00, 0x55, 0x26, 0x02, 0xD6, 0x65, 0xD7, 0x56, 0x86, 0x55, 0x3D, 0xD7, 0x57, 0x39, 0x81, 0x2C, 0x27, 0x08, 0x8D, 0x0E, 0xD7, 0x64, 0x9D, 0xF3, 0x27, 0x07, 0xBD, 0xEF, 0x47, 0x8D, 0x06, 0xD7, 0x65, 0x39, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x44, 0xC1, 0x05, 0x25, 0x02, 0xC0, 0x04, 0x96, 0x59, 0x2B, 0x05, 0xC4, 0x01, 0x27, 0x06, 0xC0, 0x5A, 0x2A, 0x02, 0xC6, 0x03, 0x39, 0x27, 0x03, 0x8D, 0xE0, 0x8C, 0xD6, 0x65, 0x86, 0x55, 0x3D, 0xBD, 0xE0, 0xEF, 0x17, 0xDE, 0x60, 0xED, 0x00, 0xED, 0x02, 0xC6, 0x04, 0x3A, 0x16, 0x9C, 0x62, 0x25, 0xF4, 0x7E, 0xE1, 0x32, 0xD3, 0x6E, 0xDD, 0x93, 0xC6, 0x02, 0xD7, 0x70, 0x5A, 0x8D, 0x41, 0xD7, 0x7D, 0x5C, 0x20, 0x26, 0x7E, 0xEC, 0x2E, 0x3B, 0x10, 0x26, 0xA0, 0x36, 0x10, 0x81, 0x2C, 0x27, 0x0D, 0xBD, 0xEF, 0x0D, 0xC1, 0x02, 0x22, 0xEC, 0x8D, 0x26, 0x9D, 0xF3, 0x27, 0x18, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5A, 0xD1, 0x5D, 0x24, 0xDB, 0x5C, 0xD7, 0x5F, 0xD1, 0x5E, 0x26, 0x01, 0x5F, 0xBD, 0xD9, 0x16, 0xDD, 0x60, 0x96, 0x58, 0x48, 0x84, 0x0E, 0xD3, 0x60, 0xDD, 0x62, 0x39, 0x58, 0xCE, 0xD8, 0x3D, 0x3A, 0xEC, 0x00, 0xDD, 0x58, 0xCC, 0x03, 0x00, 0xDD, 0x64, 0x39, 0xD6, 0x5E, 0x81, 0x2C, 0x27, 0x14, 0xBD, 0xEF, 0x0D, 0x96, 0x5A, 0x5D, 0x27, 0x06, 0xD6, 0x5F, 0x96, 0x58, 0x9A, 0x5B, 0x97, 0x5C, 0x9D, 0xF3, 0x27, 0x20, 0x37, 0xBD, 0xEF, 0x47, 0x17, 0x27, 0x02, 0x86, 0x40, 0x33, 0x5D, 0x27, 0x03, 0x97, 0x5B, 0x8C, 0x97, 0x5A, 0x20, 0xDD, 0xD6, 0x7F, 0x26, 0xCD, 0x96, 0x5E, 0x27, 0xC9, 0x96, 0x5A, 0x97, 0x5C, 0xD1, 0x5E, 0x27, 0x14, 0x96, 0x5E, 0x27, 0x10, 0x37, 0x16, 0x8D, 0x4B, 0xDD, 0x36, 0x8D, 0x9B, 0xCC, 0x40, 0x00, 0xDD, 0x34, 0x8D, 0x59, 0x33, 0xBD, 0xCE, 0x7B, 0xD1, 0x5E, 0x27, 0x48, 0xD7, 0x5E, 0x27, 0x10, 0x8D, 0x32, 0xDD, 0x34, 0xCC, 0x40, 0x00, 0xDD, 0x36, 0xBD, 0xD8, 0x6A, 0x93, 0x60, 0x20, 0x3F, 0x7E, 0xFB, 0xD4, 0x0E, 0xBD, 0x01, 0x91, 0xD6, 0xE8, 0x26, 0x02, 0x8D, 0xB4, 0x7E, 0xFA, 0xA7, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x0D, 0xD1, 0x5D, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xD1, 0x5E, 0x26, 0x01, 0x5F, 0x86, 0x0C, 0x3D, 0x17, 0x27, 0x05, 0xD6, 0x7E, 0x27, 0x04, 0x5F, 0x8B, 0x40, 0x39, 0x8B, 0xF8, 0x39, 0x8D, 0xDE, 0xDD, 0x34, 0x8D, 0xD5, 0xDD, 0x36, 0x86, 0x0C, 0xD3, 0x36, 0xDD, 0xBB, 0xBD, 0xE0, 0xEF, 0x0F, 0xDE, 0x36, 0x9F, 0x91, 0x9E, 0x34, 0x34, 0x32, 0x33, 0xED, 0x00, 0x32, 0x33, 0xED, 0x02, 0x32, 0x33, 0xED, 0x04, 0x32, 0x33, 0xED, 0x06, 0xC6, 0x08, 0x3A, 0x9C, 0xBB, 0x25, 0xE9, 0x9E, 0x91, 0xBD, 0xE1, 0x35, 0x39, 0x27, 0x03, 0x7E, 0xE6, 0x8A, 0x7F, 0x00, 0x7B, 0xBD, 0xE6, 0x51, 0x4D, 0x27, 0x78, 0x9D, 0xEB, 0x81, 0xC9, 0x26, 0xF4, 0x7A, 0x00, 0x7B, 0x2A, 0xEF, 0x9D, 0xEB, 0x7E, 0xE6, 0x8D, 0x26, 0x03, 0x7E, 0xE6, 0x5F, 0x81, 0x84, 0x26, 0x03, 0x7C, 0x00, 0x7B, 0x7E, 0xE6, 0x64, 0xCE, 0x00, 0xCA, 0x4F, 0x5F, 0xED, 0x00, 0xED, 0x02, 0x9D, 0xEB, 0x25, 0x14, 0x81, 0x48, 0x27, 0x21, 0x81, 0x4F, 0x27, 0x17, 0xCC, 0xA0, 0x00, 0x97, 0xC9, 0xD7, 0xDD, 0xD7, 0xCE, 0x7E, 0xEF, 0xD7, 0x81, 0x38, 0x25, 0x03, 0x7E, 0xEA, 0x3C, 0xC6, 0x07, 0x8D, 0x1B, 0x9D, 0xEB, 0x25, 0xF1, 0x20, 0xE3, 0x9D, 0xEB, 0x25, 0x0B, 0xBD, 0xEB, 0x76, 0x25, 0xDA, 0x81, 0x46, 0x22, 0xD6, 0x80, 0x07, 0xC6, 0x0F, 0x8D, 0x02, 0x20, 0xEB, 0x68, 0x03, 0x69, 0x02, 0x24, 0x03, 0x7E, 0xF0, 0x58, 0x54, 0x26, 0xF4, 0x80, 0x30, 0xAB, 0x03, 0xA7, 0x03, 0x39, 0xBD, 0x01, 0x9D, 0x25, 0x05, 0x81, 0x26, 0x27, 0x9D, 0x0C, 0x7E, 0xF3, 0x5C, 0xC6, 0x04, 0x3A, 0xDF, 0x89, 0xCE, 0x01, 0xB3, 0xDF, 0xDE, 0x5F, 0x6F, 0x00, 0xDE, 0x89, 0xA6, 0x00, 0x08, 0x4D, 0x26, 0x01, 0x39, 0xDF, 0x89, 0x81, 0x22, 0x26, 0x02, 0xC8, 0x01, 0x81, 0x3A, 0x26, 0x12, 0xC5, 0x01, 0x26, 0x0E, 0xC4, 0xFD, 0xA6, 0x00, 0x81, 0xC9, 0x27, 0xE3, 0x81, 0xDD, 0x27, 0xDF, 0x86, 0x3A, 0x4D, 0x2A, 0x32, 0x5D, 0x26, 0x2F, 0x81, 0x85, 0x26, 0x02, 0xCA, 0x02, 0x81, 0x83, 0x27, 0x04, 0x81, 0xDD, 0x26, 0x02, 0xCA, 0x04, 0xF7, 0x01, 0x84, 0xBD, 0x01, 0xA6, 0xF6, 0x01, 0x84, 0x81, 0xF7, 0x22, 0x0E, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x2B, 0x09, 0x08, 0x3C, 0x8D, 0x0B, 0x38, 0x20, 0xF5, 0x86, 0x21, 0x84, 0x7F, 0x8D, 0x02, 0x20, 0x9E, 0xDE, 0xDE, 0x8C, 0x02, 0xAD, 0x24, 0x05, 0xA7, 0x00, 0x08, 0xDF, 0xDE, 0x39, 0x38, 0x8D, 0x05, 0x27, 0x2F, 0x7E, 0xEA, 0x3C, 0xBD, 0xE6, 0xB2, 0x7E, 0x00, 0xF3, 0x9D, 0xEB, 0x81, 0x45, 0x26, 0x08, 0x9D, 0xEB, 0x24, 0x04, 0x8D, 0xEE, 0x27, 0x18, 0xBD, 0xE3, 0xB3, 0x7E, 0xE5, 0x3D, 0x09, 0xDF, 0xA5, 0xBD, 0xF4, 0x12, 0xD6, 0x7A, 0xFA, 0x01, 0x83, 0xC1, 0x02, 0x26, 0xCE, 0xBD, 0xE7, 0x66, 0xBD, 0xE3, 0xB9, 0x24, 0x03, 0x7E, 0xE6, 0x42, 0xBD, 0xD9, 0xF1, 0xDC, 0xDE, 0x83, 0x01, 0xB4, 0xD7, 0x34, 0x86, 0x01, 0x97, 0x35, 0xBD, 0xCC, 0x03, 0xCE, 0x01, 0xB3, 0xD6, 0x35, 0x26, 0x25, 0x5F, 0xBD, 0xDB, 0xAE, 0xBD, 0xD0, 0x2E, 0x25, 0x0B, 0x80, 0x30, 0x36, 0x86, 0x0A, 0x3D, 0x32, 0x1B, 0x16, 0x20, 0xED, 0xC0, 0x01, 0xC9, 0x01, 0x81, 0x41, 0x26, 0x05, 0xBD, 0xE7, 0x66, 0x20, 0xBF, 0x81, 0x4C, 0x26, 0x0C, 0x8D, 0x32, 0x7F, 0x00, 0x35, 0xBD, 0xE7, 0x66, 0x20, 0xC7, 0x31, 0x31, 0x81, 0x0D, 0x26, 0x0D, 0x8D, 0x22, 0xBD, 0xE7, 0x66, 0xCE, 0x01, 0xB3, 0xDF, 0xF4, 0x7E, 0xE2, 0x96, 0x81, 0x03, 0x26, 0x06, 0xBD, 0xE7, 0x66, 0x7E, 0xE2, 0x71, 0x8D, 0x02, 0x20, 0xB0, 0x81, 0x20, 0x27, 0x07, 0x81, 0x4E, 0x26, 0x0F, 0x8C, 0xC6, 0xFF, 0xA6, 0x00, 0x27, 0x07, 0xBD, 0xF9, 0xC6, 0x08, 0x5A, 0x26, 0xF5, 0x39, 0x81, 0x49, 0x27, 0x14, 0x81, 0x58, 0x27, 0x0E, 0x81, 0x48, 0x26, 0x4B, 0x6F, 0x00, 0x3C, 0x32, 0x33, 0x83, 0x01, 0xB4, 0xD7, 0x34, 0x8D, 0xDA, 0x8D, 0x6E, 0x81, 0x0D, 0x27, 0xAA, 0x81, 0x03, 0x27, 0xA6, 0x81, 0x0A, 0x27, 0xD9, 0x81, 0x08, 0x26, 0x0B, 0x8C, 0x01, 0xB3, 0x27, 0xE9, 0x8D, 0x7E, 0x8D, 0x32, 0x20, 0xE3, 0xD6, 0x34, 0xC1, 0xF8, 0x27, 0xDD, 0x5C, 0xD7, 0x34, 0xDF, 0xDE, 0x21, 0x08, 0xE6, 0x00, 0x26, 0xFB, 0x21, 0x09, 0xE6, 0x00, 0xE7, 0x01, 0x9C, 0xDE, 0x26, 0xF7, 0xA7, 0x00, 0x08, 0x8D, 0x62, 0x20, 0xC1, 0x81, 0x44, 0x26, 0x18, 0xA6, 0x00, 0x27, 0xA0, 0x8D, 0x04, 0x5A, 0x26, 0xF7, 0x39, 0x7A, 0x00, 0x34, 0x3C, 0x21, 0x08, 0xA6, 0x01, 0xA7, 0x00, 0x26, 0xF9, 0x38, 0x39, 0x81, 0x43, 0x26, 0x2A, 0xA6, 0x00, 0x27, 0x0C, 0x8D, 0x0B, 0x24, 0xFC, 0xA7, 0x00, 0x08, 0x8D, 0x33, 0x5A, 0x26, 0xF0, 0x39, 0xBD, 0xF8, 0x65, 0x81, 0x03, 0x27, 0x11, 0x81, 0x0A, 0x27, 0x0D, 0x81, 0x08, 0x27, 0x09, 0x81, 0x0D, 0x27, 0x05, 0x81, 0x20, 0x25, 0xE9, 0x0D, 0x39, 0x81, 0x08, 0x27, 0x04, 0x81, 0x42, 0x26, 0x11, 0x8D, 0x04, 0x5A, 0x26, 0xFB, 0x39, 0x8C, 0x01, 0xB3, 0x27, 0xD3, 0x09, 0x86, 0x08, 0x7E, 0xF9, 0xC6, 0x81, 0x4B, 0x27, 0x05, 0x80, 0x53, 0x27, 0x01, 0x39, 0x97, 0x36, 0x8D, 0xC1, 0x97, 0x37, 0xA6, 0x00, 0x27, 0x14, 0x7D, 0x00, 0x36, 0x26, 0x04, 0x8D, 0xE3, 0x08, 0x8C, 0x8D, 0x8D, 0xA6, 0x00, 0x91, 0x37, 0x26, 0xEB, 0x5A, 0x26, 0xE8, 0x39, 0x86, 0x4F, 0x97, 0x7C, 0x39, 0x81, 0x87, 0x27, 0x09, 0x81, 0xA6, 0x27, 0x06, 0x9D, 0xF3, 0x7E, 0xE7, 0x1F, 0xC6, 0x5F, 0xD7, 0x7D, 0x7E, 0x00, 0xEB, 0x38, 0x36, 0x0F, 0x17, 0xD6, 0x7D, 0x26, 0x02, 0x6E, 0x00, 0x36, 0xCE, 0x21, 0x50, 0x3C, 0x30, 0xCC, 0x00, 0x03, 0xBD, 0xC9, 0x96, 0x38, 0x31, 0x7E, 0xF9, 0xEE, 0x08, 0xDF, 0xF4, 0x7D, 0x00, 0x7C, 0x27, 0x3C, 0x86, 0x5B, 0xBD, 0xF9, 0xC6, 0x96, 0xE2, 0xBD, 0xF4, 0x19, 0x86, 0x5D, 0x7E, 0xF9, 0xC6, 0xBD, 0xEF, 0x4C, 0x08, 0xBD, 0xE5, 0x66, 0x86, 0xA6, 0x4A, 0x26, 0xFD, 0x09, 0x26, 0xF5, 0x39, 0xCE, 0x00, 0xFD, 0x9D, 0xEB, 0x81, 0xB2, 0x26, 0x05, 0x9D, 0xEB, 0xCE, 0x00, 0xFB, 0x3C, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x4C, 0x3C, 0x32, 0x33, 0x38, 0xED, 0x00, 0x39, 0xBD, 0xEB, 0xC7, 0x27, 0x03, 0xBD, 0xED, 0x85, 0xDC, 0x9D, 0x93, 0x9B, 0x20, 0x19, 0x93, 0x99, 0x36, 0x9D, 0xF3, 0x81, 0x89, 0x26, 0x09, 0x31, 0xDC, 0xA1, 0xC3, 0x00, 0x01, 0x36, 0x9D, 0xEB, 0x32, 0x8C, 0xDC, 0x78, 0x8C, 0xDC, 0xFD, 0xDD, 0xCA, 0xC6, 0x90, 0x7F, 0x00, 0x84, 0x0D, 0x7E, 0xF2, 0xC7, 0xD6, 0x7A, 0x7E, 0xF2, 0xBC, 0xBD, 0x01, 0xA0, 0x81, 0xC9, 0x24, 0x07, 0x81, 0xC4, 0x27, 0x5B, 0x7E, 0xE5, 0x49, 0x81, 0xF5, 0x27, 0x99, 0xCE, 0xC2, 0x93, 0x81, 0xE8, 0x7E, 0xE5, 0x54, 0xBD, 0xE9, 0x0E, 0xBD, 0xEF, 0x4F, 0xCE, 0x02, 0xAE, 0xCC, 0x30, 0x00, 0xED, 0x00, 0x96, 0xCC, 0x8D, 0x07, 0x96, 0xCD, 0x8D, 0x03, 0x7E, 0xEC, 0xF6, 0x16, 0x54, 0x54, 0x54, 0x54, 0x8D, 0x03, 0x16, 0xC4, 0x0F, 0x26, 0x05, 0x8C, 0x02, 0xAE, 0x27, 0x0D, 0xC1, 0x09, 0x23, 0x02, 0xCB, 0x07, 0xCB, 0x30, 0xE7, 0x00, 0x08, 0x6F, 0x00, 0x39, 0xDF, 0xD7, 0xE6, 0x00, 0xBD, 0xED, 0x5F, 0x3C, 0xDE, 0xD7, 0xBD, 0xEE, 0x38, 0xDE, 0xD7, 0x32, 0x33, 0xED, 0x02, 0x39, 0x9D, 0xEB, 0xBD, 0xEA, 0x2C, 0xBD, 0xEB, 0x1B, 0xDF, 0x34, 0xBD, 0xE9, 0x0F, 0xBD, 0xEF, 0x47, 0x5A, 0xD7, 0x38, 0xDE, 0x34, 0xE1, 0x00, 0x24, 0x6D, 0x81, 0x29, 0x27, 0x06, 0xBD, 0xEF, 0x47, 0x5D, 0x26, 0x02, 0xC6, 0xFF, 0xD7, 0x39, 0xBD, 0xEA, 0x29, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xDE, 0x34, 0xEC, 0x02, 0x93, 0x9B, 0x22, 0x02, 0x8D, 0xB3, 0xEE, 0x02, 0xD6, 0x38, 0x3A, 0xDF, 0x36, 0x8D, 0x4A, 0x3C, 0xDE, 0x34, 0xA6, 0x00, 0x90, 0x38, 0x4C, 0x11, 0x24, 0x01, 0x16, 0xD1, 0x39, 0x23, 0x02, 0xD6, 0x39, 0xDE, 0x36, 0xDF, 0x9F, 0x38, 0x7E, 0xEE, 0x3A, 0x96, 0xE8, 0x36, 0xBD, 0xEB, 0xC7, 0x27, 0x06, 0x2A, 0x12, 0xC1, 0xFE, 0x26, 0x0E, 0xD7, 0xE8, 0xBD, 0xFA, 0x7B, 0xD6, 0xE6, 0x32, 0x97, 0xE8, 0x4F, 0x7E, 0xEC, 0xE3, 0xC6, 0x26, 0x7E, 0xE2, 0x38, 0xBD, 0xEF, 0x0D, 0xC4, 0xFE, 0xC1, 0x36, 0x23, 0xF4, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0x7E, 0xEE, 0x53, 0xBD, 0xE9, 0x1A, 0xC6, 0x01, 0x37, 0x96, 0x84, 0x26, 0x11, 0xBD, 0xEF, 0x10, 0x30, 0xE7, 0x00, 0x27, 0xE2, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0x3C, 0x8D, 0xD7, 0x37, 0x3C, 0xC6, 0x01, 0x9D, 0xF3, 0x81, 0x2C, 0x26, 0x03, 0xBD, 0xEF, 0x47, 0x4F, 0xDD, 0xD0, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0xCB, 0x33, 0xD7, 0xCD, 0x38, 0xBD, 0xEE, 0x58, 0xDF, 0xC9, 0x17, 0x33, 0x9F, 0x91, 0x10, 0x25, 0x2B, 0x4C, 0x90, 0xCD, 0x25, 0x26, 0x4C, 0x7D, 0x00, 0xCD, 0x27, 0x22, 0x0F, 0x5A, 0x3A, 0x5C, 0xDD, 0xCE, 0x35, 0xDE, 0xCB, 0xD6, 0xCD, 0x32, 0xA1, 0x00, 0x26, 0x1B, 0x08, 0x5A, 0x26, 0xF7, 0xD6, 0xCF, 0x96, 0xD1, 0x27, 0x0F, 0x4A, 0x97, 0xD1, 0x26, 0x09, 0x8C, 0xD6, 0xD0, 0x9E, 0x91, 0x0E, 0x7E, 0xEC, 0xE2, 0x5F, 0xD7, 0xD0, 0xDC, 0xCE, 0x4A, 0x27, 0xF0, 0xDE, 0xC9, 0x20, 0xCE, 0xBD, 0xEF, 0x0D, 0x37, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0xBD, 0xEA, 0x29, 0x96, 0x84, 0x2B, 0x05, 0xBD, 0xEF, 0x10, 0x20, 0x03, 0xBD, 0xEE, 0xA6, 0x17, 0x33, 0x36, 0xBD, 0xEC, 0xFC, 0x32, 0x27, 0x06, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0x7E, 0xEE, 0x9D, 0x0B, 0x76, 0xB3, 0x83, 0xBD, 0xD3, 0x79, 0x1E, 0xF4, 0xA6, 0xF5, 0x7B, 0x83, 0xFC, 0xB0, 0x10, 0x7C, 0x0C, 0x1F, 0x67, 0xCA, 0x7C, 0xDE, 0x53, 0xCB, 0xC1, 0x7D, 0x14, 0x64, 0x70, 0x4C, 0x7D, 0xB7, 0xEA, 0x51, 0x7A, 0x7D, 0x63, 0x30, 0x88, 0x7E, 0x7E, 0x92, 0x44, 0x99, 0x3A, 0x7E, 0x4C, 0xCC, 0x91, 0xC7, 0x7F, 0xAA, 0xAA, 0xAA, 0x13, 0x81, 0x00, 0x00, 0x00, 0x00, 0x96, 0xCE, 0x36, 0x2A, 0x02, 0x8D, 0x30, 0x96, 0xC9, 0x36, 0x81, 0x81, 0x25, 0x06, 0xCE, 0xF0, 0x8B, 0xBD, 0xF1, 0xC6, 0xCE, 0xDE, 0x60, 0xBD, 0xF5, 0xF8, 0x32, 0x81, 0x81, 0x25, 0x06, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x72, 0x32, 0x4D, 0x2B, 0x0E, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x03, 0x7E, 0xF3, 0x35, 0x73, 0x00, 0xCE, 0x8D, 0xF8, 0x7E, 0xF5, 0x93, 0x8D, 0x05, 0x2B, 0x26, 0x7E, 0xF2, 0x51, 0xBD, 0xE9, 0x0C, 0x3C, 0x3C, 0x34, 0x30, 0xBD, 0xF2, 0x72, 0xBD, 0xD2, 0x99, 0xBD, 0xEA, 0x29, 0xBD, 0xF2, 0x6C, 0x30, 0x8D, 0xE7, 0x31, 0x38, 0x38, 0xCE, 0x00, 0xBA, 0x7E, 0xF2, 0xD9, 0x8D, 0xDF, 0x2B, 0xDA, 0x39, 0xBD, 0xEB, 0x1B, 0x3C, 0x96, 0x84, 0x36, 0xCC, 0x00, 0x34, 0x8D, 0x15, 0xBD, 0xEA, 0x2F, 0xBD, 0xEB, 0x1B, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x32, 0x33, 0x3C, 0x8D, 0x05, 0xCE, 0x00, 0x34, 0x32, 0x33, 0xDD, 0xBF, 0xC6, 0x05, 0x7E, 0xF7, 0xB2, 0xCE, 0x00, 0x74, 0x81, 0xE9, 0x27, 0x0A, 0x81, 0xDC, 0x27, 0x03, 0x7E, 0xE6, 0x92, 0xCE, 0x00, 0x76, 0x3C, 0x9D, 0xEB, 0xC6, 0xFF, 0xD7, 0xA5, 0x81, 0x91, 0x27, 0x14, 0x5A, 0x81, 0x93, 0x27, 0x0F, 0xC6, 0x81, 0xBD, 0xEA, 0x31, 0x8D, 0x51, 0xBD, 0xE3, 0xB9, 0x24, 0x07, 0x7E, 0xE6, 0x42, 0xD7, 0xA6, 0x9D, 0xEB, 0xDC, 0xA5, 0xC3, 0x00, 0x01, 0x38, 0xED, 0x00, 0x39, 0x0E, 0xD7, 0x7A, 0xF7, 0x01, 0x83, 0xDE, 0xE2, 0xDF, 0x78, 0xDE, 0x76, 0x8D, 0x40, 0x26, 0x4A, 0xCE, 0xE1, 0x8A, 0xC1, 0x26, 0x25, 0x03, 0xCE, 0xDF, 0x5C, 0x39, 0x44, 0x4E, 0x4E, 0x45, 0x57, 0x50, 0x46, 0x4E, 0x46, 0x53, 0x49, 0x45, 0x46, 0x44, 0x41, 0x4F, 0x4E, 0x4F, 0x44, 0x53, 0x26, 0x03, 0x7E, 0xE5, 0x60, 0x8D, 0x06, 0xBD, 0xE3, 0xB9, 0x7E, 0xE5, 0x62, 0x25, 0x04, 0x81, 0x28, 0x27, 0x03, 0x7E, 0xE6, 0xB2, 0xBD, 0xEA, 0x24, 0xBD, 0xEF, 0x4F, 0xDF, 0xA5, 0x39, 0x27, 0xFD, 0x3C, 0xDE, 0xE2, 0x08, 0x38, 0x27, 0xF6, 0xDF, 0xA5, 0x39, 0x30, 0xCC, 0xE5, 0x19, 0xED, 0x00, 0xDE, 0xA5, 0x08, 0x27, 0x07, 0x09, 0x09, 0xDF, 0xA5, 0x7E, 0xE6, 0x26, 0x7E, 0xE6, 0x51, 0x0E, 0x96, 0x73, 0x26, 0xD9, 0x7E, 0xF8, 0x79, 0x81, 0x03, 0x26, 0xD2, 0x7D, 0x00, 0x73, 0x26, 0x03, 0xB7, 0x01, 0x7F, 0x7F, 0x00, 0x73, 0x38, 0xDE, 0x74, 0x8D, 0xC3, 0x26, 0xD3, 0x7E, 0xE5, 0x7E, 0x81, 0x03, 0x26, 0x02, 0x97, 0x73, 0x7E, 0xEE, 0x91, 0xF2, 0xBA, 0xF3, 0x35, 0xF2, 0xD5, 0x01, 0x15, 0xF6, 0x2A, 0xF5, 0x4D, 0xF0, 0xB9, 0xF5, 0xC9, 0xF6, 0x8C, 0xF6, 0x86, 0xF6, 0xD2, 0xEF, 0x5F, 0xEE, 0x82, 0xEC, 0xED, 0xEF, 0x1C, 0xEE, 0xA2, 0xEE, 0x8E, 0xEE, 0xAD, 0xEE, 0xC8, 0xEE, 0xCF, 0xFB, 0x9C, 0xFC, 0x11, 0xFB, 0xED, 0xEC, 0xDB, 0x79, 0xEF, 0x80, 0x79, 0xEF, 0x75, 0x7B, 0xF0, 0xF1, 0x7B, 0xF1, 0xC8, 0x7F, 0xF5, 0x56, 0x50, 0xEA, 0x8E, 0x46, 0xEA, 0x8D, 0x01, 0xC6, 0xB4, 0xBD, 0xEA, 0x31, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x4C, 0xFF, 0x01, 0x16, 0x39, 0xC1, 0x18, 0x25, 0x03, 0x7E, 0xEA, 0x3C, 0x58, 0x7E, 0x00, 0xEB, 0xFE, 0x01, 0x80, 0x20, 0x21, 0xCE, 0x40, 0x00, 0x20, 0x36, 0xCE, 0x40, 0x00, 0x20, 0x18, 0x81, 0x40, 0x27, 0x03, 0x7E, 0xEF, 0x66, 0x9D, 0xEB, 0xBD, 0xEF, 0x43, 0x96, 0xA5, 0x84, 0x3F, 0x8B, 0x40, 0x97, 0xA5, 0xDE, 0xA5, 0x21, 0x16, 0x4F, 0x07, 0x0F, 0xB7, 0xFF, 0xF0, 0xE7, 0x00, 0x9A, 0x7E, 0xB7, 0xFF, 0xF0, 0x06, 0x39, 0x8D, 0x08, 0xC6, 0xFF, 0x39, 0x8D, 0x03, 0x7E, 0xEF, 0x47, 0x4F, 0x07, 0x0F, 0xB7, 0xFF, 0xF0, 0xE6, 0x00, 0x9A, 0x7E, 0xB7, 0xFF, 0xF0, 0x06, 0x4F, 0xD7, 0xE1, 0x39, 0xBD, 0x01, 0x94, 0xDE, 0xF4, 0x9D, 0xEB, 0x81, 0x26, 0x26, 0x03, 0x7E, 0xD9, 0x8A, 0x81, 0xBC, 0x27, 0x0C, 0x81, 0xEA, 0x25, 0x03, 0x7E, 0xE4, 0x6B, 0xDF, 0xF4, 0x7E, 0xE9, 0xEB, 0x9D, 0xEB, 0x81, 0x40, 0x26, 0xF5, 0x9D, 0xEB, 0xBD, 0xEA, 0x24, 0xBD, 0xEF, 0x4F, 0x96, 0xCC, 0x84, 0x3F, 0x8B, 0x40, 0x97, 0xCC, 0xDE, 0xCC, 0x8D, 0xB6, 0x7E, 0xEC, 0xE3, 0x38, 0x97, 0xE1, 0x96, 0x7E, 0x27, 0x0D, 0x4F, 0x07, 0x0F, 0xB7, 0xFF, 0xF0, 0xBF, 0xBE, 0xFE, 0x8E, 0xBE, 0xFD, 0x06, 0x96, 0xE1, 0x6E, 0x00, 0xD6, 0x5E, 0x27, 0x05, 0x36, 0xBD, 0xD8, 0xB3, 0x32, 0x8D, 0xDD, 0xFE, 0x01, 0x80, 0x7E, 0xFA, 0x1E, 0x8D, 0x1B, 0xCC, 0x0F, 0x01, 0xBA, 0x01, 0x82, 0xB7, 0x01, 0x82, 0xF7, 0x01, 0x2B, 0x32, 0x33, 0x38, 0x39, 0x8D, 0xC3, 0xCE, 0x40, 0x00, 0xBD, 0xFB, 0xD9, 0x8D, 0x01, 0x39, 0x38, 0x4F, 0x07, 0x9A, 0x7E, 0x85, 0x02, 0x27, 0x08, 0x0F, 0xBE, 0xBE, 0xFE, 0xB7, 0xFF, 0xF0, 0x06, 0x6E, 0x00, 0xE4, 0xC4, 0xE6, 0x1A, 0xE6, 0x04, 0xE6, 0x85, 0xE6, 0x72, 0xE6, 0x51, 0xDC, 0x0D, 0xDF, 0x2A, 0xC5, 0x41, 0xC4, 0x82, 0xE8, 0xBB, 0xEB, 0x12, 0xE8, 0x0E, 0xE6, 0xD3, 0xE5, 0xFA, 0xDF, 0x96, 0xE6, 0x31, 0xE5, 0x7E, 0xE0, 0x71, 0xE5, 0xA6, 0xE4, 0x0D, 0xC3, 0xC7, 0xE3, 0xCD, 0xFD, 0x5C, 0xFC, 0x3B, 0xE4, 0x0B, 0xE7, 0x1C, 0xC6, 0x5B, 0xFB, 0x55, 0xFB, 0xBF, 0xFF, 0xA5, 0xFC, 0x04, 0xFE, 0x2F, 0x4E, 0x46, 0x53, 0x4E, 0x52, 0x47, 0x4F, 0x44, 0x46, 0x43, 0x4F, 0x56, 0x4F, 0x4D, 0x55, 0x4C, 0x42, 0x53, 0x44, 0x44, 0x2F, 0x30, 0x49, 0x44, 0x54, 0x4D, 0x4F, 0x53, 0x4C, 0x53, 0x53, 0x54, 0x43, 0x4E, 0x49, 0x4F, 0x46, 0x4D, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x00, 0x20, 0x49, 0x4E, 0x20, 0x00, 0x0D, 0x4F, 0x4B, 0x0D, 0x00, 0x0D, 0x42, 0x52, 0x45, 0x41, 0x4B, 0x00, 0x81, 0x3A, 0x24, 0x0B, 0x81, 0x20, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0x80, 0x30, 0x80, 0xD0, 0x39, 0x30, 0xC6, 0x04, 0x3A, 0xC6, 0x12, 0xDF, 0x89, 0xA6, 0x00, 0x80, 0x80, 0x26, 0x14, 0xEE, 0x01, 0xDF, 0x8B, 0xDE, 0xB5, 0x27, 0x08, 0x9C, 0x8B, 0x27, 0x08, 0x8D, 0x3B, 0x20, 0xE6, 0xDE, 0x8B, 0xDF, 0xB5, 0xDE, 0x89, 0x4D, 0x39, 0x8D, 0x1E, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x9E, 0xBB, 0xDE, 0xBD, 0x08, 0x09, 0xA6, 0x00, 0x36, 0x9C, 0xC1, 0x26, 0xF8, 0x31, 0x9F, 0xBF, 0x9E, 0x91, 0x32, 0x06, 0x39, 0x4F, 0x58, 0xD3, 0x99, 0x9F, 0x91, 0xC3, 0x00, 0x3A, 0x25, 0x11, 0x93, 0x91, 0x24, 0x0D, 0xD3, 0x91, 0x39, 0x4F, 0xDF, 0x89, 0xD3, 0x89, 0xDD, 0x8B, 0xDE, 0x8B, 0x39, 0xC6, 0x0C, 0xBD, 0x01, 0x97, 0xBD, 0x01, 0x9A, 0xBD, 0xFC, 0x86, 0xB6, 0x01, 0x6E, 0x27, 0x03, 0xBD, 0xCB, 0x6A, 0xBD, 0xE3, 0xEE, 0xBD, 0xDF, 0x67, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0xBD, 0xE7, 0xBC, 0x3A, 0xA6, 0x00, 0xBD, 0xE7, 0xBE, 0xA6, 0x01, 0xBD, 0xE7, 0xBE, 0xCE, 0xE1, 0xAF, 0xBD, 0xE7, 0xA8, 0xDE, 0xE2, 0x08, 0x27, 0x03, 0xBD, 0xDA, 0x8D, 0xBD, 0xE7, 0x6A, 0xCE, 0xE1, 0xBC, 0xBD, 0xE7, 0xA8, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xBD, 0xFA, 0xA4, 0x25, 0xF6, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0x27, 0xEF, 0x25, 0x06, 0xBD, 0xE3, 0x11, 0x7E, 0xDA, 0x79, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0xFF, 0x01, 0xB0, 0xBD, 0xE3, 0x11, 0xD7, 0x82, 0xBD, 0xE3, 0xB9, 0x25, 0x1C, 0xDC, 0xC1, 0xA3, 0x00, 0xD3, 0x95, 0xDD, 0x95, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0xAE, 0x00, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x95, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xB6, 0x01, 0xB2, 0x27, 0x25, 0xDC, 0x95, 0xDD, 0xBD, 0xDB, 0x82, 0x89, 0x00, 0xDD, 0xBB, 0xBD, 0xE1, 0xFE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x8E, 0x01, 0xAD, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBF, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xDE, 0xBB, 0xDF, 0x95, 0xBD, 0xE3, 0xD9, 0xDE, 0xC1, 0x7E, 0xCB, 0x9F, 0xDE, 0x93, 0xEC, 0x00, 0x26, 0x01, 0x39, 0x3C, 0xC6, 0x04, 0x3A, 0x08, 0xA6, 0x00, 0x26, 0xFB, 0x08, 0x3C, 0x30, 0xEC, 0x00, 0xEE, 0x02, 0xED, 0x00, 0x38, 0x31, 0x31, 0x20, 0xE4, 0x7F, 0x00, 0x85, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0x01, 0xB1, 0xDF, 0xDE, 0x9F, 0x91, 0x07, 0x97, 0x87, 0x01, 0x0F, 0x9E, 0xF4, 0x33, 0xC1, 0x20, 0x27, 0x38, 0xD7, 0x81, 0xC1, 0x22, 0x27, 0x5B, 0x96, 0x85, 0x26, 0x2E, 0x7E, 0xE4, 0x89, 0x01, 0xC6, 0x86, 0x20, 0x26, 0xC1, 0x30, 0x25, 0x04, 0xC1, 0x3C, 0x25, 0x1E, 0x5D, 0x2B, 0x19, 0xCE, 0xC1, 0x50, 0x9E, 0xF4, 0x5F, 0x08, 0x32, 0x81, 0x20, 0x27, 0xFB, 0xA0, 0x00, 0x27, 0xF6, 0x81, 0x80, 0x26, 0x35, 0xCA, 0x80, 0xDE, 0xDE, 0x8C, 0xC6, 0x21, 0x9F, 0xF4, 0x9E, 0x91, 0x96, 0x87, 0x06, 0x7E, 0xE4, 0xA3, 0xE7, 0x00, 0x27, 0x38, 0xC0, 0x3A, 0x27, 0x04, 0xC1, 0x4B, 0x26, 0x02, 0xD7, 0x85, 0xC0, 0x49, 0x26, 0xA4, 0xD7, 0x81, 0x0F, 0x9E, 0xF4, 0x33, 0x5D, 0x27, 0xDB, 0xD1, 0x81, 0x27, 0xD7, 0x08, 0xE7, 0x00, 0x20, 0xF3, 0x9E, 0xF4, 0x5C, 0xA6, 0x00, 0x08, 0x2A, 0xFB, 0xA6, 0x00, 0x26, 0xB2, 0x9F, 0xF4, 0x9E, 0x91, 0xBD, 0x01, 0xA3, 0x9E, 0xF4, 0x33, 0x20, 0xB5, 0xE7, 0x01, 0xE7, 0x02, 0xDC, 0xDE, 0x83, 0x01, 0xAD, 0xCE, 0x01, 0xB1, 0xDF, 0xF4, 0x39, 0xDE, 0x93, 0xEC, 0x00, 0x27, 0x0A, 0xDC, 0xA5, 0xA3, 0x02, 0x23, 0x05, 0xEE, 0x00, 0x20, 0xF2, 0x0D, 0xDF, 0xC1, 0x39, 0x26, 0xFB, 0x37, 0xBD, 0xC3, 0xDB, 0x33, 0x6F, 0x00, 0x08, 0xDF, 0x95, 0xDE, 0x93, 0x09, 0xDF, 0xF4, 0xBD, 0x01, 0x8E, 0xDE, 0xA1, 0xDF, 0x9D, 0xBD, 0xE5, 0x60, 0xDE, 0x95, 0xDF, 0x97, 0xDF, 0x99, 0xCE, 0x01, 0x41, 0xFF, 0x01, 0x3D, 0x38, 0x9E, 0x9B, 0x4F, 0x36, 0x97, 0xA7, 0x97, 0xA8, 0x97, 0x86, 0xB7, 0x01, 0x6E, 0x6E, 0x00, 0xC6, 0xFE, 0xD7, 0xE8, 0x7E, 0x00, 0xF3, 0x8D, 0xF7, 0x07, 0x36, 0x8D, 0xF7, 0xBD, 0xE6, 0xB2, 0x8D, 0xA3, 0x32, 0x06, 0x3C, 0x27, 0x16, 0xBD, 0x00, 0xF3, 0x27, 0x16, 0x81, 0xA8, 0x26, 0x0A, 0xBD, 0x00, 0xEB, 0x27, 0x08, 0xBD, 0xE6, 0xB2, 0x27, 0x08, 0x7E, 0xEA, 0x3C, 0xCE, 0xFF, 0xFF, 0xDF, 0xA5, 0x38, 0x31, 0x31, 0xBD, 0xE7, 0x6A, 0xBD, 0xE5, 0x66, 0xEC, 0x00, 0x26, 0x06, 0x7F, 0x00, 0xE8, 0x7E, 0xE2, 0x71, 0xEC, 0x02, 0x93, 0xA5, 0x22, 0xF4, 0xEC, 0x02, 0x3C, 0xBD, 0xF4, 0x19, 0xBD, 0xE7, 0xB9, 0x38, 0xBD, 0xD9, 0xF1, 0x3C, 0x3C, 0xCE, 0x01, 0xB2, 0x08, 0xA6, 0x00, 0x27, 0xD0, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x16, 0x9D, 0xEB, 0xC1, 0xF5, 0x24, 0x0E, 0x37, 0xBD, 0xEA, 0x2C, 0x33, 0xC1, 0xEF, 0x22, 0x05, 0x37, 0xBD, 0xEA, 0x26, 0x33, 0xC0, 0xEA, 0x58, 0xCE, 0xC3, 0x65, 0x7E, 0xEA, 0x85, 0xC1, 0x3F, 0x26, 0x03, 0x7E, 0xE3, 0x3A, 0xC1, 0x27, 0x27, 0x03, 0x7E, 0xE3, 0x3E, 0xCC, 0x3A, 0xDD, 0x08, 0xA7, 0x00, 0x7F, 0x00, 0x81, 0x7E, 0xE3, 0x8D, 0xC1, 0xC9, 0x26, 0x05, 0x08, 0x86, 0x3A, 0xA7, 0x00, 0x08, 0xDF, 0xDE, 0x7E, 0xE3, 0x6E, 0x80, 0x7F, 0xDF, 0x89, 0xCE, 0xC1, 0x51, 0x4A, 0x26, 0x01, 0x39, 0x6D, 0x00, 0x08, 0x2A, 0xFB, 0x20, 0xF5, 0x86, 0x80, 0x97, 0x86, 0xBD, 0xE6, 0xD3, 0xBD, 0xE1, 0xD8, 0x38, 0x26, 0x04, 0xDE, 0x89, 0x3A, 0x35, 0xC6, 0x09, 0xBD, 0xE2, 0x1A, 0xBD, 0xE6, 0x56, 0x3C, 0xDE, 0xE2, 0x3C, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xE9, 0x0E, 0xBD, 0xE9, 0x0C, 0xD6, 0xCE, 0xCA, 0x7F, 0xD4, 0xCA, 0xD7, 0xCA, 0xCE, 0xE4, 0xFA, 0x7E, 0xE9, 0xA4, 0xCE, 0xF0, 0x8B, 0xBD, 0xF2, 0x51, 0xBD, 0x00, 0xF3, 0x81, 0xA5, 0x26, 0x06, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xF2, 0xAD, 0xBD, 0xE9, 0xA2, 0xDE, 0xB5, 0x3C, 0x86, 0x80, 0x36, 0x8D, 0x4B, 0xDE, 0xF4, 0xDF, 0xA9, 0xA6, 0x00, 0x27, 0x07, 0x81, 0x3A, 0x27, 0x16, 0x7E, 0xEA, 0x3C, 0x08, 0xA6, 0x00, 0x08, 0xAA, 0x00, 0xB7, 0x01, 0x83, 0x27, 0x54, 0x08, 0xEC, 0x00, 0xDD, 0xE2, 0xBD, 0xDC, 0x3C, 0xBD, 0x00, 0xEB, 0x8D, 0x02, 0x20, 0xD5, 0x27, 0x71, 0x7E, 0xDC, 0xB8, 0x4D, 0x2B, 0x03, 0x7E, 0xE6, 0xD3, 0xCE, 0xE1, 0x48, 0x81, 0xA0, 0x22, 0xD1, 0x48, 0x16, 0x3A, 0xEE, 0x00, 0xBD, 0x00, 0xEB, 0x6E, 0x00, 0xDE, 0x93, 0x09, 0xDF, 0xAD, 0x39, 0xBD, 0xDF, 0xD6, 0x27, 0x0B, 0xBD, 0xDF, 0xDE, 0x01, 0x81, 0x13, 0x27, 0x04, 0xB7, 0x01, 0x7F, 0x39, 0xBD, 0xF8, 0x83, 0x27, 0xFB, 0x20, 0xED, 0x0D, 0x26, 0x36, 0xDE, 0xF4, 0xDF, 0xA9, 0x76, 0x01, 0x83, 0x38, 0xDE, 0xE2, 0x08, 0x27, 0x07, 0x09, 0xDF, 0xA3, 0xDE, 0xA9, 0xDF, 0xA7, 0x7F, 0x00, 0xE8, 0xCE, 0xE1, 0xC0, 0x7D, 0x01, 0x83, 0x2A, 0x03, 0x7E, 0xE2, 0x66, 0x7E, 0xE2, 0x71, 0x26, 0x0F, 0xC6, 0x20, 0xDE, 0xA7, 0x26, 0x03, 0x7E, 0xE2, 0x38, 0xDF, 0xF4, 0xDE, 0xA3, 0xDF, 0xE2, 0x39, 0x20, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x9D, 0xF3, 0x27, 0x31, 0xBD, 0xEF, 0x4C, 0x3C, 0xDE, 0xA1, 0xBD, 0x00, 0xF3, 0x27, 0x0C, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0x09, 0xBC, 0x01, 0x50, 0x22, 0x1D, 0x3C, 0x01, 0x30, 0xEC, 0x00, 0xA3, 0x02, 0x25, 0x14, 0xED, 0x02, 0x83, 0x00, 0x3A, 0x25, 0x0D, 0x93, 0x95, 0x25, 0x09, 0x38, 0xDF, 0xA1, 0x38, 0xDF, 0x9B, 0x7E, 0xE3, 0xDE, 0x7E, 0xE2, 0x36, 0xBD, 0xC3, 0x81, 0x9D, 0xF3, 0xBD, 0xC7, 0x9D, 0x20, 0x0E, 0xC6, 0x03, 0xBD, 0xE2, 0x1A, 0xDE, 0xF4, 0x3C, 0xDE, 0xE2, 0x3C, 0x86, 0x82, 0x36, 0xBD, 0x00, 0xF3, 0x8D, 0x03, 0x7E, 0xE5, 0x19, 0xBD, 0xDF, 0xA3, 0x8D, 0x3A, 0x08, 0xDC, 0xA5, 0x93, 0xE2, 0x22, 0x02, 0xDE, 0x93, 0xBD, 0xE3, 0xBB, 0x25, 0x15, 0x09, 0xDF, 0xF4, 0x39, 0x26, 0xFD, 0x86, 0xFF, 0x97, 0xB5, 0xBD, 0xE1, 0xD8, 0x35, 0x81, 0x02, 0x27, 0x0B, 0xC6, 0x04, 0x8C, 0xC6, 0x0E, 0x7E, 0xE2, 0x38, 0x7E, 0xEA, 0x3C, 0x32, 0x38, 0xDF, 0xE2, 0x38, 0xDF, 0xF4, 0x8D, 0x03, 0xDF, 0xF4, 0x39, 0xC6, 0x3A, 0x86, 0x5F, 0xD7, 0x80, 0x5F, 0xDE, 0xF4, 0x17, 0xD6, 0x80, 0x97, 0x80, 0xA6, 0x00, 0x27, 0xED, 0x11, 0x27, 0xEA, 0x08, 0x81, 0x22, 0x7E, 0xD9, 0x7B, 0x01, 0xBD, 0xE9, 0x0C, 0x9D, 0xF3, 0x81, 0x81, 0x27, 0x05, 0xC6, 0xA3, 0xBD, 0xEA, 0x31, 0x96, 0xC9, 0x7E, 0xD9, 0x5D, 0x8D, 0xD2, 0xDF, 0xF4, 0x39, 0xBD, 0x00, 0xF3, 0x25, 0x8B, 0x7E, 0xE5, 0x44, 0xBD, 0xEF, 0x0D, 0x36, 0x81, 0x82, 0x27, 0x04, 0x81, 0x81, 0x26, 0xA9, 0x5A, 0x26, 0x04, 0x32, 0x7E, 0xE5, 0x46, 0x9D, 0xEB, 0x37, 0xBD, 0xDF, 0xA3, 0x33, 0x81, 0x2C, 0x27, 0xEE, 0x31, 0x39, 0xCE, 0x00, 0x00, 0xDF, 0xA5, 0x24, 0xF8, 0x80, 0x30, 0x97, 0x80, 0xDC, 0xA5, 0x81, 0x18, 0x22, 0xD9, 0x05, 0x05, 0xD3, 0xA5, 0x05, 0xDB, 0x80, 0x89, 0x00, 0xDD, 0xA5, 0xBD, 0x00, 0xEB, 0x20, 0xE4, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0x96, 0x84, 0x36, 0xBD, 0xE9, 0x1A, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x27, 0x2F, 0xDE, 0xCC, 0xDC, 0x9B, 0xA3, 0x02, 0x24, 0x13, 0xDC, 0x95, 0x93, 0xCC, 0x22, 0x0D, 0xE6, 0x00, 0xBD, 0xEC, 0xFC, 0xDE, 0xC7, 0xBD, 0xEE, 0x38, 0xCE, 0x00, 0xD0, 0xDF, 0xC7, 0xBD, 0xEE, 0x70, 0xDE, 0xC7, 0xA6, 0x00, 0x36, 0xEC, 0x02, 0xDE, 0xB5, 0xED, 0x02, 0x32, 0xA7, 0x00, 0x39, 0x7E, 0xF2, 0x70, 0xBD, 0xE4, 0x04, 0x8D, 0x04, 0x7F, 0x00, 0xE8, 0x39, 0x27, 0x3F, 0x7E, 0xC5, 0xB8, 0x01, 0xBD, 0xFC, 0x29, 0xBD, 0x00, 0xF3, 0x27, 0x33, 0xBD, 0xEA, 0x2F, 0x27, 0x3B, 0x81, 0xA1, 0x27, 0x50, 0x81, 0x2C, 0x27, 0x34, 0x81, 0x3B, 0x27, 0x5E, 0xBD, 0xE9, 0x1A, 0x96, 0x84, 0x36, 0x26, 0x06, 0xBD, 0xF4, 0x26, 0xBD, 0xED, 0x05, 0x7E, 0xC3, 0xEB, 0x5D, 0x26, 0x09, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0x15, 0x8D, 0x58, 0xBD, 0x00, 0xF3, 0x26, 0xD2, 0x86, 0x0D, 0x20, 0x54, 0xBD, 0xFA, 0x7B, 0x27, 0xF7, 0x96, 0xE6, 0x26, 0xF3, 0x39, 0xBD, 0xFA, 0x7B, 0x27, 0x0A, 0xD6, 0xE6, 0xD1, 0xE5, 0x25, 0x06, 0x8D, 0xE5, 0x20, 0x1F, 0xD6, 0xE6, 0xD0, 0xE4, 0x24, 0xFC, 0x50, 0x20, 0x11, 0xBD, 0xEF, 0x0A, 0x81, 0x29, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0xBD, 0xFA, 0x7B, 0xD0, 0xE6, 0x23, 0x05, 0xBD, 0xC3, 0xFE, 0x01, 0x01, 0xBD, 0x00, 0xEB, 0x7E, 0xE7, 0x36, 0xBD, 0xED, 0x06, 0xBD, 0xEE, 0x56, 0x5C, 0x5A, 0x27, 0xC1, 0xA6, 0x00, 0x08, 0x8D, 0x07, 0x20, 0xF6, 0x86, 0x20, 0x8C, 0x86, 0x3F, 0x7E, 0xF9, 0xC6, 0x3F, 0x52, 0x45, 0x44, 0x4F, 0x0D, 0x00, 0x96, 0x87, 0x27, 0x06, 0xDE, 0xAB, 0xDF, 0xE2, 0x20, 0xC1, 0x96, 0xE8, 0x26, 0x22, 0xCE, 0xE7, 0xC0, 0x8D, 0xCD, 0xDE, 0xA9, 0xDF, 0xF4, 0x39, 0xDE, 0xE2, 0x08, 0x27, 0x10, 0x39, 0xC6, 0x2C, 0xE7, 0x00, 0xD6, 0xE8, 0x27, 0xF7, 0xD6, 0xE9, 0x27, 0xF3, 0xC6, 0x30, 0x8C, 0xC6, 0x16, 0x8C, 0xC6, 0x32, 0x7E, 0xE2, 0x38, 0x20, 0x12, 0xBD, 0xE7, 0xBC, 0xBD, 0xE7, 0xB9, 0xBD, 0xFA, 0xA4, 0x24, 0xDC, 0x38, 0x7E, 0xDF, 0xED, 0xDE, 0xAD, 0x86, 0x4F, 0x97, 0x87, 0xDF, 0xAF, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xDE, 0xF4, 0xDF, 0xA5, 0xDE, 0xAF, 0xA6, 0x00, 0x26, 0x09, 0x96, 0x87, 0x26, 0x4E, 0xBD, 0xE7, 0xBC, 0x8D, 0xD1, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0xD6, 0x84, 0x27, 0x1C, 0xDE, 0xF4, 0x97, 0x80, 0x81, 0x22, 0x27, 0x06, 0x09, 0xCC, 0x3A, 0x2C, 0x01, 0x01, 0xBD, 0xC5, 0x35, 0xBD, 0xED, 0x0C, 0xBD, 0xEF, 0x3E, 0xBD, 0xE6, 0xEA, 0x20, 0x06, 0xBD, 0xF3, 0x59, 0xBD, 0xF2, 0x70, 0xBD, 0x00, 0xF3, 0x27, 0x07, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE7, 0xC8, 0xDE, 0xF4, 0xDF, 0xAF, 0xDE, 0xA5, 0xDF, 0xF4, 0xBD, 0x00, 0xF3, 0x27, 0x25, 0xBD, 0xEA, 0x2F, 0x20, 0x9F, 0xDF, 0xF4, 0xBD, 0xE6, 0x56, 0x08, 0x4D, 0x26, 0x0F, 0xC6, 0x06, 0xA6, 0x00, 0xAA, 0x01, 0x27, 0x46, 0xEC, 0x02, 0xDD, 0xAB, 0xC6, 0x04, 0x3A, 0xA6, 0x00, 0x81, 0x85, 0x26, 0xE2, 0x20, 0x97, 0xDE, 0xAF, 0xD6, 0x87, 0x27, 0x03, 0x7E, 0xE5, 0x63, 0xA6, 0x00, 0x27, 0x06, 0xCE, 0xE8, 0xAA, 0x7E, 0xE7, 0xA8, 0x39, 0x3F, 0x45, 0x58, 0x54, 0x52, 0x41, 0x20, 0x49, 0x47, 0x4E, 0x4F, 0x52, 0x45, 0x44, 0x0D, 0x00, 0x26, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x03, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE1, 0xD8, 0x27, 0x04, 0xC6, 0x00, 0x20, 0x47, 0x35, 0x08, 0x08, 0x08, 0xBD, 0xF2, 0x51, 0x30, 0xA6, 0x08, 0x97, 0xCE, 0xDE, 0xB5, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x70, 0x30, 0xC6, 0x09, 0x3A, 0xBD, 0xF2, 0xD9, 0x30, 0xE0, 0x08, 0x27, 0x0C, 0xEE, 0x0E, 0xDF, 0xE2, 0x30, 0xEE, 0x10, 0xDF, 0xF4, 0x7E, 0xE5, 0x19, 0xC6, 0x12, 0x3A, 0x35, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x26, 0xF2, 0xBD, 0x00, 0xEB, 0x8D, 0xB6, 0x8D, 0x0C, 0x6D, 0x0D, 0x76, 0x00, 0x84, 0x28, 0x95, 0xC6, 0x18, 0x7E, 0xE2, 0x38, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0x4F, 0xC6, 0x37, 0x36, 0xC6, 0x01, 0xBD, 0xE2, 0x1A, 0xBD, 0xE9, 0xE5, 0x7F, 0x00, 0xB9, 0xBD, 0x00, 0xF3, 0x80, 0xAE, 0x25, 0x14, 0x81, 0x03, 0x24, 0x10, 0x81, 0x01, 0x49, 0x98, 0xB9, 0x91, 0xB9, 0x25, 0x59, 0x97, 0xB9, 0xBD, 0x00, 0xEB, 0x20, 0xE8, 0xD6, 0xB9, 0x26, 0x2B, 0x24, 0x66, 0x8B, 0x07, 0x24, 0x62, 0x99, 0x84, 0x26, 0x03, 0x7E, 0xEE, 0x06, 0x89, 0xFF, 0x16, 0x48, 0x1B, 0x16, 0xCE, 0xE0, 0x30, 0x3A, 0x32, 0xA1, 0x00, 0x24, 0x53, 0x8D, 0xA3, 0x36, 0x8D, 0x23, 0xDE, 0xB7, 0x32, 0x26, 0x18, 0x4D, 0x27, 0x6C, 0x20, 0x4D, 0x78, 0x00, 0x84, 0x59, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0xE9, 0x88, 0xD7, 0xB9, 0x20, 0xDC, 0x64, 0xEA, 0xAE, 0xA1, 0x00, 0x24, 0x36, 0x20, 0xDA, 0xEC, 0x01, 0x37, 0x36, 0x8D, 0x07, 0xD6, 0xB9, 0x20, 0x86, 0x7E, 0xEA, 0x3C, 0xD6, 0xCE, 0xA6, 0x00, 0x38, 0x37, 0xD6, 0xCD, 0x37, 0xD6, 0xCC, 0x37, 0xD6, 0xCB, 0x37, 0xD6, 0xCA, 0x37, 0xD6, 0xC9, 0x37, 0x6E, 0x00, 0xCE, 0x00, 0x00, 0x32, 0x4D, 0x27, 0x26, 0x81, 0x64, 0x27, 0x03, 0xBD, 0xE9, 0x0E, 0xDF, 0xB7, 0x33, 0x81, 0x5A, 0x27, 0x1A, 0x81, 0x7D, 0x27, 0x16, 0x54, 0xD7, 0x88, 0x32, 0x33, 0xDD, 0xD6, 0x38, 0xDF, 0xD8, 0x33, 0xD7, 0xDA, 0x33, 0xD7, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xD6, 0xC9, 0x39, 0x7F, 0x00, 0x84, 0x7E, 0xE0, 0xB4, 0x9D, 0xEB, 0x24, 0x03, 0x7E, 0xF3, 0x59, 0xBD, 0xEB, 0x76, 0x24, 0x52, 0x81, 0x2E, 0x27, 0xF4, 0x81, 0xA8, 0x27, 0x42, 0x81, 0xA7, 0x27, 0xE2, 0x81, 0x22, 0x26, 0x08, 0xDE, 0xF4, 0xBD, 0xED, 0x06, 0x7E, 0xEF, 0x3E, 0x81, 0xA4, 0x26, 0x0D, 0x86, 0x5A, 0xBD, 0xE9, 0x21, 0xBD, 0xEB, 0xC7, 0x43, 0x53, 0x7E, 0xEC, 0xE3, 0x80, 0xB1, 0x24, 0x31, 0x8D, 0x06, 0xBD, 0xE9, 0x1A, 0xC6, 0x29, 0x8C, 0xC6, 0x28, 0x8C, 0xC6, 0x2C, 0x3C, 0xDE, 0xF4, 0xE1, 0x00, 0x38, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0xC6, 0x02, 0x7E, 0xE2, 0x38, 0x86, 0x7D, 0xBD, 0xE9, 0x21, 0x7E, 0xF5, 0x93, 0xBD, 0xEB, 0x1B, 0xDF, 0xCC, 0x96, 0x84, 0x26, 0x92, 0x7E, 0xF2, 0x51, 0x16, 0xBD, 0xE0, 0x57, 0xC1, 0x2C, 0x24, 0x25, 0x37, 0xC1, 0x22, 0x25, 0x1D, 0x8D, 0xC8, 0x33, 0xC1, 0x28, 0x24, 0x19, 0x37, 0xBD, 0xE9, 0x1A, 0x8D, 0xC0, 0xBD, 0xE9, 0x0F, 0x32, 0xDE, 0xCC, 0x3C, 0x36, 0xBD, 0xEF, 0x0D, 0x32, 0x37, 0x16, 0x20, 0x03, 0x8D, 0xA3, 0x33, 0xCE, 0xE0, 0x00, 0x3A, 0xEE, 0x00, 0xAD, 0x00, 0x7E, 0xE9, 0x0E, 0x86, 0x4F, 0x97, 0x82, 0xBD, 0xEB, 0xC7, 0xDD, 0x80, 0xBD, 0xF2, 0x8B, 0xBD, 0xEB, 0xC7, 0x7D, 0x00, 0x82, 0x26, 0x06, 0x94, 0x80, 0xD4, 0x81, 0x20, 0x04, 0x9A, 0x80, 0xDA, 0x81, 0x7E, 0xEC, 0xE3, 0xBD, 0xE9, 0x10, 0x26, 0x10, 0x96, 0xDB, 0x8A, 0x7F, 0x94, 0xD7, 0x97, 0xD7, 0xCE, 0x00, 0xD6, 0xBD, 0xF2, 0xD9, 0x20, 0x40, 0x7F, 0x00, 0x84, 0x7A, 0x00, 0xB9, 0xBD, 0xEE, 0x56, 0xD7, 0xD0, 0xDF, 0xD2, 0xDE, 0xD9, 0xBD, 0xEE, 0x58, 0x96, 0xD0, 0x10, 0x27, 0x07, 0x86, 0x01, 0x24, 0x03, 0xD6, 0xD0, 0x40, 0x97, 0xCE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0xD2, 0x5C, 0x09, 0x5A, 0x26, 0x04, 0xD6, 0xCE, 0x20, 0x0B, 0x32, 0x08, 0xA1, 0x00, 0x27, 0xF3, 0xC6, 0xFF, 0x24, 0x01, 0x50, 0x9E, 0x91, 0x32, 0x06, 0xCB, 0x01, 0x59, 0xD4, 0x88, 0x27, 0x02, 0xC6, 0xFF, 0x7E, 0xF2, 0xBC, 0xBD, 0xEA, 0x2F, 0x16, 0x8D, 0x0A, 0xBD, 0x00, 0xF3, 0x26, 0xF5, 0x39, 0x5F, 0xBD, 0x00, 0xF3, 0xD7, 0x83, 0x97, 0xB1, 0xBD, 0x00, 0xF3, 0x8D, 0x4E, 0x24, 0x03, 0x7E, 0xEA, 0x3C, 0x5F, 0xD7, 0x84, 0xBD, 0x00, 0xEB, 0x25, 0x04, 0x8D, 0x3F, 0x25, 0x0A, 0x16, 0xBD, 0x00, 0xEB, 0x25, 0xFB, 0x8D, 0x35, 0x24, 0xF7, 0x81, 0x24, 0x26, 0x08, 0x73, 0x00, 0x84, 0xCB, 0x80, 0xBD, 0x00, 0xEB, 0xD7, 0xB2, 0xD6, 0x86, 0x5A, 0x26, 0x03, 0x7E, 0xEC, 0x07, 0x9B, 0x86, 0x80, 0x28, 0x26, 0x03, 0x7E, 0xEB, 0xDE, 0x7F, 0x00, 0x86, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x14, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x3F, 0xC6, 0x07, 0x3A, 0x20, 0xF1, 0x81, 0x41, 0x25, 0x04, 0x80, 0x5B, 0x80, 0xA5, 0x39, 0x38, 0x3C, 0x8C, 0xEA, 0x4C, 0x26, 0x04, 0xCE, 0xEB, 0xB7, 0x39, 0xDC, 0x99, 0xDD, 0xBD, 0xC3, 0x00, 0x07, 0xDD, 0xBB, 0xDE, 0x97, 0xDF, 0xC1, 0xBD, 0xE1, 0xFE, 0xDE, 0xBB, 0xDF, 0x99, 0xDE, 0xBF, 0xDF, 0x97, 0xDE, 0xC1, 0xDC, 0xB1, 0xED, 0x00, 0x4F, 0x5F, 0xED, 0x02, 0xED, 0x04, 0xA7, 0x06, 0x08, 0x08, 0xDF, 0xB3, 0x39, 0x90, 0x80, 0x00, 0x00, 0x00, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xE9, 0x0E, 0x96, 0xCE, 0x2B, 0x67, 0xBD, 0xE9, 0x0E, 0x96, 0xC9, 0x81, 0x90, 0x25, 0x08, 0xCE, 0xEB, 0xB5, 0xBD, 0xF2, 0xD9, 0x26, 0x56, 0xBD, 0xF3, 0x0B, 0xDC, 0xCC, 0x39, 0xDE, 0x83, 0x3C, 0x5F, 0x37, 0xDE, 0xB1, 0x3C, 0x8D, 0xD2, 0x38, 0xDF, 0xB1, 0x33, 0x5C, 0xD7, 0x82, 0x32, 0x33, 0xDE, 0xCC, 0x3C, 0x37, 0x36, 0xD6, 0x82, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0xE3, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0x83, 0xC6, 0xFF, 0x37, 0xDE, 0x97, 0x9C, 0x99, 0x27, 0x25, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x07, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0x20, 0xEF, 0xC6, 0x12, 0x32, 0x4D, 0x27, 0xBC, 0x96, 0x83, 0x26, 0x0B, 0xD6, 0x82, 0xE1, 0x04, 0x27, 0x5C, 0xC6, 0x10, 0x8C, 0xC6, 0x08, 0x7E, 0xE2, 0x38, 0x32, 0x4D, 0x27, 0xF7, 0xCC, 0x00, 0x05, 0xDD, 0xDE, 0xDC, 0xB1, 0xED, 0x00, 0xD6, 0x82, 0xE7, 0x04, 0xBD, 0xE2, 0x1A, 0xDF, 0xBB, 0xC6, 0x0B, 0x4F, 0x7D, 0x00, 0x83, 0x27, 0x05, 0x32, 0x33, 0xC3, 0x00, 0x01, 0xED, 0x05, 0x8D, 0x5F, 0xDD, 0xDE, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE6, 0xBD, 0xE2, 0x2D, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xBD, 0xE2, 0x1E, 0x83, 0x00, 0x35, 0xDD, 0x99, 0x4F, 0x09, 0xA7, 0x05, 0x9C, 0x89, 0x26, 0xF9, 0xDE, 0xBB, 0x96, 0x99, 0x93, 0xBB, 0xED, 0x02, 0x96, 0x83, 0x26, 0x31, 0xE6, 0x04, 0xD7, 0x82, 0x4F, 0x5F, 0xDD, 0xDE, 0x32, 0x33, 0xDD, 0xCC, 0x37, 0x36, 0xA3, 0x05, 0x24, 0x3F, 0xDC, 0xDE, 0x32, 0x33, 0x27, 0x04, 0x8D, 0x18, 0xD3, 0xCC, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE3, 0xDD, 0x89, 0x05, 0x05, 0xD3, 0x89, 0xC3, 0x00, 0x05, 0xBD, 0xE2, 0x2D, 0xDF, 0xB3, 0x39, 0x86, 0x10, 0x97, 0xBF, 0xEC, 0x05, 0xDD, 0x91, 0x4F, 0x5F, 0x05, 0x25, 0x12, 0x78, 0x00, 0xDF, 0x79, 0x00, 0xDE, 0x24, 0x04, 0xD3, 0x91, 0x25, 0x06, 0x7A, 0x00, 0xBF, 0x26, 0xEC, 0x39, 0x7E, 0xEC, 0x2B, 0x9F, 0x91, 0xDC, 0x91, 0x7E, 0xDC, 0x8F, 0x4F, 0x7F, 0x00, 0x84, 0xDD, 0xCA, 0xC6, 0x90, 0x7E, 0xF2, 0xC3, 0xBD, 0xE9, 0x0E, 0xCE, 0x02, 0xAE, 0xBD, 0xF4, 0x29, 0x38, 0xCE, 0x02, 0xAD, 0x20, 0x0A, 0xDF, 0xC7, 0x8D, 0x5F, 0xDF, 0xD2, 0xD7, 0xD0, 0x39, 0x09, 0x86, 0x22, 0x97, 0x80, 0x97, 0x81, 0x08, 0xDF, 0xDC, 0xDF, 0xD2, 0xC6, 0xFF, 0x5C, 0xA6, 0x00, 0x27, 0x0E, 0x08, 0x91, 0x80, 0x27, 0x04, 0x91, 0x81, 0x26, 0xF2, 0x81, 0x22, 0x27, 0x01, 0x09, 0xDF, 0xDE, 0xD7, 0xD0, 0x37, 0xDC, 0xDC, 0x83, 0x02, 0xAE, 0x33, 0x22, 0x07, 0x8D, 0xC7, 0xDE, 0xDC, 0xBD, 0xEE, 0x3A, 0xFE, 0x01, 0x3D, 0x8C, 0x01, 0x50, 0x26, 0x05, 0xC6, 0x1E, 0x7E, 0xE2, 0x38, 0x96, 0xD0, 0xA7, 0x00, 0xDC, 0xD2, 0xED, 0x02, 0x86, 0xFF, 0x97, 0x84, 0xFF, 0x01, 0x3F, 0xDF, 0xCC, 0xC6, 0x05, 0x3A, 0xFF, 0x01, 0x3D, 0x39, 0x7F, 0x00, 0x85, 0x37, 0x4F, 0xDD, 0x89, 0xDC, 0x9D, 0x93, 0x89, 0x93, 0x9B, 0x25, 0x0B, 0xD3, 0x9B, 0xDD, 0x9D, 0xDE, 0x9D, 0x08, 0xDF, 0x9F, 0x33, 0x39, 0xC6, 0x1A, 0x73, 0x00, 0x85, 0x27, 0xC4, 0x8D, 0x03, 0x33, 0x20, 0xDD, 0xDE, 0xA1, 0xDF, 0x9D, 0x4F, 0x5F, 0xDD, 0xC5, 0xDE, 0x9B, 0xDF, 0xC1, 0xCE, 0x01, 0x41, 0xBC, 0x01, 0x3D, 0x27, 0x04, 0x8D, 0x32, 0x20, 0xF7, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x04, 0x8D, 0x22, 0x20, 0xF8, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x27, 0x38, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x27, 0xE8, 0x8D, 0x08, 0x20, 0xF8, 0xA6, 0x01, 0x08, 0x08, 0x2A, 0x16, 0xE6, 0x00, 0x27, 0x12, 0xEC, 0x02, 0x93, 0x9D, 0x22, 0x0C, 0xEC, 0x02, 0x93, 0xC1, 0x23, 0x06, 0xDF, 0xC5, 0xEC, 0x02, 0xDD, 0xC1, 0xC6, 0x05, 0x3A, 0x39, 0xDE, 0xC5, 0x27, 0xFB, 0x4F, 0xE6, 0x00, 0x5A, 0xD3, 0xC1, 0xDD, 0xBD, 0xDE, 0x9D, 0xDF, 0xBB, 0xBD, 0xE2, 0x00, 0xDE, 0xC5, 0xDC, 0xBF, 0xED, 0x02, 0xDE, 0xBF, 0x09, 0x7E, 0xED, 0x87, 0xDE, 0xCC, 0x3C, 0xBD, 0xE9, 0xE5, 0xBD, 0xE9, 0x0F, 0x38, 0xDF, 0xDC, 0xE6, 0x00, 0xDE, 0xCC, 0xEB, 0x00, 0x24, 0x05, 0xC6, 0x1C, 0x7E, 0xE2, 0x38, 0xBD, 0xEC, 0xFC, 0xDE, 0xDC, 0xE6, 0x00, 0x8D, 0x10, 0xDE, 0xC7, 0x8D, 0x2C, 0x8D, 0x0C, 0xDE, 0xDC, 0x8D, 0x26, 0xBD, 0xED, 0x3A, 0x7E, 0xE9, 0x2E, 0xEE, 0x02, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0x9F, 0x5C, 0x20, 0x04, 0x32, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xF9, 0xDF, 0x9F, 0x9E, 0x91, 0x32, 0x06, 0x39, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xE6, 0x00, 0x8D, 0x14, 0x26, 0x0F, 0xEE, 0x07, 0x09, 0x9C, 0x9D, 0x26, 0x06, 0x37, 0xD3, 0x9D, 0xDD, 0x9D, 0x33, 0x08, 0x39, 0xEE, 0x02, 0x39, 0xBC, 0x01, 0x3F, 0x26, 0x0C, 0xFF, 0x01, 0x3D, 0x09, 0x09, 0x09, 0x09, 0x09, 0xFF, 0x01, 0x3F, 0x4F, 0x39, 0x8D, 0x03, 0x7E, 0xEC, 0xE2, 0x8D, 0xCA, 0x7F, 0x00, 0x84, 0x5D, 0x39, 0xBD, 0xEF, 0x10, 0xC6, 0x01, 0xBD, 0xED, 0x5F, 0x96, 0xCD, 0xBD, 0xED, 0x00, 0xA7, 0x00, 0x31, 0x31, 0x7E, 0xED, 0x3A, 0x8D, 0x02, 0x20, 0xDE, 0x8D, 0xDF, 0x27, 0x5D, 0xE6, 0x00, 0x39, 0x8D, 0x43, 0x4F, 0xE1, 0x00, 0x23, 0x03, 0xE6, 0x00, 0x4F, 0x37, 0x36, 0xBD, 0xEC, 0xFE, 0xDE, 0xC7, 0x8D, 0x98, 0x33, 0x3A, 0x33, 0xBD, 0xEE, 0x3A, 0x20, 0xD7, 0x8D, 0x28, 0xA6, 0x00, 0x10, 0x20, 0xE1, 0xC6, 0xFF, 0xD7, 0xCD, 0x8D, 0x44, 0x81, 0x29, 0x27, 0x03, 0xBD, 0xEF, 0x47, 0x8D, 0x14, 0x27, 0x27, 0x5F, 0x4A, 0xA1, 0x00, 0x24, 0xD1, 0x16, 0xE0, 0x00, 0x50, 0xD1, 0xCD, 0x23, 0xC9, 0xD6, 0xCD, 0x20, 0xC5, 0xBD, 0xEA, 0x29, 0x30, 0xEC, 0x05, 0xDD, 0xC7, 0xEC, 0x00, 0xED, 0x05, 0x31, 0x31, 0x31, 0x31, 0x32, 0xDE, 0xC7, 0x16, 0x39, 0x7E, 0xEC, 0x2E, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC0, 0x96, 0xCC, 0x26, 0xF0, 0xD6, 0xCD, 0x7E, 0x00, 0xF3, 0xBD, 0xEE, 0x87, 0x26, 0x03, 0x7E, 0xEF, 0xF4, 0xBD, 0xE2, 0x2C, 0xA6, 0x00, 0x36, 0x6F, 0x00, 0xDE, 0xF4, 0xDF, 0xDE, 0xDE, 0x89, 0xDF, 0xF4, 0x8D, 0xE3, 0xBD, 0xF3, 0x59, 0x32, 0xDE, 0x8B, 0xA7, 0x00, 0xDE, 0xDE, 0xDF, 0xF4, 0x39, 0x8D, 0x07, 0xDF, 0xA5, 0xBD, 0xEA, 0x2F, 0x20, 0xC1, 0xBD, 0xE9, 0x0C, 0x96, 0xCE, 0x2B, 0xB4, 0x96, 0xC9, 0x81, 0x90, 0x22, 0xAE, 0xBD, 0xF3, 0x0B, 0xDE, 0xCC, 0x39, 0x8D, 0xEE, 0xE6, 0x00, 0x7E, 0xEC, 0xE2, 0x8D, 0xDB, 0xDE, 0xA5, 0xE7, 0x00, 0x39, 0xCE, 0xF5, 0x24, 0x20, 0x0B, 0xBD, 0xF1, 0x60, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xDC, 0x20, 0x03, 0xBD, 0xF1, 0x60, 0x5D, 0x26, 0x03, 0x7E, 0xF2, 0x8B, 0xCE, 0x00, 0xD6, 0x16, 0x27, 0x6D, 0xD0, 0xC9, 0x27, 0x6A, 0x2B, 0x0A, 0x97, 0xC9, 0x96, 0xDB, 0x97, 0xCE, 0xCE, 0x00, 0xC9, 0x50, 0xC1, 0xF8, 0x2F, 0x5A, 0x4F, 0x64, 0x01, 0xBD, 0xF0, 0x80, 0xD6, 0xDC, 0x2A, 0x0B, 0x63, 0x01, 0x63, 0x02, 0x63, 0x03, 0x63, 0x04, 0x43, 0x89, 0x00, 0x97, 0xDD, 0x96, 0xCD, 0x99, 0xDA, 0x97, 0xCD, 0x96, 0xCC, 0x99, 0xD9, 0x97, 0xCC, 0x96, 0xCB, 0x99, 0xD8, 0x97, 0xCB, 0x96, 0xCA, 0x99, 0xD7, 0x97, 0xCA, 0x17, 0x2A, 0x47, 0x25, 0x02, 0x8D, 0x66, 0x5F, 0x96, 0xCA, 0x26, 0x34, 0x96, 0xCB, 0x97, 0xCA, 0x96, 0xCC, 0x97, 0xCB, 0x96, 0xCD, 0x97, 0xCC, 0x96, 0xDD, 0x97, 0xCD, 0x7F, 0x00, 0xDD, 0xCB, 0x08, 0xC1, 0x28, 0x2D, 0xE3, 0x4F, 0x97, 0xC9, 0x97, 0xCE, 0x39, 0x8D, 0x78, 0x0C, 0x20, 0xA7, 0x5C, 0x78, 0x00, 0xDD, 0x79, 0x00, 0xCD, 0x79, 0x00, 0xCC, 0x79, 0x00, 0xCB, 0x79, 0x00, 0xCA, 0x2A, 0xEE, 0x96, 0xC9, 0x10, 0x97, 0xC9, 0x23, 0xDC, 0x8C, 0x25, 0x09, 0x78, 0x00, 0xDD, 0x86, 0x00, 0x97, 0xDD, 0x20, 0x11, 0x7C, 0x00, 0xC9, 0x27, 0x2F, 0x76, 0x00, 0xCA, 0x76, 0x00, 0xCB, 0x76, 0x00, 0xCC, 0x76, 0x00, 0xCD, 0x24, 0x04, 0x8D, 0x12, 0x27, 0xE9, 0x39, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xCA, 0x73, 0x00, 0xCB, 0x73, 0x00, 0xCC, 0x73, 0x00, 0xCD, 0xDE, 0xCC, 0x08, 0xDF, 0xCC, 0x26, 0x05, 0xDE, 0xCA, 0x08, 0xDF, 0xCA, 0x39, 0xC6, 0x0A, 0x7E, 0xE2, 0x38, 0xCE, 0x00, 0x8C, 0xA6, 0x04, 0x97, 0xDD, 0xA6, 0x03, 0xA7, 0x04, 0xA6, 0x02, 0xA7, 0x03, 0xA6, 0x01, 0xA7, 0x02, 0x96, 0xD5, 0xA7, 0x01, 0xCB, 0x08, 0x2F, 0xE8, 0x96, 0xDD, 0xC0, 0x08, 0x27, 0x0C, 0x67, 0x01, 0x66, 0x02, 0x66, 0x03, 0x66, 0x04, 0x46, 0x5C, 0x26, 0xF4, 0x39, 0x81, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7F, 0x5E, 0x56, 0xCB, 0x79, 0x80, 0x13, 0x9B, 0x0B, 0x64, 0x80, 0x76, 0x38, 0x93, 0x16, 0x82, 0x38, 0xAA, 0x3B, 0x20, 0x80, 0x35, 0x04, 0xF3, 0x34, 0x81, 0x35, 0x04, 0xF3, 0x34, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x31, 0x72, 0x17, 0xF8, 0xBD, 0xF2, 0xAD, 0x2E, 0x03, 0x7E, 0xEC, 0x2E, 0xCE, 0xF0, 0xA5, 0x96, 0xC9, 0x80, 0x80, 0x36, 0x86, 0x80, 0x97, 0xC9, 0xBD, 0xEF, 0x7D, 0xCE, 0xF0, 0xAA, 0xBD, 0xF1, 0xC6, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x72, 0xCE, 0xF0, 0x90, 0xBD, 0xF5, 0xF8, 0xCE, 0xF0, 0xAF, 0xBD, 0xEF, 0x7D, 0x33, 0xBD, 0xF3, 0xE9, 0xCE, 0xF0, 0xB4, 0x8D, 0x6F, 0x27, 0x6C, 0xBD, 0xF1, 0x79, 0x86, 0x00, 0x97, 0x8D, 0x97, 0x8E, 0x97, 0x8F, 0x97, 0x90, 0xD6, 0xCD, 0x8D, 0x26, 0xD6, 0xDD, 0xF7, 0x01, 0x55, 0xD6, 0xCC, 0x8D, 0x1D, 0xD6, 0xDD, 0xF7, 0x01, 0x54, 0xD6, 0xCB, 0x8D, 0x14, 0xD6, 0xDD, 0xF7, 0x01, 0x53, 0xD6, 0xCA, 0x8D, 0x10, 0xD6, 0xDD, 0xF7, 0x01, 0x52, 0xBD, 0xF2, 0x48, 0x7E, 0xEF, 0xD6, 0x26, 0x03, 0x7E, 0xF0, 0x5D, 0x0D, 0x96, 0x8D, 0x56, 0x27, 0x2A, 0x24, 0x16, 0x96, 0x90, 0x9B, 0xDA, 0x97, 0x90, 0x96, 0x8F, 0x99, 0xD9, 0x97, 0x8F, 0x96, 0x8E, 0x99, 0xD8, 0x97, 0x8E, 0x96, 0x8D, 0x99, 0xD7, 0x46, 0x97, 0x8D, 0x76, 0x00, 0x8E, 0x76, 0x00, 0x8F, 0x76, 0x00, 0x90, 0x76, 0x00, 0xDD, 0x0C, 0x20, 0xD1, 0x39, 0xEC, 0x01, 0x97, 0xDB, 0x8A, 0x80, 0xDD, 0xD7, 0xD6, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xEC, 0x03, 0xDD, 0xD9, 0xA6, 0x00, 0x97, 0xD6, 0xD6, 0xC9, 0x39, 0x4D, 0x27, 0x19, 0x9B, 0xC9, 0x46, 0x49, 0x28, 0x13, 0x8B, 0x80, 0x97, 0xC9, 0x26, 0x03, 0x7E, 0xEF, 0xF7, 0x96, 0xDC, 0x97, 0xCE, 0x39, 0x96, 0xCE, 0x43, 0x20, 0x02, 0x32, 0x32, 0x2B, 0x03, 0x7E, 0xEF, 0xF4, 0x7E, 0xF0, 0x58, 0xBD, 0xF2, 0x9F, 0x27, 0x0F, 0x8B, 0x02, 0x25, 0xF4, 0x7F, 0x00, 0xDC, 0xBD, 0xEF, 0x89, 0x7C, 0x00, 0xC9, 0x27, 0xE9, 0x39, 0x84, 0x20, 0x00, 0x00, 0x00, 0xBD, 0xF2, 0x9F, 0xCE, 0xF1, 0xB4, 0x5F, 0xD7, 0xDC, 0xBD, 0xF2, 0x51, 0x8C, 0x8D, 0x98, 0x27, 0x79, 0x70, 0x00, 0xC9, 0x8D, 0xAA, 0x7C, 0x00, 0xC9, 0x27, 0xC8, 0xCE, 0x00, 0x8D, 0xC6, 0x04, 0xD7, 0x82, 0xC6, 0x01, 0x96, 0xCA, 0x91, 0xD7, 0x26, 0x13, 0x96, 0xCB, 0x91, 0xD8, 0x26, 0x0D, 0x96, 0xCC, 0x91, 0xD9, 0x26, 0x07, 0x96, 0xCD, 0x91, 0xDA, 0x26, 0x01, 0x0D, 0x07, 0x59, 0x24, 0x0C, 0xE7, 0x00, 0x08, 0x7A, 0x00, 0x82, 0x2B, 0x37, 0x27, 0x31, 0xC6, 0x01, 0x06, 0x25, 0x12, 0x78, 0x00, 0xDA, 0x79, 0x00, 0xD9, 0x79, 0x00, 0xD8, 0x79, 0x00, 0xD7, 0x25, 0xDF, 0x2B, 0xC4, 0x20, 0xDB, 0x96, 0xDA, 0x90, 0xCD, 0x97, 0xDA, 0x96, 0xD9, 0x92, 0xCC, 0x97, 0xD9, 0x96, 0xD8, 0x92, 0xCB, 0x97, 0xD8, 0x96, 0xD7, 0x92, 0xCA, 0x97, 0xD7, 0x20, 0xD4, 0xC6, 0x40, 0x20, 0xCD, 0x56, 0x56, 0x56, 0xD7, 0xDD, 0x8D, 0x08, 0x7E, 0xEF, 0xD6, 0xC6, 0x14, 0x7E, 0xE2, 0x38, 0xDE, 0x8D, 0xDF, 0xCA, 0xDE, 0x8F, 0xDF, 0xCC, 0x39, 0x36, 0xEC, 0x01, 0x97, 0xCE, 0x8A, 0x80, 0xDD, 0xCA, 0x7F, 0x00, 0xDD, 0xE6, 0x00, 0xEE, 0x03, 0xDF, 0xCC, 0xD7, 0xC9, 0x32, 0x39, 0xCE, 0x00, 0xBF, 0x20, 0x06, 0xCE, 0x00, 0xBA, 0x8C, 0xDE, 0xB5, 0x96, 0xC9, 0xA7, 0x00, 0x96, 0xCE, 0x8A, 0x7F, 0x94, 0xCA, 0xA7, 0x01, 0x96, 0xCB, 0xA7, 0x02, 0x96, 0xCC, 0xA7, 0x03, 0x96, 0xCD, 0xA7, 0x04, 0x39, 0x96, 0xDB, 0x97, 0xCE, 0xDE, 0xD6, 0xDF, 0xC9, 0x7F, 0x00, 0xDD, 0xDE, 0xD8, 0xDF, 0xCB, 0xDE, 0xD9, 0xDF, 0xCC, 0x39, 0xDC, 0xC9, 0xDD, 0xD6, 0xDE, 0xCB, 0xDF, 0xD8, 0xDE, 0xCD, 0xDF, 0xDA, 0x4D, 0x39, 0xD6, 0xC9, 0x27, 0x08, 0xD6, 0xCE, 0x59, 0xC6, 0xFF, 0x25, 0x01, 0x50, 0x39, 0x8D, 0xF1, 0xD7, 0xCA, 0x7F, 0x00, 0xCB, 0xC6, 0x88, 0x96, 0xCA, 0x80, 0x80, 0xD7, 0xC9, 0xCC, 0x00, 0x00, 0xDD, 0xCC, 0x97, 0xDD, 0x97, 0xCE, 0x7E, 0xEF, 0xD2, 0x7F, 0x00, 0xCE, 0x39, 0xE6, 0x00, 0x27, 0xD0, 0xE6, 0x01, 0xD8, 0xCE, 0x2B, 0xCE, 0xD6, 0xC9, 0xE1, 0x00, 0x26, 0x1D, 0xE6, 0x01, 0xCA, 0x7F, 0xD4, 0xCA, 0xE1, 0x01, 0x26, 0x13, 0xD6, 0xCB, 0xE1, 0x02, 0x26, 0x0D, 0xD6, 0xCC, 0xE1, 0x03, 0x26, 0x07, 0xD6, 0xCD, 0xE0, 0x04, 0x26, 0x01, 0x39, 0x56, 0xD8, 0xCE, 0x20, 0xA8, 0xD6, 0xC9, 0x27, 0x41, 0xC0, 0xA0, 0x96, 0xCE, 0x2A, 0x06, 0x73, 0x00, 0xD5, 0xBD, 0xF0, 0x3F, 0xCE, 0x00, 0xC9, 0xC1, 0xF8, 0x2E, 0x07, 0xBD, 0xF0, 0x74, 0x7F, 0x00, 0xD5, 0x39, 0x7F, 0x00, 0xD5, 0x96, 0xCE, 0x49, 0x76, 0x00, 0xCA, 0x7E, 0xF0, 0x80, 0xD6, 0xC9, 0xC1, 0xA0, 0x24, 0x1D, 0x8D, 0xCE, 0xD7, 0xDD, 0x96, 0xCE, 0xD7, 0xCE, 0x80, 0x80, 0x86, 0xA0, 0x97, 0xC9, 0x96, 0xCD, 0x97, 0x80, 0x7E, 0xEF, 0xD2, 0xD7, 0xCA, 0xD7, 0xCB, 0xD7, 0xCC, 0xD7, 0xCD, 0x39, 0x7E, 0xD9, 0xE4, 0xCE, 0x00, 0x00, 0xDF, 0xCE, 0xDF, 0xC9, 0xDF, 0xCB, 0xDF, 0xCC, 0xDF, 0xC1, 0xDF, 0xBF, 0x25, 0x6B, 0x81, 0x2D, 0x26, 0x05, 0x73, 0x00, 0xCF, 0x20, 0x04, 0x81, 0x2B, 0x26, 0x05, 0xBD, 0x00, 0xEB, 0x25, 0x59, 0x81, 0x2E, 0x27, 0x2D, 0x81, 0x45, 0x26, 0x2E, 0xBD, 0x00, 0xEB, 0x25, 0x69, 0x81, 0xA8, 0x27, 0x0E, 0x81, 0x2D, 0x27, 0x0A, 0x81, 0xA7, 0x27, 0x09, 0x81, 0x2B, 0x27, 0x05, 0x20, 0x08, 0x73, 0x00, 0xC2, 0xBD, 0x00, 0xEB, 0x25, 0x4F, 0x7D, 0x00, 0xC2, 0x27, 0x0A, 0x70, 0x00, 0xC1, 0x20, 0x05, 0x73, 0x00, 0xC0, 0x26, 0xC5, 0x96, 0xC1, 0x90, 0xBF, 0x97, 0xC1, 0x27, 0x14, 0x2A, 0x0A, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xC1, 0x26, 0xF8, 0x20, 0x08, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xC1, 0x26, 0xF8, 0x96, 0xCF, 0x2A, 0x83, 0x7E, 0xF5, 0x93, 0xD6, 0xBF, 0xD0, 0xC0, 0xD7, 0xBF, 0x36, 0xBD, 0xF1, 0x9F, 0x33, 0xC0, 0x30, 0x8D, 0x02, 0x20, 0x91, 0xBD, 0xF2, 0x6C, 0xBD, 0xF2, 0xBC, 0xCE, 0x00, 0xBA, 0x7E, 0xEF, 0x7D, 0xD6, 0xC1, 0x58, 0x58, 0xDB, 0xC1, 0x58, 0x80, 0x30, 0x1B, 0x97, 0xC1, 0x20, 0x9E, 0x9B, 0x3E, 0xBC, 0x1F, 0xFD, 0x9E, 0x6E, 0x6B, 0x27, 0xFD, 0x9E, 0x6E, 0x6B, 0x28, 0x00, 0xCE, 0xE1, 0xB6, 0x8D, 0x0C, 0xDC, 0xE2, 0xDD, 0xCA, 0xC6, 0x90, 0x0D, 0xBD, 0xF2, 0xC7, 0x8D, 0x03, 0x7E, 0xE7, 0xA8, 0xCE, 0x02, 0xAF, 0x86, 0x20, 0xD6, 0xCE, 0x2A, 0x02, 0x86, 0x2D, 0xA7, 0x00, 0x97, 0xCE, 0xDF, 0xDE, 0x08, 0x86, 0x30, 0xD6, 0xC9, 0x26, 0x03, 0x7E, 0xF5, 0x1C, 0x4F, 0xC1, 0x80, 0x22, 0x08, 0xCE, 0xF4, 0x0D, 0xBD, 0xF0, 0xEF, 0x86, 0xF7, 0x97, 0xBF, 0xCE, 0xF4, 0x08, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xCE, 0xF4, 0x03, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xBF, 0x20, 0xF0, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xBF, 0x20, 0xE0, 0xBD, 0xEF, 0x6D, 0xBD, 0xF3, 0x0B, 0xC6, 0x01, 0x96, 0xBF, 0x8B, 0x0A, 0x2B, 0x08, 0x81, 0x0B, 0x24, 0x04, 0x4A, 0x16, 0x86, 0x02, 0x4A, 0x4A, 0x97, 0xC1, 0xD7, 0xBF, 0x2E, 0x11, 0xDE, 0xDE, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0x5D, 0x27, 0x05, 0x86, 0x30, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xCE, 0xF5, 0x29, 0xC6, 0x80, 0x96, 0xCD, 0xAB, 0x03, 0x97, 0xCD, 0x96, 0xCC, 0xA9, 0x02, 0x97, 0xCC, 0x96, 0xCB, 0xA9, 0x01, 0x97, 0xCB, 0x96, 0xCA, 0xA9, 0x00, 0x97, 0xCA, 0x5C, 0x56, 0x59, 0x28, 0xE3, 0x24, 0x03, 0xC0, 0x0B, 0x50, 0xCB, 0x2F, 0x08, 0x08, 0x08, 0x08, 0xDF, 0xB3, 0xDE, 0xDE, 0x08, 0x17, 0x84, 0x7F, 0xA7, 0x00, 0x7A, 0x00, 0xBF, 0x26, 0x05, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xDE, 0xB3, 0x53, 0xC4, 0x80, 0x8C, 0xF5, 0x4D, 0x26, 0xB8, 0xDE, 0xDE, 0xA6, 0x00, 0x09, 0x81, 0x30, 0x27, 0xF9, 0x81, 0x2E, 0x27, 0x01, 0x08, 0x86, 0x2B, 0xD6, 0xC1, 0x27, 0x1E, 0x2A, 0x03, 0x86, 0x2D, 0x50, 0xA7, 0x02, 0x86, 0x45, 0xA7, 0x01, 0x86, 0x2F, 0x4C, 0xC0, 0x0A, 0x24, 0xFB, 0xCB, 0x3A, 0xA7, 0x03, 0xE7, 0x04, 0x6F, 0x05, 0x20, 0x04, 0xA7, 0x00, 0x6F, 0x01, 0xCE, 0x02, 0xAF, 0x39, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x0A, 0x1F, 0x00, 0x00, 0x98, 0x96, 0x80, 0xFF, 0xF0, 0xBD, 0xC0, 0x00, 0x01, 0x86, 0xA0, 0xFF, 0xFF, 0xD8, 0xF0, 0x00, 0x00, 0x03, 0xE8, 0xFF, 0xFF, 0xFF, 0x9C, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xF2, 0x9F, 0xCE, 0xF5, 0x24, 0xBD, 0xF2, 0x51, 0x27, 0x71, 0x4D, 0x26, 0x0A, 0x96, 0xCE, 0x2A, 0x03, 0x7E, 0xF2, 0x43, 0x7E, 0xEF, 0xF5, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0x5F, 0x96, 0xDB, 0x2A, 0x10, 0xBD, 0xF3, 0x35, 0xCE, 0x00, 0xC4, 0x96, 0xDB, 0xBD, 0xF2, 0xE3, 0x26, 0x03, 0x43, 0xD6, 0x80, 0xBD, 0xF2, 0x8D, 0x37, 0xBD, 0xF0, 0xB9, 0xCE, 0x00, 0xC4, 0xBD, 0xF0, 0xEF, 0x8D, 0x3A, 0x32, 0x46, 0x24, 0x90, 0x96, 0xC9, 0x27, 0x03, 0x73, 0x00, 0xCE, 0x39, 0x81, 0x38, 0xAA, 0x3B, 0x29, 0x07, 0x71, 0x34, 0x58, 0x3E, 0x56, 0x74, 0x16, 0x7E, 0xB3, 0x1B, 0x77, 0x2F, 0xEE, 0xE3, 0x85, 0x7A, 0x1D, 0x84, 0x1C, 0x2A, 0x7C, 0x63, 0x59, 0x58, 0x0A, 0x7E, 0x75, 0xFD, 0xE7, 0xC6, 0x80, 0x31, 0x72, 0x18, 0x10, 0x81, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xF5, 0x9B, 0x8D, 0x36, 0xBD, 0xF2, 0x6C, 0x96, 0xC9, 0x81, 0x88, 0x25, 0x03, 0x7E, 0xF1, 0x90, 0xBD, 0xF3, 0x35, 0x96, 0x80, 0x8B, 0x81, 0x27, 0xF4, 0x4A, 0x36, 0xCE, 0x00, 0xBA, 0xBD, 0xEF, 0x72, 0xCE, 0xF5, 0xA0, 0x8D, 0x17, 0x7F, 0x00, 0xDC, 0x32, 0xBD, 0xF1, 0x79, 0x39, 0xDF, 0xDE, 0xBD, 0xF2, 0x6C, 0x8D, 0x05, 0x8D, 0x08, 0xCE, 0x00, 0xBA, 0x7E, 0xF0, 0xEF, 0xDF, 0xDE, 0xBD, 0xF2, 0x67, 0xDE, 0xDE, 0xE6, 0x00, 0xD7, 0xCF, 0x08, 0xDF, 0xDE, 0x8D, 0xED, 0xDE, 0xDE, 0xC6, 0x05, 0x3A, 0xDF, 0xDE, 0xBD, 0xEF, 0x7D, 0xCE, 0x00, 0xBF, 0x7A, 0x00, 0xCF, 0x26, 0xEC, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x21, 0x27, 0x15, 0x8D, 0x10, 0xBD, 0xF2, 0x6C, 0x8D, 0x0E, 0xCE, 0x00, 0xBA, 0x8D, 0xC7, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x7D, 0x7E, 0xF3, 0x35, 0xFE, 0x01, 0x18, 0xDF, 0xCA, 0xFE, 0x01, 0x1A, 0xDF, 0xCC, 0xFE, 0xF6, 0x82, 0xDF, 0xD7, 0xFE, 0xF6, 0x84, 0xDF, 0xD9, 0xBD, 0xF0, 0xF6, 0xFC, 0x01, 0x54, 0xC3, 0x65, 0x8B, 0xFD, 0x01, 0x1A, 0xDD, 0xCC, 0xFC, 0x01, 0x52, 0xC9, 0xB0, 0x89, 0x05, 0xFD, 0x01, 0x18, 0xDD, 0xCA, 0x7F, 0x00, 0xCE, 0x86, 0x80, 0x97, 0xC9, 0x96, 0x8F, 0x97, 0xDD, 0x7E, 0xEF, 0xD6, 0x40, 0xE6, 0x4D, 0xAB, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x9F, 0xCE, 0xF6, 0xFB, 0xD6, 0xDB, 0xBD, 0xF1, 0xC0, 0xBD, 0xF2, 0x9F, 0xBD, 0xF3, 0x35, 0x7F, 0x00, 0xDC, 0x96, 0xD6, 0xD6, 0xC9, 0xBD, 0xEF, 0x75, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x72, 0x96, 0xCE, 0x36, 0x2A, 0x0A, 0xBD, 0xEF, 0x6D, 0x96, 0xCE, 0x2B, 0x06, 0x73, 0x00, 0x88, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x7D, 0x32, 0x4D, 0x2A, 0x03, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x05, 0x7E, 0xF5, 0xF8, 0xBD, 0xF2, 0x6C, 0x7F, 0x00, 0x88, 0x8D, 0xB2, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0xCE, 0x00, 0xBA, 0xBD, 0xF2, 0x51, 0x7F, 0x00, 0xCE, 0x96, 0x88, 0x8D, 0x06, 0xCE, 0x00, 0xC4, 0x7E, 0xF1, 0xC6, 0x36, 0x20, 0xC6, 0x81, 0x49, 0x0F, 0xDA, 0xA2, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x05, 0x84, 0xE6, 0x1A, 0x2D, 0x1B, 0x86, 0x28, 0x07, 0xFB, 0xF8, 0x87, 0x99, 0x68, 0x89, 0x01, 0x87, 0x23, 0x35, 0xDF, 0xE1, 0x86, 0xA5, 0x5D, 0xE7, 0x28, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0xA1, 0x43, 0x49, 0x93, 0x01, 0x82, 0x20, 0x58, 0x83, 0xCD, 0x01, 0x7E, 0xC0, 0x06, 0x5F, 0xD7, 0xE8, 0xBD, 0xD8, 0xBB, 0xBD, 0xFB, 0xD4, 0xBD, 0xC3, 0x84, 0xCC, 0x3A, 0x43, 0xDD, 0xFB, 0xC6, 0x08, 0xD7, 0x08, 0x7E, 0xE2, 0x71, 0x20, 0xE2, 0x4D, 0x45, 0x52, 0x47, 0x49, 0x4E, 0x47, 0x20, 0x00, 0x08, 0x8C, 0xBE, 0xFE, 0x24, 0x0A, 0xA7, 0x02, 0xE9, 0x02, 0xE7, 0x02, 0xEA, 0x02, 0x27, 0xF0, 0xFF, 0x01, 0x50, 0xDF, 0xA1, 0xDF, 0x9D, 0xDC, 0x9D, 0x83, 0x00, 0xC8, 0xDD, 0x9B, 0x9E, 0x9B, 0xCE, 0xF7, 0xCF, 0xCC, 0x00, 0xEB, 0x8D, 0x30, 0xCE, 0xF7, 0xDE, 0xCC, 0x01, 0x00, 0x8D, 0x28, 0x86, 0x39, 0xCE, 0x01, 0x85, 0xA7, 0x00, 0x08, 0x8C, 0x01, 0xAF, 0x26, 0xF8, 0x63, 0x00, 0xCC, 0x02, 0x09, 0xBD, 0xD8, 0x2A, 0xBD, 0xE3, 0xCF, 0xBD, 0xFB, 0xD4, 0xCE, 0xF8, 0x0F, 0xBD, 0xE7, 0xA8, 0x86, 0x55, 0x97, 0xEA, 0x7E, 0xF7, 0x3B, 0xDD, 0xBF, 0xE6, 0x00, 0x08, 0xA6, 0x00, 0xDF, 0xC1, 0xDE, 0xBF, 0xA7, 0x00, 0x08, 0xDF, 0xBF, 0xDE, 0xC1, 0x5A, 0x26, 0xEF, 0x39, 0x01, 0x96, 0x7E, 0xB7, 0xFF, 0xF0, 0xBD, 0xE3, 0xEE, 0x7E, 0xF7, 0x32, 0x0E, 0x7C, 0x00, 0xF5, 0x26, 0x03, 0x7C, 0x00, 0xF4, 0xB6, 0x00, 0x00, 0x7E, 0xE1, 0xC8, 0x31, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xC3, 0xA4, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xEC, 0x2E, 0x4F, 0xC7, 0x52, 0x59, 0xFF, 0x04, 0x5E, 0xEC, 0x2E, 0xF7, 0xC3, 0x00, 0x76, 0x00, 0x01, 0x10, 0x70, 0x84, 0x00, 0x01, 0x15, 0x1A, 0x0B, 0x00, 0x80, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x32, 0x2E, 0x31, 0x56, 0x0D, 0x42, 0x55, 0x49, 0x4C, 0x54, 0x20, 0x4D, 0x41, 0x52, 0x20, 0x31, 0x38, 0x2C, 0x20, 0x32, 0x30, 0x31, 0x31, 0x0D, 0x0D, 0x00, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x0D, 0x00, 0x7A, 0x01, 0x2B, 0x26, 0x1A, 0xB6, 0x01, 0x82, 0x88, 0x0F, 0xB7, 0x01, 0x82, 0x8A, 0x80, 0x36, 0xBD, 0xE0, 0x62, 0x32, 0xC6, 0x1E, 0x84, 0x0F, 0x27, 0x02, 0xC6, 0x32, 0xF7, 0x01, 0x2B, 0xCE, 0x03, 0xFA, 0x09, 0x26, 0xFD, 0x39, 0x7E, 0xC4, 0xFF, 0x3C, 0x37, 0x8D, 0xD3, 0x8D, 0x15, 0x27, 0xFA, 0x36, 0x86, 0x60, 0xBD, 0xE0, 0x62, 0x32, 0x20, 0x52, 0x4F, 0x8D, 0x54, 0x26, 0x05, 0x8D, 0x64, 0x4C, 0x27, 0x4A, 0xBD, 0x01, 0xA9, 0x3C, 0x37, 0x86, 0xFB, 0x8D, 0x44, 0x16, 0x27, 0x03, 0xF8, 0x01, 0x3B, 0xB7, 0x01, 0x3B, 0x5D, 0x27, 0x06, 0x8D, 0x42, 0xBD, 0xC4, 0xED, 0x01, 0xCE, 0x01, 0x30, 0x5F, 0x5A, 0xF7, 0x01, 0x39, 0x59, 0x24, 0x1D, 0x7C, 0x01, 0x39, 0x8D, 0x34, 0x37, 0x16, 0x08, 0xA8, 0x00, 0xA4, 0x00, 0xE7, 0x00, 0x33, 0x4D, 0x0D, 0x27, 0xEA, 0x36, 0x8D, 0x1D, 0x8D, 0x23, 0xA1, 0x00, 0x32, 0x26, 0x24, 0x4F, 0x8C, 0x86, 0x03, 0x4D, 0x33, 0x38, 0x39, 0x86, 0x7F, 0x97, 0x02, 0x96, 0x03, 0x43, 0x84, 0x02, 0x27, 0x02, 0x86, 0xFF, 0x39, 0xFE, 0x01, 0x1D, 0x7E, 0xF8, 0x61, 0xD7, 0x02, 0xB6, 0xBF, 0xFF, 0x8A, 0xC0, 0x39, 0xC6, 0xF8, 0xCB, 0x08, 0x44, 0x24, 0xFB, 0xFB, 0x01, 0x39, 0x86, 0xFE, 0x8D, 0xD8, 0xB7, 0x01, 0x3A, 0xBD, 0x01, 0xAC, 0x27, 0x11, 0xCE, 0xF9, 0x7C, 0xC1, 0x20, 0x26, 0x27, 0xB6, 0x01, 0x82, 0x8B, 0x10, 0xB7, 0x01, 0x82, 0x20, 0xB5, 0x17, 0x27, 0x05, 0xC1, 0x1A, 0x23, 0x1B, 0x8C, 0xC6, 0x1D, 0xCE, 0xF9, 0x39, 0x8D, 0xAE, 0x27, 0x0C, 0xCE, 0xF9, 0x4C, 0xC1, 0x20, 0x26, 0x05, 0x73, 0x01, 0x1C, 0x20, 0x98, 0x3A, 0xA6, 0x00, 0x20, 0x97, 0x8D, 0x99, 0xB8, 0x01, 0x1C, 0x26, 0x07, 0xB6, 0x01, 0x1C, 0x26, 0x07, 0xCA, 0x20, 0x17, 0x8A, 0x40, 0x20, 0x84, 0xCE, 0xF9, 0xAB, 0x3A, 0xA6, 0x00, 0x2A, 0xF6, 0xF6, 0x01, 0x82, 0xC4, 0x70, 0x1B, 0x20, 0xEE, 0x40, 0x0D, 0x20, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x2C, 0x2D, 0x2E, 0x2F, 0x13, 0x0D, 0x20, 0x00, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x3C, 0x3D, 0x3E, 0x3F, 0x88, 0x08, 0xB3, 0xB2, 0x82, 0x9B, 0x90, 0x84, 0xA3, 0x8A, 0x81, 0x9E, 0xBC, 0xBA, 0xB9, 0xA5, 0xC7, 0x15, 0x9C, 0x09, 0x8C, 0x80, 0xB5, 0x5E, 0xB1, 0x8F, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x20, 0x00, 0x8E, 0x93, 0x98, 0x97, 0x96, 0x94, 0x95, 0x9D, 0x86, 0x89, 0x92, 0xBB, 0x91, 0xB7, 0xB6, 0x89, 0x80, 0x82, 0x87, 0x8D, 0x86, 0x85, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x8F, 0x8C, 0x88, 0x8B, 0x55, 0x81, 0x8E, 0x83, 0x8A, 0x84, 0xBD, 0x01, 0x88, 0x3C, 0x37, 0x7E, 0xC4, 0xC6, 0x27, 0x4B, 0x16, 0x07, 0xBD, 0xDC, 0x21, 0xD6, 0x03, 0xC4, 0x04, 0x26, 0xFA, 0x8D, 0x2D, 0x5F, 0x8D, 0x2C, 0xC6, 0x08, 0x37, 0x5F, 0x44, 0x59, 0x8D, 0x24, 0x33, 0x5A, 0x26, 0xF6, 0x8D, 0x1C, 0x32, 0x06, 0x32, 0x81, 0x0D, 0x27, 0x0B, 0x7C, 0x01, 0x2A, 0xF6, 0x01, 0x2A, 0xF1, 0x01, 0x29, 0x25, 0x07, 0x7F, 0x01, 0x2A, 0x8D, 0x10, 0x8D, 0x0E, 0x33, 0x38, 0x39, 0xC6, 0x01, 0xD7, 0x03, 0x8D, 0x00, 0xFE, 0x01, 0x23, 0x20, 0x03, 0xFE, 0x01, 0x25, 0x7E, 0xF8, 0x61, 0x7E, 0xE1, 0x07, 0x81, 0x08, 0x26, 0x0C, 0x8C, 0x40, 0x00, 0x27, 0x50, 0x86, 0x60, 0x09, 0xA7, 0x00, 0x20, 0x2E, 0x81, 0x0D, 0x26, 0x14, 0xF6, 0x01, 0x81, 0x86, 0x60, 0xA7, 0x00, 0x08, 0x5C, 0xC5, 0x1F, 0x26, 0xF8, 0x20, 0x1B, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 0x20, 0x25, 0x2D, 0x4D, 0x2B, 0x0C, 0x81, 0x40, 0x25, 0x06, 0x81, 0x60, 0x25, 0x04, 0x84, 0xDF, 0x88, 0x40, 0xA7, 0x00, 0x08, 0xFF, 0x01, 0x80, 0x8C, 0x42, 0x00, 0x26, 0x13, 0xCE, 0x40, 0x00, 0xEC, 0x20, 0xED, 0x00, 0x08, 0x08, 0x8C, 0x41, 0xE0, 0x26, 0xF5, 0xC6, 0x60, 0xBD, 0xFB, 0xD9, 0x7E, 0xE1, 0x18, 0x39, 0xBD, 0x01, 0x8B, 0x3C, 0x37, 0x36, 0x96, 0xE8, 0x27, 0x08, 0xFE, 0x01, 0x27, 0xFC, 0x01, 0x29, 0x20, 0x0A, 0xF6, 0x01, 0x81, 0xC4, 0x1F, 0xCE, 0x10, 0x10, 0x86, 0x20, 0xDF, 0xE4, 0xD7, 0xE6, 0x97, 0xE7, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xFB, 0xD4, 0x7E, 0xD8, 0xF5, 0x7F, 0x01, 0x7F, 0xCE, 0x01, 0xB2, 0xC6, 0x01, 0xBD, 0xF8, 0x65, 0x7D, 0x00, 0xE9, 0x26, 0x4D, 0x7D, 0x00, 0xE8, 0x26, 0x44, 0x4D, 0x2A, 0x1E, 0x7D, 0x01, 0x3A, 0x27, 0x19, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x08, 0x3C, 0x36, 0x84, 0x7F, 0xDE, 0x89, 0x8D, 0x48, 0xDF, 0x89, 0x32, 0x38, 0x4D, 0x2A, 0xEE, 0xDE, 0x89, 0x20, 0xD2, 0x81, 0x0C, 0x27, 0xC0, 0x81, 0x08, 0x26, 0x08, 0x5A, 0x27, 0xBF, 0x09, 0x8D, 0x37, 0x20, 0xC2, 0x81, 0x15, 0x26, 0x0A, 0x5A, 0x27, 0xB3, 0x86, 0x08, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x81, 0x03, 0x0D, 0x27, 0x05, 0x81, 0x0D, 0x26, 0x0E, 0x4F, 0x07, 0x36, 0xBD, 0xE7, 0x66, 0x6F, 0x00, 0xCE, 0x01, 0xB1, 0x32, 0x06, 0x39, 0x81, 0x20, 0x25, 0x99, 0x8D, 0x02, 0x20, 0x95, 0xC1, 0xFA, 0x24, 0x82, 0xA7, 0x00, 0x08, 0x5C, 0x7E, 0xF9, 0xC6, 0x8D, 0x43, 0x3C, 0xBD, 0xE0, 0x9D, 0x38, 0xC1, 0x08, 0x22, 0x37, 0x5A, 0x2B, 0x05, 0x86, 0x10, 0x3D, 0x20, 0x08, 0xD6, 0xE1, 0x2A, 0x03, 0xC4, 0x70, 0x21, 0x5F, 0xD7, 0x82, 0x8D, 0x77, 0x96, 0xE1, 0x2B, 0x01, 0x4F, 0x84, 0x0F, 0xBA, 0x01, 0x3C, 0x9A, 0x82, 0x8A, 0x80, 0x7E, 0xE0, 0x88, 0x8D, 0x13, 0x8D, 0x62, 0xBD, 0xE0, 0xA2, 0x2A, 0xF2, 0x73, 0x01, 0x3C, 0xF4, 0x01, 0x3C, 0x7E, 0xE0, 0x89, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2C, 0xBD, 0xEF, 0x0D, 0xC1, 0x3F, 0x22, 0xF3, 0x37, 0xBD, 0xEF, 0x47, 0xC1, 0x1F, 0x22, 0xEB, 0x37, 0x54, 0x86, 0x20, 0x3D, 0xC3, 0x40, 0x00, 0x37, 0x36, 0x30, 0xE6, 0x03, 0x54, 0x38, 0x3A, 0x32, 0x33, 0x84, 0x01, 0x56, 0x49, 0xC6, 0x10, 0x54, 0x4A, 0x2A, 0xFC, 0xF7, 0x01, 0x3C, 0x39, 0x8D, 0xCF, 0xBD, 0xE0, 0x98, 0x96, 0xE1, 0x2A, 0x0E, 0xB4, 0x01, 0x3C, 0x27, 0x08, 0xD6, 0xE1, 0x54, 0x54, 0x54, 0x54, 0xC4, 0x07, 0x5C, 0x4F, 0x5D, 0x2A, 0x01, 0x43, 0xBD, 0xEC, 0xE3, 0x7E, 0xEA, 0x29, 0x01, 0x27, 0x13, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x1D, 0x5D, 0x27, 0x06, 0x5A, 0x86, 0x10, 0x3D, 0xCA, 0x0F, 0xCA, 0x80, 0x8C, 0xC6, 0x60, 0x7E, 0xE1, 0x2A, 0xFF, 0x01, 0x80, 0xE7, 0x00, 0x08, 0x8C, 0x42, 0x00, 0x26, 0xF8, 0x39, 0x8D, 0xED, 0xCE, 0xF8, 0x33, 0x7E, 0xE7, 0xA8, 0xB6, 0x01, 0x7F, 0x26, 0x03, 0xBD, 0xF8, 0x83, 0x7F, 0x01, 0x7F, 0x97, 0xCD, 0x27, 0x03, 0x7E, 0xDF, 0xF7, 0x97, 0xD0, 0x7E, 0xEE, 0x9D, 0x27, 0x06, 0xBD, 0xEF, 0x4C, 0xFF, 0x01, 0x1F, 0xCE, 0xC8, 0x4A, 0x6E, 0x00, 0xDE, 0x99, 0x3C, 0xBD, 0xEB, 0x1B, 0xBD, 0xEA, 0x29, 0xDF, 0x89, 0x38, 0xDC, 0x89, 0x9C, 0x99, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x7E, 0xDC, 0xA8, 0xBD, 0xEB, 0xBA, 0x83, 0x01, 0xFF, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xC3, 0x41, 0xFF, 0xFD, 0x01, 0x80, 0x39, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xBD, 0xCB, 0x05, 0x26, 0x05, 0xBD, 0xFD, 0xDB, 0xC6, 0x04, 0xF7, 0x01, 0x67, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xFD, 0x01, 0x6C, 0x8D, 0x2E, 0xFE, 0x01, 0x6F, 0xFF, 0x01, 0x78, 0x86, 0xFF, 0xB7, 0x01, 0x76, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x78, 0x23, 0x0E, 0x4D, 0x26, 0x07, 0xC1, 0xFF, 0x27, 0x03, 0xF7, 0x01, 0x76, 0x8D, 0x44, 0x20, 0xE2, 0x70, 0x01, 0x75, 0x7F, 0x01, 0x76, 0x8D, 0x3A, 0x86, 0x01, 0x97, 0x03, 0x39, 0xBD, 0xFD, 0x29, 0xCE, 0x01, 0x5F, 0xFF, 0x01, 0x78, 0xDF, 0xBF, 0x6F, 0x09, 0x6F, 0x0A, 0xCE, 0x01, 0x57, 0xC6, 0x08, 0xBD, 0xF7, 0xB2, 0x7F, 0x01, 0x75, 0x86, 0x0F, 0xB7, 0x01, 0x76, 0x8D, 0x0B, 0x8D, 0x12, 0x7C, 0x01, 0x75, 0xCE, 0x00, 0x00, 0xBD, 0xF8, 0x61, 0xFE, 0x01, 0x2F, 0x8D, 0x45, 0x09, 0x26, 0xFB, 0x39, 0x01, 0x0F, 0xF6, 0x01, 0x76, 0xF7, 0x01, 0x7B, 0xB6, 0x01, 0x76, 0x27, 0x09, 0xFE, 0x01, 0x78, 0xAB, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0xBB, 0x01, 0x75, 0xB7, 0x01, 0x7A, 0xFE, 0x01, 0x78, 0x8D, 0x20, 0x86, 0x3C, 0x8D, 0x1E, 0xB6, 0x01, 0x75, 0x8D, 0x19, 0xB6, 0x01, 0x76, 0x8D, 0x14, 0x4D, 0x27, 0x0A, 0xA6, 0x00, 0x08, 0x8D, 0x0C, 0x7A, 0x01, 0x7B, 0x26, 0xF6, 0xB6, 0x01, 0x7A, 0x8D, 0x02, 0x86, 0x55, 0x3C, 0x36, 0x36, 0xC6, 0x08, 0x30, 0x64, 0x00, 0xCE, 0x00, 0x20, 0x25, 0x03, 0xCE, 0x00, 0x40, 0x3C, 0x86, 0x01, 0x97, 0x03, 0x09, 0x26, 0xFD, 0x4F, 0x97, 0x03, 0x38, 0x09, 0x26, 0xFD, 0x5A, 0x26, 0xE3, 0x32, 0x32, 0x38, 0x39, 0x8D, 0x08, 0xBD, 0x00, 0xF3, 0x27, 0xF8, 0x7E, 0xEA, 0x3C, 0xCE, 0x01, 0x56, 0x6F, 0x00, 0x86, 0x20, 0x08, 0xA7, 0x00, 0x8C, 0x01, 0x5F, 0x26, 0xF8, 0x9D, 0xF3, 0x0F, 0x27, 0xE1, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0xF7, 0x01, 0x56, 0x27, 0xD6, 0x37, 0xCC, 0x01, 0x57, 0xDD, 0xBF, 0x33, 0x7E, 0xF7, 0xB2, 0x81, 0xA9, 0x26, 0x03, 0x7E, 0xFD, 0xB1, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xFE, 0x06, 0x4F, 0x8D, 0x22, 0xBD, 0xE3, 0xCF, 0x73, 0x01, 0x6E, 0xFC, 0x01, 0x6C, 0xD3, 0x93, 0xBD, 0xE2, 0x1E, 0xDE, 0x93, 0xFF, 0x01, 0x78, 0x8D, 0x4E, 0x2A, 0xF9, 0x4F, 0x97, 0x71, 0x97, 0x72, 0x7E, 0xC8, 0x61, 0x7E, 0xE2, 0xEB, 0x36, 0x8D, 0x10, 0x32, 0x7D, 0x01, 0x74, 0x26, 0x37, 0xB1, 0x01, 0x67, 0x27, 0x32, 0xC6, 0x24, 0x7E, 0xE2, 0x38, 0x8D, 0x8F, 0xBD, 0xFE, 0x37, 0x26, 0x03, 0x7E, 0xFF, 0x4E, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x8D, 0x28, 0x86, 0x04, 0x8D, 0xD8, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xB3, 0x01, 0x6C, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xFE, 0x01, 0x6F, 0xFF, 0x01, 0x78, 0x8D, 0x03, 0x2A, 0xF9, 0x39, 0xBD, 0xFE, 0xB6, 0x26, 0xD7, 0xB6, 0x01, 0x75, 0x27, 0xD2, 0x39, 0xBD, 0x00, 0xEB, 0xC6, 0x01, 0xD7, 0x86, 0xBD, 0xEB, 0x1B, 0x7F, 0x00, 0x86, 0xBD, 0xE9, 0x0E, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0xFF, 0x01, 0x71, 0xDE, 0x89, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0xFF, 0x01, 0x6F, 0xBD, 0x00, 0xF3, 0x27, 0xCC, 0x7E, 0xEA, 0x2F, 0xBD, 0x00, 0xEB, 0x86, 0x02, 0x8D, 0x82, 0xCE, 0x00, 0x00, 0xBD, 0x00, 0xF3, 0x27, 0x06, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x89, 0xFC, 0x01, 0x6A, 0xD3, 0x89, 0xFD, 0x01, 0x1F, 0xFC, 0x01, 0x6C, 0xD3, 0x89, 0x37, 0x36, 0x38, 0x20, 0x99, 0xBD, 0xFD, 0xA2, 0x8D, 0x56, 0x26, 0x9D, 0x39, 0x96, 0xE2, 0x4C, 0x26, 0x0A, 0xBD, 0xFB, 0xD4, 0x86, 0x53, 0x8D, 0x3E, 0xBD, 0xE7, 0xB9, 0x8D, 0x62, 0xBA, 0x01, 0x75, 0x26, 0x33, 0x5F, 0x37, 0xCE, 0x01, 0x5F, 0x3A, 0xA6, 0x00, 0xDE, 0xE2, 0x08, 0x26, 0x02, 0x8D, 0x25, 0xCE, 0x01, 0x57, 0x3A, 0xA0, 0x00, 0x30, 0xAA, 0x00, 0xA7, 0x00, 0x5C, 0xC1, 0x08, 0x26, 0xE3, 0x32, 0x4D, 0x27, 0x0B, 0x7D, 0x01, 0x56, 0x27, 0x06, 0x8D, 0x10, 0x26, 0x07, 0x20, 0xBC, 0xC6, 0x46, 0x8D, 0x22, 0x4F, 0x39, 0x7F, 0x00, 0xE8, 0x7E, 0xF9, 0xC6, 0xBD, 0xFF, 0x4E, 0x86, 0xFF, 0x16, 0x8D, 0x2A, 0x26, 0x07, 0xB6, 0x01, 0x75, 0x40, 0x2B, 0xF3, 0x4A, 0xB7, 0x01, 0x7B, 0x39, 0xBD, 0xE0, 0x67, 0xC8, 0x40, 0x96, 0xE2, 0x4C, 0x26, 0x03, 0xBD, 0xE0, 0x6C, 0x39, 0xBD, 0xFF, 0x4E, 0xCE, 0x01, 0x5F, 0xFF, 0x01, 0x78, 0x86, 0x0F, 0x8C, 0x86, 0xFF, 0x5F, 0x36, 0xF7, 0x01, 0x73, 0x01, 0x0F, 0x8D, 0xDB, 0xFE, 0x01, 0x78, 0x4F, 0x8D, 0x5B, 0x46, 0x81, 0x3C, 0x26, 0xF9, 0x8D, 0x46, 0xB7, 0x01, 0x75, 0x8D, 0x41, 0xB7, 0x01, 0x76, 0x33, 0x11, 0x22, 0x31, 0xBB, 0x01, 0x75, 0xB7, 0x01, 0x7A, 0xB6, 0x01, 0x76, 0xB7, 0x01, 0x7B, 0x27, 0x19, 0x8D, 0x2A, 0x7D, 0x01, 0x73, 0x26, 0x07, 0xA7, 0x00, 0xA1, 0x00, 0x26, 0x19, 0x08, 0xBB, 0x01, 0x7A, 0xB7, 0x01, 0x7A, 0x7A, 0x01, 0x7B, 0x26, 0xE7, 0x8D, 0x11, 0xB0, 0x01, 0x7A, 0x27, 0x08, 0x86, 0x01, 0x8C, 0x86, 0x03, 0x8C, 0x86, 0x02, 0xB7, 0x01, 0x7B, 0x39, 0x86, 0x08, 0xB7, 0x01, 0x7C, 0x8D, 0x07, 0x46, 0x7A, 0x01, 0x7C, 0x26, 0xF8, 0x39, 0x8D, 0x08, 0xF6, 0x01, 0x7D, 0x5A, 0xF1, 0x01, 0x2C, 0x39, 0x7F, 0x01, 0x7D, 0x7D, 0x01, 0x7E, 0x26, 0x11, 0x8D, 0x07, 0x26, 0xFC, 0x8D, 0x03, 0x27, 0xFC, 0x39, 0x7C, 0x01, 0x7D, 0xD6, 0x03, 0xC4, 0x10, 0x39, 0x8D, 0xF6, 0x27, 0xFC, 0x8D, 0xF2, 0x26, 0xFC, 0x39, 0x01, 0x0F, 0x7F, 0x01, 0x7C, 0x8D, 0xDF, 0x8D, 0x2D, 0x22, 0x12, 0x8D, 0x22, 0x25, 0x12, 0x7A, 0x01, 0x7C, 0xB6, 0x01, 0x7C, 0x81, 0xA0, 0x26, 0xEC, 0xB7, 0x01, 0x7E, 0x39, 0x8D, 0x10, 0x22, 0xE6, 0x8D, 0x13, 0x25, 0xE6, 0x7C, 0x01, 0x7C, 0xB6, 0x01, 0x7C, 0x80, 0x60, 0x20, 0xE8, 0x7F, 0x01, 0x7D, 0x8D, 0xB6, 0x20, 0x05, 0x7F, 0x01, 0x7D, 0x8D, 0xC0, 0xF6, 0x01, 0x7D, 0xF1, 0x01, 0x2D, 0x22, 0x04, 0xF1, 0x01, 0x2E, 0x39, 0x7F, 0x01, 0x7C, 0x39, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5D, 0x26, 0x37, 0x7E, 0xEC, 0x2E, 0x8D, 0xF5, 0x37, 0x8D, 0xEF, 0x32, 0x36, 0x37, 0x07, 0x36, 0x0F, 0x96, 0x5C, 0x01, 0x01, 0xDE, 0x09, 0xD6, 0x08, 0xDF, 0x0B, 0x88, 0x80, 0xB7, 0xBF, 0xFF, 0x30, 0xE6, 0x02, 0x08, 0x08, 0x5C, 0x26, 0xFB, 0xD6, 0x08, 0x58, 0x2A, 0xEE, 0x30, 0x6A, 0x01, 0x26, 0xE3, 0x96, 0x5C, 0xB7, 0xBF, 0xFF, 0x32, 0x38, 0x06, 0x39, 0x45, 0x58, 0xF8, 0x83, 0xF9, 0xC6, 0xFF, 0x4E, 0xFE, 0xB9, 0xFC, 0xC0, 0xFF, 0xAB, 0xFC, 0xB7, 0xEC, 0xE3, 0xEB, 0xC7, 0x00, 0xC9, 0x01, 0x00, 0x01, 0x03, 0x01, 0x06, 0x01, 0x09, 0x01, 0x0C, 0x01, 0x0F, 0x01, 0x12, 0xC0, 0x06];
//MC10.ROM = [0xC9, 0x96, 0xC9, 0x2A, 0xFF, 0xFF, 0x0F, 0xCC, 0xFF, 0x01, 0xDD, 0x00, 0xDD, 0x02, 0x4F, 0x5F, 0xFD, 0xBF, 0x00, 0x8E, 0x01, 0xF1, 0x86, 0xFB, 0xBD, 0xF8, 0xD0, 0x26, 0x21, 0x96, 0xEA, 0x81, 0x55, 0x26, 0x1B, 0xCE, 0xC0, 0x2B, 0xCC, 0x00, 0x16, 0x8D, 0x54, 0x73, 0xBF, 0x01, 0xFE, 0x01, 0x21, 0x20, 0x04, 0x01, 0xFE, 0x42, 0x21, 0xA6, 0x00, 0x4A, 0x26, 0x02, 0x6E, 0x00, 0x7F, 0xBF, 0x01, 0x8E, 0x42, 0xFF, 0xBF, 0xBF, 0xFF, 0x7F, 0x00, 0x7E, 0xBD, 0xFB, 0xD4, 0x8D, 0x22, 0x73, 0xBF, 0x01, 0x5F, 0xCE, 0x3F, 0xE0, 0xE7, 0x1F, 0x09, 0x26, 0xFB, 0xCE, 0xC0, 0xE9, 0x08, 0xEC, 0x00, 0xFD, 0x01, 0x80, 0x08, 0x08, 0xA6, 0x00, 0x27, 0xF4, 0x2B, 0x21, 0xBD, 0xF9, 0xC9, 0x20, 0xF4, 0x7C, 0xBF, 0x00, 0x8D, 0x03, 0x7F, 0xBF, 0x00, 0xCE, 0xC0, 0x00, 0xCC, 0x40, 0x00, 0x9F, 0x91, 0x35, 0x38, 0x3C, 0x38, 0x83, 0x00, 0x02, 0x22, 0xF8, 0x9E, 0x91, 0x39, 0xCC, 0xFE, 0x10, 0x97, 0x02, 0x0D, 0x4C, 0xF5, 0xBF, 0xFF, 0x27, 0x05, 0x79, 0x00, 0x02, 0x25, 0xF5, 0x81, 0x02, 0x2C, 0xEB, 0xCE, 0x40, 0x00, 0xC6, 0x80, 0xBD, 0xFB, 0xD9, 0x4D, 0x27, 0x15, 0x4A, 0x27, 0x1F, 0xC6, 0x02, 0xF7, 0xBF, 0x01, 0x8D, 0xBA, 0x7C, 0xBF, 0x01, 0xCE, 0xC0, 0x33, 0xFF, 0x01, 0x21, 0x20, 0x1F, 0xCE, 0x4C, 0x00, 0xDF, 0x6E, 0xCE, 0x41, 0xFD, 0xCC, 0x05, 0x00, 0x20, 0x0B, 0xCE, 0x02, 0xC1, 0xDF, 0x6E, 0xCE, 0x00, 0xFD, 0xCC, 0x08, 0x02, 0x97, 0x5D, 0xD7, 0x7E, 0xF7, 0xBF, 0x00, 0xCC, 0xFF, 0x00, 0xF7, 0xBF, 0xFF, 0x7E, 0xF7, 0x55, 0x40, 0x0A, 0x42, 0x4F, 0x4F, 0x54, 0x20, 0x4D, 0x45, 0x4E, 0x55, 0x00, 0x40, 0x83, 0x5B, 0x30, 0x5D, 0x20, 0x20, 0x4D, 0x49, 0x43, 0x52, 0x4F, 0x43, 0x4F, 0x4C, 0x4F, 0x52, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x00, 0x40, 0xA3, 0x5B, 0x31, 0x5D, 0x20, 0x20, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x00, 0x40, 0xC3, 0x5B, 0x32, 0x5D, 0x20, 0x20, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x28, 0x4C, 0x41, 0x52, 0x47, 0x45, 0x29, 0x00, 0x41, 0xE4, 0x44, 0x41, 0x52, 0x52, 0x45, 0x4E, 0x20, 0x41, 0x54, 0x4B, 0x49, 0x4E, 0x53, 0x4F, 0x4E, 0x20, 0x2D, 0x20, 0x32, 0x30, 0x31, 0x31, 0xFF, 0x46, 0x4F, 0xD2, 0x47, 0x4F, 0x54, 0xCF, 0x47, 0x4F, 0x53, 0x55, 0xC2, 0x52, 0x45, 0xCD, 0x49, 0xC6, 0x44, 0x41, 0x54, 0xC1, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x4F, 0xCE, 0x49, 0x4E, 0x50, 0x55, 0xD4, 0x45, 0x4E, 0xC4, 0x4E, 0x45, 0x58, 0xD4, 0x44, 0x49, 0xCD, 0x52, 0x45, 0x41, 0xC4, 0x4C, 0x45, 0xD4, 0x52, 0x55, 0xCE, 0x52, 0x45, 0x53, 0x54, 0x4F, 0x52, 0xC5, 0x52, 0x45, 0x54, 0x55, 0x52, 0xCE, 0x53, 0x54, 0x4F, 0xD0, 0x50, 0x4F, 0x4B, 0xC5, 0x43, 0x4F, 0x4E, 0xD4, 0x4C, 0x49, 0x53, 0xD4, 0x43, 0x4C, 0x45, 0x41, 0xD2, 0x4E, 0x45, 0xD7, 0x43, 0x4C, 0x4F, 0x41, 0xC4, 0x43, 0x53, 0x41, 0x56, 0xC5, 0x4C, 0x4C, 0x49, 0x53, 0xD4, 0x4C, 0x50, 0x52, 0x49, 0x4E, 0xD4, 0x53, 0x45, 0xD4, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x43, 0x4C, 0xD3, 0x53, 0x4F, 0x55, 0x4E, 0xC4, 0x45, 0x58, 0x45, 0xC3, 0x53, 0x4B, 0x49, 0x50, 0xC6, 0x54, 0x41, 0x42, 0xA8, 0x54, 0xCF, 0x54, 0x48, 0x45, 0xCE, 0x4E, 0x4F, 0xD4, 0x53, 0x54, 0x45, 0xD0, 0x4F, 0x46, 0xC6, 0xAB, 0xAD, 0xAA, 0xAF, 0xDE, 0x41, 0x4E, 0xC4, 0x4F, 0xD2, 0xBE, 0xBD, 0xBC, 0x53, 0x47, 0xCE, 0x49, 0x4E, 0xD4, 0x41, 0x42, 0xD3, 0x55, 0x53, 0xD2, 0x52, 0x4E, 0xC4, 0x53, 0x51, 0xD2, 0x4C, 0x4F, 0xC7, 0x45, 0x58, 0xD0, 0x53, 0x49, 0xCE, 0x43, 0x4F, 0xD3, 0x54, 0x41, 0xCE, 0x50, 0x45, 0x45, 0xCB, 0x4C, 0x45, 0xCE, 0x53, 0x54, 0x52, 0xA4, 0x56, 0x41, 0xCC, 0x41, 0x53, 0xC3, 0x43, 0x48, 0x52, 0xA4, 0x4C, 0x45, 0x46, 0x54, 0xA4, 0x52, 0x49, 0x47, 0x48, 0x54, 0xA4, 0x4D, 0x49, 0x44, 0xA4, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x56, 0x41, 0x52, 0x50, 0x54, 0xD2, 0x49, 0x4E, 0x4B, 0x45, 0x59, 0xA4, 0x4D, 0x45, 0xCD, 0x45, 0x4C, 0x53, 0xC5, 0x50, 0x43, 0x4C, 0xD3, 0x50, 0x53, 0x45, 0xD4, 0x50, 0x52, 0x45, 0x53, 0x45, 0xD4, 0x4C, 0x49, 0x4E, 0xC5, 0x43, 0x49, 0x52, 0x43, 0x4C, 0xC5, 0x50, 0x41, 0x49, 0x4E, 0xD4, 0x44, 0x52, 0x41, 0xD7, 0x50, 0x4D, 0x4F, 0x44, 0xC5, 0x53, 0x43, 0x52, 0x45, 0x45, 0xCE, 0x43, 0x4F, 0x4C, 0x4F, 0xD2, 0x50, 0x43, 0x4F, 0x50, 0xD9, 0x50, 0x4C, 0x41, 0xD9, 0x4F, 0x50, 0x45, 0xCE, 0x43, 0x4C, 0x4F, 0x53, 0xC5, 0x46, 0x49, 0x4C, 0x45, 0xD3, 0x43, 0x48, 0x41, 0x49, 0xCE, 0x53, 0x57, 0x41, 0xD0, 0x57, 0x41, 0x49, 0xD4, 0x45, 0x52, 0x52, 0x4F, 0xD2, 0xA7, 0x44, 0x45, 0xC6, 0x4C, 0x4F, 0x41, 0xC4, 0x53, 0x41, 0x56, 0xC5, 0x4D, 0x45, 0x52, 0x47, 0xC5, 0x44, 0x49, 0xD2, 0x45, 0x44, 0x49, 0xD4, 0x52, 0x45, 0x4E, 0x55, 0xCD, 0x41, 0x55, 0x54, 0xCF, 0x44, 0x45, 0xCC, 0x54, 0x52, 0x4F, 0xCE, 0x54, 0x52, 0x4F, 0x46, 0xC6, 0x42, 0x52, 0x45, 0x41, 0xCB, 0x48, 0x45, 0x58, 0xA4, 0x45, 0x4F, 0xC6, 0x46, 0x49, 0xD8, 0x50, 0x4F, 0xD3, 0x53, 0x54, 0x52, 0x4D, 0x45, 0xCD, 0x41, 0x54, 0xCE, 0x50, 0x50, 0x4F, 0x49, 0x4E, 0xD4, 0x53, 0x54, 0x52, 0x49, 0x4E, 0x47, 0xA4, 0x49, 0x4E, 0x53, 0x54, 0xD2, 0x4D, 0x49, 0x4E, 0x56, 0x41, 0xCC, 0x4D, 0x41, 0x58, 0x56, 0x41, 0xCC, 0x54, 0x49, 0x4D, 0x45, 0xD2, 0x45, 0x52, 0x52, 0xCC, 0x45, 0x52, 0x52, 0xCE, 0x00, 0xE6, 0x85, 0xD8, 0x0B, 0xD7, 0x5B, 0xD7, 0x5C, 0xD5, 0x31, 0xD2, 0x1F, 0xD3, 0xC4, 0xD0, 0x95, 0xD8, 0x43, 0xD8, 0x85, 0xD7, 0xDB, 0xD9, 0x27, 0xCE, 0x76, 0xC5, 0xE0, 0xC4, 0x9B, 0xC4, 0x09, 0xC7, 0x32, 0xDF, 0x02, 0xDC, 0x53, 0xDD, 0x9B, 0xE6, 0x85, 0xE0, 0x46, 0xC7, 0xA4, 0xCA, 0x77, 0xC7, 0x7C, 0xC6, 0x83, 0xDA, 0x6B, 0xCC, 0x45, 0xCC, 0x0B, 0xCE, 0x17, 0xDC, 0x08, 0xDC, 0x09, 0xDC, 0xD2, 0xC6, 0x3B, 0xDE, 0xC7, 0xDD, 0x7A, 0xDC, 0x81, 0xDE, 0x9D, 0xD7, 0x23, 0xDE, 0x35, 0xDD, 0xB0, 0xDE, 0xD7, 0xDE, 0xFD, 0xDC, 0xA6, 0xDC, 0xA3, 0xDC, 0xB3, 0xBD, 0xC4, 0x87, 0x8D, 0x5D, 0x8D, 0x34, 0xDD, 0x66, 0xD7, 0x68, 0xDD, 0x74, 0xDD, 0x76, 0xD7, 0x73, 0xC6, 0x80, 0xDD, 0x46, 0xC6, 0x60, 0xDD, 0x48, 0xCC, 0x8F, 0x02, 0xDD, 0x69, 0x86, 0x04, 0xDD, 0x6B, 0x39, 0xDC, 0x0B, 0xD3, 0xFB, 0x95, 0x08, 0xDD, 0x0B, 0xDC, 0xF9, 0x27, 0x11, 0xB3, 0x00, 0x3D, 0xDD, 0xF9, 0x22, 0x0F, 0x32, 0xBE, 0x00, 0x36, 0x06, 0x4F, 0x5F, 0xDD, 0xF9, 0x39, 0xDE, 0xFD, 0x08, 0xDF, 0xFD, 0x3B, 0x81, 0xDC, 0x27, 0x16, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE5, 0xBF, 0xDC, 0xA1, 0x93, 0x9B, 0x37, 0x36, 0x7E, 0xE5, 0xCE, 0xDE, 0x93, 0x6F, 0x00, 0x08, 0x8C, 0x9D, 0xEB, 0xCC, 0xFF, 0xFF, 0xDD, 0x78, 0xD7, 0x7A, 0x39, 0xBD, 0xE7, 0xAB, 0x33, 0x96, 0xE8, 0x2E, 0x03, 0x7E, 0xE7, 0x55, 0xBD, 0xE7, 0x66, 0x9D, 0xF3, 0x7E, 0xE7, 0x36, 0x96, 0xE8, 0x2E, 0x06, 0xBD, 0xE7, 0xB9, 0x5A, 0x26, 0xFA, 0x39, 0x8D, 0x7C, 0xBD, 0xEF, 0x0D, 0xC1, 0x0F, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xD7, 0x70, 0xDC, 0x93, 0xDD, 0xC1, 0x83, 0x00, 0x01, 0x93, 0x6E, 0xDD, 0xD7, 0x86, 0x82, 0xD6, 0x70, 0x3D, 0x05, 0x93, 0xD7, 0xDD, 0xD7, 0x27, 0x50, 0x2B, 0x0F, 0xDC, 0x99, 0xDD, 0xBD, 0xD3, 0xD7, 0xDD, 0xBB, 0x25, 0x45, 0xBD, 0xE1, 0xFE, 0x20, 0x0F, 0xD3, 0x93, 0xDD, 0xBF, 0xDC, 0x99, 0x93, 0x93, 0x9F, 0x91, 0xBD, 0xCE, 0x5D, 0x9E, 0x91, 0xCE, 0x00, 0x93, 0x8D, 0x25, 0x08, 0x08, 0x8C, 0x00, 0x9B, 0x26, 0xF7, 0xBD, 0xE2, 0xF3, 0xDD, 0xA7, 0xDE, 0x93, 0x09, 0xE7, 0x00, 0xD7, 0x71, 0xBD, 0xC6, 0xDE, 0x8D, 0x1F, 0xDE, 0xE2, 0x08, 0x27, 0x0E, 0xCE, 0x00, 0xF4, 0x8D, 0x03, 0xCE, 0x00, 0xAD, 0xEC, 0x00, 0xD3, 0xD7, 0xED, 0x00, 0x39, 0x7E, 0xE2, 0x36, 0x8D, 0x03, 0x7E, 0xE5, 0x7F, 0x86, 0xFF, 0x21, 0x4F, 0xD6, 0x70, 0xD7, 0x6D, 0x27, 0x09, 0x36, 0x8D, 0x0E, 0x32, 0x7A, 0x00, 0x6D, 0x26, 0xF7, 0x39, 0x27, 0xEA, 0xBD, 0xC5, 0x84, 0x86, 0xFF, 0x97, 0x82, 0xBD, 0xC5, 0xA4, 0xA6, 0x00, 0x6F, 0x00, 0x94, 0x82, 0x2A, 0xEB, 0xE6, 0x02, 0x27, 0x03, 0x8D, 0x01, 0x5F, 0x4F, 0xDD, 0x83, 0xC6, 0x04, 0x3A, 0xFF, 0x01, 0x6F, 0xD6, 0x7E, 0xD7, 0xFF, 0x7E, 0xCA, 0xD2, 0x36, 0xBD, 0xC5, 0x70, 0x24, 0x03, 0x7E, 0xF9, 0xCE, 0x32, 0xE6, 0x00, 0x2A, 0x16, 0xDA, 0x6D, 0xD7, 0xE0, 0xE6, 0x02, 0x3C, 0x3A, 0xA7, 0x04, 0x38, 0x6C, 0x02, 0x26, 0x07, 0x36, 0xCC, 0x01, 0x00, 0x8D, 0xCE, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xF8, 0xD2, 0x27, 0xFA, 0x38, 0xBD, 0xF8, 0xCE, 0x27, 0x04, 0x86, 0x0C, 0x20, 0xEE, 0x7E, 0xF8, 0xC8, 0xBD, 0x01, 0x85, 0x3C, 0x37, 0x7F, 0x00, 0xE9, 0x8D, 0x67, 0x24, 0x03, 0x7E, 0xF8, 0x6A, 0xE6, 0x00, 0x2F, 0x20, 0xDA, 0x6D, 0xD7, 0xE0, 0xEC, 0x01, 0x27, 0x15, 0x3C, 0xE6, 0x03, 0x3A, 0xA6, 0x04, 0x38, 0x6C, 0x03, 0x6A, 0x02, 0x26, 0xC3, 0x6F, 0x01, 0x36, 0xBD, 0xC6, 0x21, 0x20, 0xBA, 0x73, 0x00, 0xE9, 0x4F, 0x20, 0xB5, 0x27, 0x06, 0x7D, 0x00, 0xE8, 0x27, 0x02, 0x4F, 0x16, 0xDD, 0x80, 0x39, 0xBD, 0xE7, 0xE0, 0x8D, 0x03, 0x7E, 0xE7, 0x21, 0x8D, 0x06, 0xBD, 0xE7, 0xFF, 0x7E, 0xE8, 0x11, 0x81, 0x23, 0x26, 0x0C, 0x8D, 0x22, 0x2B, 0x79, 0x5D, 0x2B, 0x79, 0x97, 0xE8, 0xBD, 0xEA, 0x2F, 0x81, 0x22, 0x26, 0x1E, 0xBD, 0xEA, 0x07, 0xC6, 0x3B, 0xBD, 0xEA, 0x31, 0x7E, 0xE7, 0xAB, 0x0D, 0xD6, 0xE8, 0x2F, 0x0E, 0xD7, 0x6D, 0x20, 0x33, 0x8D, 0x0E, 0x27, 0x04, 0xE6, 0x00, 0x27, 0x57, 0x96, 0x6D, 0x39, 0x8D, 0x03, 0x27, 0x4A, 0x39, 0x81, 0x23, 0x26, 0x02, 0x9D, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC7, 0xD7, 0x6D, 0x27, 0x08, 0xC3, 0x00, 0x02, 0x27, 0x19, 0x83, 0x00, 0x03, 0x4D, 0x26, 0x2E, 0xD6, 0x6D, 0x27, 0x0F, 0xD1, 0x70, 0x22, 0x26, 0x5A, 0x86, 0x82, 0x3D, 0x05, 0xD3, 0x6E, 0xDD, 0x91, 0xDE, 0x91, 0x39, 0x81, 0x40, 0x26, 0x03, 0x7E, 0xE7, 0x2B, 0x81, 0x23, 0x27, 0x03, 0x7E, 0xE7, 0x38, 0x8D, 0xB1, 0x2F, 0x03, 0x5D, 0x2A, 0x08, 0x97, 0xE8, 0x7E, 0xE7, 0x2E, 0x7E, 0xDD, 0x96, 0x7E, 0xFD, 0x9D, 0xC6, 0x36, 0x8C, 0xC6, 0x34, 0x7E, 0xE2, 0x38, 0xBD, 0xDD, 0xAA, 0x5D, 0x27, 0xEF, 0x86, 0x80, 0xE6, 0x00, 0xC1, 0x4F, 0x27, 0x0B, 0xC1, 0x41, 0x27, 0x06, 0xC1, 0x49, 0x26, 0xDF, 0x44, 0x21, 0x47, 0x36, 0xBD, 0xEA, 0x2F, 0x8D, 0x85, 0xA6, 0x00, 0x26, 0xD8, 0xBD, 0xEA, 0x2F, 0x8D, 0x4B, 0x33, 0x37, 0xDA, 0x6D, 0xBD, 0xCA, 0x5B, 0xCC, 0x02, 0x4F, 0x8D, 0x59, 0x8D, 0x8E, 0x4F, 0x5F, 0xED, 0x01, 0xA7, 0x03, 0x33, 0xE7, 0x00, 0x2B, 0x96, 0x3C, 0xC6, 0x04, 0x3A, 0xFF, 0x01, 0x6F, 0xFF, 0x01, 0x71, 0x7C, 0x01, 0x71, 0xD6, 0x7E, 0xD7, 0xFF, 0xBD, 0xC8, 0x25, 0x38, 0xDC, 0x8D, 0xED, 0x01, 0x39, 0xBD, 0xC5, 0x92, 0xBD, 0xC5, 0x7B, 0x2B, 0x92, 0x27, 0x0A, 0x5D, 0x2B, 0x8D, 0xEC, 0x01, 0x27, 0x02, 0xC6, 0xFF, 0x53, 0x17, 0x7E, 0xEC, 0xE3, 0x5F, 0xD7, 0x82, 0xD7, 0x83, 0xD7, 0x71, 0x39, 0x81, 0xE2, 0x27, 0x03, 0x7E, 0xFB, 0x25, 0x9D, 0xEB, 0x8D, 0x14, 0xD6, 0x83, 0x27, 0x25, 0xCC, 0x01, 0x43, 0xCE, 0xC8, 0xC8, 0xBD, 0xC8, 0x92, 0xD6, 0x8B, 0x27, 0xE3, 0x7E, 0xE2, 0x38, 0x8D, 0xD7, 0x9D, 0xF3, 0x27, 0xDA, 0x7E, 0xCA, 0x5B, 0x81, 0x94, 0x26, 0x0B, 0x8D, 0xCA, 0xC6, 0x44, 0x9D, 0xEB, 0x27, 0x07, 0x7E, 0xEA, 0x3C, 0x8D, 0xE6, 0xC6, 0x46, 0xD7, 0x37, 0x86, 0x01, 0xD6, 0x37, 0xCE, 0xC8, 0xCB, 0x8D, 0xCF, 0x38, 0xD6, 0x8C, 0x26, 0x0A, 0x96, 0xE2, 0x4C, 0x26, 0x03, 0xCE, 0xE2, 0x71, 0x6E, 0x00, 0xBD, 0xE5, 0x66, 0x3C, 0x4F, 0xDD, 0x8D, 0xD7, 0x82, 0xCE, 0x21, 0x24, 0xDF, 0x80, 0xCE, 0x01, 0xB2, 0xDF, 0x8B, 0xBD, 0xC9, 0x1C, 0x27, 0x03, 0x7E, 0xC8, 0x89, 0x0E, 0xDE, 0x8B, 0xD6, 0x82, 0xBD, 0xE7, 0xAE, 0xBD, 0xE7, 0x6A, 0x4F, 0x97, 0x83, 0x43, 0x97, 0x82, 0x20, 0xBA, 0xDE, 0x95, 0x9C, 0x97, 0x24, 0x09, 0x8D, 0x2C, 0xBD, 0xED, 0xC7, 0x8D, 0x2F, 0x20, 0xF3, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x24, 0x24, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x24, 0xE8, 0x8D, 0x07, 0xBD, 0xED, 0xCD, 0x8D, 0x0A, 0x20, 0xF3, 0x7F, 0x00, 0xC5, 0xDC, 0x93, 0xDD, 0xC1, 0x39, 0x96, 0xC5, 0x27, 0xFB, 0x3C, 0xDE, 0xC5, 0x96, 0x71, 0x27, 0x05, 0xBD, 0xDD, 0x0A, 0x38, 0x39, 0xEC, 0x02, 0xD3, 0xD7, 0xED, 0x02, 0x38, 0x39, 0xCC, 0x11, 0x00, 0xDD, 0x71, 0xBD, 0xCA, 0x5E, 0xD6, 0xE0, 0x26, 0x55, 0xDC, 0x95, 0x93, 0x99, 0x27, 0x69, 0xD3, 0x9B, 0xDD, 0x37, 0xDC, 0x97, 0x93, 0x95, 0xDD, 0x39, 0xDE, 0x34, 0x9C, 0x9B, 0x23, 0x07, 0x9C, 0x9D, 0x22, 0x03, 0x09, 0xDF, 0x9D, 0x8D, 0x81, 0x73, 0x00, 0x71, 0xDE, 0x95, 0xDF, 0xC1, 0xDE, 0x9B, 0x09, 0xDF, 0xBB, 0xDE, 0x99, 0x09, 0xDF, 0xBD, 0x8E, 0x00, 0xDD, 0xBD, 0xE2, 0x00, 0xDE, 0xBF, 0x35, 0x73, 0x01, 0x6E, 0x20, 0x31, 0x8D, 0x0D, 0x81, 0x4D, 0x27, 0x11, 0xDE, 0x93, 0xA6, 0x00, 0x97, 0x72, 0x5F, 0x20, 0x1D, 0x81, 0xA9, 0x27, 0x04, 0x81, 0xD2, 0x26, 0x9E, 0x7E, 0xEA, 0x3C, 0x38, 0x7E, 0xE3, 0xD9, 0x7E, 0xE3, 0xDE, 0x27, 0xF7, 0x25, 0xF9, 0x8D, 0xE8, 0xC6, 0x5F, 0x7F, 0x00, 0x72, 0xD7, 0x71, 0xBD, 0xCA, 0x5E, 0xCC, 0x02, 0x4C, 0xCE, 0xC8, 0xCE, 0xBD, 0xC8, 0x92, 0xDC, 0x8D, 0x27, 0x79, 0x96, 0xE0, 0x26, 0x21, 0xD6, 0x71, 0x2B, 0x1A, 0xD6, 0x72, 0x27, 0x10, 0xDE, 0x93, 0xDF, 0x37, 0xDE, 0x95, 0xDF, 0x39, 0xC6, 0x08, 0x3A, 0xDF, 0x93, 0xFF, 0x01, 0x6F, 0xBD, 0xE3, 0xCF, 0x73, 0x01, 0x6E, 0x77, 0x00, 0x71, 0x9F, 0x91, 0x8E, 0x00, 0xCE, 0xDC, 0x8D, 0x27, 0x49, 0x96, 0xE0, 0x81, 0x02, 0x27, 0x1E, 0xFC, 0x01, 0x6F, 0xDD, 0x8B, 0xD3, 0x8D, 0xFD, 0x01, 0x6F, 0x7D, 0x00, 0xE0, 0x27, 0x08, 0xB3, 0x01, 0x71, 0x23, 0x10, 0x7E, 0xE2, 0x36, 0xDD, 0x95, 0xBD, 0xE2, 0x20, 0x20, 0x06, 0xDC, 0x8B, 0xD3, 0xDE, 0xDD, 0x8B, 0xCC, 0x04, 0x47, 0xCE, 0xC9, 0x0D, 0x8D, 0x75, 0x9C, 0x8F, 0x26, 0xF7, 0x96, 0xE0, 0x85, 0x40, 0x27, 0x03, 0x39, 0x9F, 0x91, 0xCC, 0x03, 0x4E, 0xCE, 0xC8, 0xFD, 0x8D, 0x63, 0x20, 0xB3, 0x9E, 0x91, 0xD6, 0x90, 0x26, 0x54, 0x96, 0xE0, 0x27, 0x1F, 0x81, 0x02, 0x26, 0x6C, 0xDC, 0x8B, 0xD3, 0xDE, 0xFD, 0x01, 0x1F, 0x96, 0x71, 0x27, 0x61, 0x96, 0x08, 0x36, 0x84, 0xF7, 0x97, 0x08, 0xFE, 0x01, 0x1F, 0xAD, 0x00, 0x32, 0x97, 0x08, 0x39, 0x5F, 0xDE, 0x95, 0xED, 0x00, 0xA7, 0x02, 0xBD, 0xE2, 0xF3, 0x08, 0x08, 0xDF, 0x95, 0x96, 0x71, 0x2B, 0x11, 0xBD, 0xE3, 0xD9, 0x96, 0x72, 0x26, 0x0D, 0x96, 0x71, 0x26, 0x03, 0x7E, 0xE2, 0x71, 0x7E, 0xCB, 0x49, 0x7E, 0xCB, 0x24, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0x7E, 0xCB, 0xBC, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x38, 0x4A, 0x27, 0xF7, 0xD7, 0x81, 0x3C, 0x37, 0x36, 0x86, 0x21, 0x97, 0x80, 0x0F, 0xAD, 0x00, 0x07, 0xD6, 0x7E, 0xF7, 0xBF, 0x00, 0x06, 0x32, 0x33, 0x26, 0xE5, 0x31, 0x31, 0x39, 0x8D, 0x05, 0x81, 0x03, 0x27, 0xFA, 0x39, 0xCE, 0x00, 0x1C, 0xCC, 0x00, 0x04, 0x09, 0x27, 0xF6, 0xD5, 0x03, 0x27, 0x04, 0x8A, 0x02, 0x20, 0xF5, 0x8A, 0x01, 0x20, 0xF1, 0xC6, 0x01, 0x8C, 0xC6, 0x02, 0x8C, 0xC6, 0x06, 0x4F, 0xDD, 0x8D, 0x8D, 0xD7, 0xCE, 0x00, 0x80, 0xCC, 0x00, 0x04, 0xBD, 0xC9, 0x96, 0x96, 0x81, 0x81, 0x53, 0x26, 0x09, 0xCE, 0x01, 0x6A, 0xCC, 0x00, 0x04, 0xBD, 0xC9, 0x96, 0xD6, 0x83, 0x27, 0x06, 0x4F, 0xDE, 0x34, 0xBD, 0xC9, 0x96, 0xCE, 0x00, 0x8B, 0x0D, 0x20, 0x2B, 0xD6, 0x6D, 0xD7, 0x82, 0xCE, 0x00, 0x8B, 0xDF, 0x8B, 0xCC, 0x00, 0x06, 0xDD, 0x8D, 0x20, 0x11, 0xD6, 0x6D, 0xD7, 0x82, 0x96, 0xE0, 0x81, 0x02, 0x27, 0x05, 0x96, 0xFF, 0xB7, 0xBF, 0x00, 0x8D, 0x8E, 0xCE, 0x00, 0x80, 0xCC, 0x00, 0x03, 0x8D, 0x70, 0xDE, 0x8B, 0xDC, 0x8D, 0x0F, 0xDD, 0xDC, 0xCC, 0x00, 0x00, 0xDD, 0xD8, 0xCC, 0x04, 0x01, 0xC9, 0x00, 0x09, 0xDF, 0xDA, 0x9F, 0xD6, 0x9E, 0xDC, 0x27, 0x51, 0x95, 0x03, 0x27, 0x23, 0xCE, 0x00, 0x00, 0x95, 0x03, 0x27, 0x1C, 0x95, 0x03, 0x27, 0x18, 0x09, 0x95, 0x03, 0x27, 0x13, 0x8C, 0x00, 0x01, 0x95, 0x03, 0x27, 0x0C, 0x24, 0xEE, 0x95, 0x03, 0x27, 0x06, 0x5A, 0x26, 0xE7, 0x5A, 0x20, 0x2B, 0x34, 0xBF, 0x00, 0xDC, 0x31, 0x9E, 0xDA, 0x31, 0x9F, 0xDA, 0xC6, 0x40, 0x96, 0x03, 0x09, 0x08, 0xDE, 0xD8, 0x44, 0x44, 0x04, 0x24, 0xF5, 0xB6, 0x00, 0x03, 0x44, 0x44, 0x04, 0x37, 0x3A, 0xDF, 0xD8, 0xCC, 0x04, 0x01, 0xB5, 0x00, 0x03, 0x26, 0xAC, 0x21, 0x5F, 0x9E, 0xD6, 0x5D, 0x39, 0xDD, 0xDC, 0x4F, 0x5F, 0xDD, 0xD8, 0x86, 0x11, 0x06, 0x97, 0x03, 0xE6, 0x00, 0x08, 0x3C, 0xDE, 0xD8, 0x3A, 0x86, 0x08, 0x58, 0xD7, 0x03, 0x56, 0xDF, 0xD8, 0x3C, 0x38, 0x80, 0x01, 0x26, 0xF5, 0xF7, 0x00, 0x03, 0x4C, 0xDE, 0xDC, 0x09, 0xDF, 0xDC, 0x38, 0x26, 0xDD, 0x97, 0x03, 0xDE, 0xD8, 0x39, 0xC6, 0x77, 0x30, 0xE7, 0x03, 0x4F, 0x5F, 0xDD, 0x8D, 0xD6, 0x6D, 0xD7, 0x82, 0xD6, 0xFF, 0xF7, 0xBF, 0x00, 0xCE, 0x00, 0x80, 0xC6, 0x05, 0x8D, 0xB6, 0xDC, 0x83, 0x27, 0x07, 0xFE, 0x01, 0x6F, 0x8D, 0xAD, 0xDF, 0x8D, 0xCE, 0x00, 0x8F, 0xCC, 0x00, 0x02, 0x7E, 0xC9, 0x2A, 0xC6, 0x2C, 0xBD, 0xD9, 0x04, 0xFD, 0x01, 0x6F, 0x8B, 0x0C, 0xFD, 0x01, 0x71, 0x39, 0x5F, 0xD7, 0x6D, 0xD7, 0x36, 0x81, 0x4D, 0x27, 0x1C, 0x81, 0xA9, 0x27, 0x12, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0x81, 0xD2, 0x26, 0x13, 0xCC, 0x40, 0x00, 0x8D, 0xDC, 0xC6, 0x06, 0x20, 0x06, 0xBD, 0xFD, 0xDB, 0xC6, 0x02, 0x8C, 0x9D, 0xEB, 0xCB, 0x02, 0xD7, 0xE0, 0xBD, 0xE9, 0x1A, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xDF, 0x34, 0xCE, 0x00, 0x00, 0xFF, 0x01, 0x6A, 0x9D, 0xF3, 0x27, 0x12, 0xD6, 0xE0, 0xC1, 0x08, 0x27, 0xAD, 0xD6, 0x71, 0x26, 0x06, 0xC6, 0x02, 0xD1, 0xE0, 0x26, 0x07, 0x8D, 0x79, 0xDF, 0xDE, 0x39, 0xC6, 0x2C, 0x7E, 0xE2, 0x38, 0x8D, 0xCE, 0x8C, 0x8D, 0xA2, 0xDE, 0x34, 0xBD, 0xEE, 0x58, 0xDF, 0x34, 0x96, 0xE0, 0xDD, 0x82, 0x5D, 0x27, 0xE8, 0x80, 0x08, 0x27, 0x02, 0x96, 0x7E, 0x97, 0xFF, 0x39, 0x8D, 0x89, 0x96, 0xE0, 0x26, 0x0A, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xDE, 0xDE, 0x81, 0x02, 0x27, 0x0C, 0x8D, 0xD1, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xFD, 0x01, 0x6C, 0x8C, 0x8D, 0x47, 0xCC, 0x02, 0x53, 0xCE, 0xC8, 0xC8, 0xBD, 0xC8, 0x92, 0xD6, 0x8B, 0x26, 0xB0, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0x81, 0x03, 0x23, 0x03, 0xCC, 0x04, 0x00, 0xDD, 0x83, 0x9F, 0x91, 0x8E, 0x00, 0xCE, 0x8D, 0x14, 0x9E, 0x91, 0xDC, 0x83, 0x27, 0x1D, 0xF3, 0x01, 0x6F, 0xFD, 0x01, 0x6F, 0x20, 0xDC, 0xBD, 0xEA, 0x2F, 0x7E, 0xEF, 0x4C, 0xCC, 0x04, 0x57, 0xCE, 0xC9, 0xC7, 0xBD, 0xC8, 0x8F, 0xDE, 0x8F, 0x9C, 0x8D, 0x26, 0xF4, 0x39, 0xFF, 0x01, 0x6F, 0xFF, 0x01, 0x6C, 0xFF, 0x01, 0x6A, 0x8D, 0xDF, 0xBC, 0x01, 0x6F, 0x25, 0x10, 0x08, 0xFF, 0x01, 0x71, 0x9D, 0xF3, 0x27, 0x05, 0x8D, 0xD0, 0xFF, 0x01, 0x6A, 0x7E, 0xCA, 0x60, 0x7E, 0xEC, 0x2E, 0x9D, 0xF3, 0x81, 0x4D, 0x26, 0x15, 0x38, 0x9D, 0xEB, 0xBD, 0xFD, 0x33, 0x8D, 0xB9, 0x8D, 0xCD, 0xC6, 0x02, 0xF7, 0x01, 0x67, 0xBD, 0xFC, 0x8E, 0x7E, 0xFC, 0x5D, 0x5F, 0x81, 0xA9, 0x39, 0xDC, 0x9B, 0x93, 0x37, 0xD3, 0x95, 0xDD, 0x99, 0xDC, 0x95, 0xD3, 0x39, 0xDD, 0x97, 0x0F, 0x9E, 0x37, 0x34, 0xDE, 0x95, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x99, 0x25, 0xF8, 0x9E, 0x9B, 0xD6, 0x36, 0x27, 0x03, 0x7E, 0xE2, 0x49, 0x7F, 0x01, 0x6E, 0xDE, 0x93, 0xDC, 0xDE, 0x27, 0x07, 0xDD, 0xA5, 0xBD, 0xE3, 0xBB, 0x25, 0x09, 0x09, 0xDF, 0xF4, 0xBD, 0xE3, 0xEE, 0x7E, 0xE5, 0x19, 0xCC, 0xFF, 0xFF, 0xDD, 0xE2, 0x7E, 0xE6, 0x42, 0xD7, 0x36, 0x96, 0x72, 0x26, 0x7B, 0x96, 0x71, 0x2A, 0x03, 0x44, 0x24, 0xAD, 0x7E, 0xE3, 0xCF, 0xD3, 0x3E, 0x25, 0x19, 0xDD, 0x3E, 0xDD, 0xA5, 0x83, 0xF9, 0xFF, 0x22, 0x10, 0x8D, 0x7A, 0xBD, 0xFA, 0xA4, 0x25, 0x09, 0xDF, 0xF4, 0x9D, 0xEB, 0x27, 0x03, 0x7E, 0xE2, 0x96, 0x4F, 0x5F, 0xFD, 0x02, 0xBF, 0x7E, 0xE2, 0x71, 0xBD, 0xE2, 0xF5, 0x96, 0x72, 0x26, 0x08, 0xFC, 0x02, 0xBF, 0x26, 0xCF, 0x7E, 0xE2, 0x7A, 0xDE, 0x95, 0xDF, 0x39, 0xFE, 0x01, 0x6F, 0xDF, 0x93, 0xFE, 0x01, 0x71, 0xDF, 0x95, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xDE, 0x93, 0xEC, 0x00, 0xFD, 0x01, 0x6F, 0x27, 0x21, 0xEC, 0x02, 0xDD, 0xA5, 0xBD, 0xD9, 0xF1, 0x8D, 0x27, 0xCE, 0xF7, 0x4B, 0xBD, 0xE7, 0xA8, 0x8D, 0x28, 0xF6, 0x01, 0x81, 0xC4, 0xE0, 0xF7, 0x01, 0x81, 0xCE, 0x01, 0xB3, 0xDF, 0xF4, 0x7E, 0xE2, 0x96, 0x7F, 0x00, 0x72, 0x8D, 0x0A, 0xBD, 0xCC, 0xF5, 0xD6, 0x36, 0x26, 0x0B, 0x7E, 0xE2, 0x71, 0xDE, 0x39, 0xDF, 0x95, 0xDE, 0x37, 0xDF, 0x93, 0x39, 0xDC, 0xA5, 0xBD, 0xF4, 0x19, 0x7E, 0xE7, 0xB9, 0xCE, 0x00, 0x0A, 0xFF, 0x02, 0xBF, 0x24, 0x02, 0x8D, 0x29, 0xDF, 0x3E, 0x8D, 0x17, 0x24, 0x08, 0xFF, 0x02, 0xBF, 0x27, 0x47, 0xBD, 0xFD, 0x2B, 0xBD, 0xE7, 0x6A, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xDC, 0x3E, 0x7E, 0xCB, 0x80, 0x9D, 0xF3, 0x27, 0x10, 0xBD, 0xEA, 0x2F, 0x25, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x05, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0x0D, 0x39, 0xCC, 0x00, 0x0A, 0xDD, 0x34, 0xDD, 0x38, 0x5F, 0xDD, 0x36, 0x9D, 0xF3, 0x27, 0x1A, 0x24, 0x04, 0x8D, 0xE7, 0xDF, 0x34, 0x8D, 0xD5, 0x24, 0x10, 0xDF, 0x36, 0x8D, 0xCF, 0x24, 0x0A, 0xDF, 0x38, 0x26, 0x03, 0x7E, 0xEC, 0x2E, 0xBD, 0xFD, 0x2B, 0xBD, 0xE3, 0xDE, 0xDC, 0x36, 0xDD, 0xA5, 0xBD, 0xE3, 0xB9, 0xDF, 0x3A, 0xDC, 0x34, 0xDD, 0xA5, 0xBD, 0xE3, 0xB9, 0x9C, 0x3A, 0x25, 0xE3, 0xDE, 0x3A, 0x4F, 0x5F, 0xC3, 0x00, 0x01, 0xEE, 0x00, 0x26, 0xF9, 0x83, 0x00, 0x01, 0x27, 0x5C, 0x05, 0x05, 0xDD, 0x89, 0xDC, 0xA1, 0x93, 0x89, 0xDD, 0x3C, 0xDD, 0x40, 0x83, 0x00, 0x3A, 0xDD, 0xBB, 0x93, 0x95, 0x23, 0x04, 0x93, 0x89, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0x9E, 0x3C, 0x34, 0xDE, 0x3A, 0xEC, 0x02, 0xEE, 0x00, 0x27, 0x1B, 0xDF, 0x3A, 0xDE, 0x40, 0xED, 0x00, 0xDC, 0x34, 0xED, 0x02, 0x81, 0xF9, 0x22, 0x9E, 0xD3, 0x38, 0x25, 0x9A, 0xDD, 0x34, 0xC6, 0x04, 0x3A, 0xDF, 0x40, 0x20, 0xDD, 0xDE, 0x93, 0xDF, 0xC1, 0xDE, 0x95, 0xDF, 0xBD, 0xBD, 0xE2, 0x00, 0x0F, 0x9E, 0xBF, 0x34, 0xDE, 0x93, 0x09, 0x32, 0x33, 0xED, 0x01, 0x26, 0x11, 0x9E, 0x9B, 0x8D, 0x03, 0x7E, 0xE2, 0x71, 0xBD, 0xE2, 0xF3, 0x08, 0x08, 0xDF, 0x95, 0x7E, 0xE3, 0xDE, 0x32, 0x33, 0xED, 0x03, 0xDD, 0xA5, 0xDF, 0x40, 0xDE, 0x3C, 0xA3, 0x00, 0x23, 0x0A, 0xC6, 0x04, 0x3A, 0xDC, 0xA5, 0x9C, 0xA1, 0x25, 0xF3, 0x0D, 0xEC, 0x02, 0xDE, 0x40, 0x25, 0x02, 0xED, 0x03, 0xEC, 0x03, 0xDD, 0xE2, 0xC6, 0x04, 0x3A, 0x5F, 0x20, 0x04, 0xCA, 0x80, 0xCA, 0x02, 0x32, 0x08, 0xA7, 0x00, 0x27, 0xB5, 0x81, 0x20, 0x27, 0xF6, 0x5D, 0x2B, 0xF3, 0xC5, 0x04, 0x27, 0x04, 0x81, 0x2C, 0x27, 0x3B, 0x81, 0x22, 0x26, 0x02, 0xC8, 0x01, 0x81, 0x3A, 0x26, 0x06, 0xC5, 0x01, 0x26, 0xDD, 0xC4, 0xF9, 0x4D, 0x2A, 0xD8, 0xC5, 0x03, 0x26, 0xD4, 0x81, 0x85, 0x27, 0xCE, 0x81, 0x83, 0x27, 0xC8, 0x81, 0xDD, 0x27, 0xC4, 0x81, 0x81, 0x27, 0x14, 0x81, 0x82, 0x27, 0x10, 0x81, 0xA3, 0x27, 0x0C, 0x81, 0xC9, 0x27, 0x08, 0x81, 0x8E, 0x27, 0x04, 0x81, 0x8F, 0x26, 0xB0, 0x9F, 0x3E, 0x32, 0x08, 0xA7, 0x00, 0x27, 0xAC, 0x81, 0x20, 0x27, 0xF4, 0x81, 0x39, 0x22, 0xBB, 0x80, 0x30, 0x25, 0x9C, 0x09, 0x16, 0x4F, 0xDD, 0xCA, 0x9F, 0x89, 0x32, 0x81, 0x20, 0x27, 0xFB, 0x81, 0x39, 0x22, 0x17, 0x80, 0x30, 0x25, 0x13, 0x97, 0x80, 0x96, 0xCA, 0x81, 0x18, 0x22, 0x5C, 0x05, 0x05, 0xD3, 0xCA, 0x05, 0xDB, 0x80, 0x89, 0x00, 0x20, 0xDC, 0xDF, 0x40, 0xDE, 0x89, 0xDF, 0x3E, 0xDE, 0x3C, 0xDC, 0xCA, 0xA3, 0x00, 0x23, 0x08, 0xC6, 0x04, 0x3A, 0x9C, 0xA1, 0x25, 0xF3, 0x0D, 0x25, 0x04, 0xEC, 0x02, 0xDD, 0xCA, 0x9E, 0x3C, 0x34, 0x24, 0x1E, 0xDC, 0xCA, 0x93, 0x36, 0x25, 0x18, 0xDE, 0xCA, 0x3C, 0xCE, 0xCE, 0x0F, 0xBD, 0xE7, 0xA8, 0x30, 0xEC, 0x00, 0xBD, 0xF4, 0x19, 0xBD, 0xF4, 0x12, 0xBD, 0xE7, 0x66, 0x38, 0xDF, 0xCA, 0xBD, 0xDC, 0xAA, 0xBD, 0xF4, 0x26, 0x8E, 0x02, 0xAF, 0xDE, 0x40, 0x32, 0x08, 0xA7, 0x00, 0x26, 0xFA, 0x09, 0x9E, 0x3E, 0xC6, 0x04, 0x7E, 0xCD, 0x2D, 0x55, 0x4C, 0x20, 0x00, 0x7E, 0xEC, 0x2E, 0x27, 0xFB, 0xBD, 0xE6, 0xB2, 0xBD, 0xE3, 0xB9, 0xDF, 0xBF, 0x9D, 0xF3, 0x27, 0x15, 0xCC, 0xFF, 0xA8, 0x97, 0xA5, 0xBD, 0xEA, 0x31, 0x27, 0x0B, 0xBD, 0xE6, 0xB2, 0xBD, 0xFD, 0x2B, 0xCE, 0x00, 0xBF, 0xEE, 0x00, 0xEC, 0x00, 0x27, 0x06, 0xEC, 0x02, 0x93, 0xA5, 0x23, 0xF4, 0xDF, 0xC1, 0xDC, 0x95, 0x93, 0xC1, 0x8D, 0x11, 0xDE, 0xBB, 0xDF, 0x95, 0x9E, 0x9B, 0xBD, 0xE3, 0xDE, 0xDE, 0xBF, 0xBD, 0xE2, 0xF5, 0x7E, 0xE2, 0x71, 0x38, 0xDF, 0x8B, 0xDE, 0xBF, 0xD3, 0xBF, 0xDD, 0xBB, 0x0F, 0x9E, 0xC1, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBB, 0x26, 0xF8, 0xDE, 0x8B, 0x6E, 0x00, 0xCE, 0xCE, 0xC2, 0x8D, 0x06, 0x96, 0x5C, 0xB7, 0xBF, 0xFF, 0x39, 0xDF, 0x34, 0x5F, 0x37, 0x37, 0x5C, 0x37, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0x8C, 0x33, 0x38, 0xD7, 0x3A, 0x27, 0xFA, 0xDF, 0x38, 0x27, 0xE7, 0x96, 0x3A, 0x27, 0xF2, 0xBD, 0xCF, 0xC5, 0x81, 0x3B, 0x27, 0xF5, 0x81, 0x27, 0x27, 0xF1, 0x81, 0x58, 0x27, 0x06, 0xDE, 0x34, 0xAD, 0x00, 0x20, 0xE7, 0xBD, 0xD0, 0x37, 0xC6, 0x02, 0xBD, 0xE2, 0x1A, 0xDE, 0x38, 0x3C, 0xD6, 0x3A, 0x37, 0x20, 0xC9, 0x81, 0x4F, 0x26, 0x0D, 0xD6, 0x6A, 0x5C, 0x8D, 0x55, 0x5A, 0xC1, 0x04, 0x22, 0x5D, 0xD7, 0x6A, 0x39, 0x81, 0x56, 0x26, 0x12, 0xD6, 0x69, 0xC4, 0x1F, 0x8D, 0x43, 0xC1, 0x1F, 0x22, 0x4C, 0x5D, 0x27, 0x02, 0xCA, 0x80, 0xD7, 0x69, 0x39, 0x81, 0x4C, 0x26, 0x25, 0xD6, 0x6B, 0x8D, 0x2F, 0x5D, 0x27, 0x39, 0xD7, 0x6B, 0x7F, 0x00, 0x68, 0x8D, 0x03, 0x24, 0xFC, 0x39, 0x96, 0x3A, 0x27, 0x0A, 0xBD, 0xCF, 0xC5, 0x81, 0x2E, 0x27, 0x05, 0xBD, 0xD0, 0x25, 0x0D, 0x39, 0x7C, 0x00, 0x68, 0x39, 0x81, 0x54, 0x26, 0x0D, 0xD6, 0x6C, 0x8D, 0x06, 0x5D, 0x27, 0x10, 0xD7, 0x6C, 0x39, 0x7E, 0xCF, 0xDA, 0x81, 0x50, 0x26, 0x1A, 0xBD, 0xCF, 0xFA, 0x5D, 0x26, 0x03, 0x7E, 0xEC, 0x2E, 0xDE, 0x68, 0x3C, 0x4F, 0x97, 0x68, 0x97, 0x69, 0x8D, 0x04, 0x38, 0xDF, 0x68, 0x39, 0x36, 0x20, 0x3C, 0x81, 0x4E, 0x26, 0x02, 0x8D, 0x7E, 0x81, 0x41, 0x25, 0x04, 0x81, 0x47, 0x23, 0x06, 0xBD, 0xCF, 0xFC, 0x5A, 0x20, 0x21, 0x16, 0xC0, 0x41, 0xCE, 0xD0, 0x52, 0x3A, 0xE6, 0x00, 0x96, 0x3A, 0x27, 0xF0, 0x8D, 0x61, 0x81, 0x23, 0x27, 0x0E, 0x81, 0x2B, 0x27, 0x0A, 0xC0, 0x02, 0x81, 0x2D, 0x27, 0x04, 0x5C, 0xBD, 0xD0, 0x25, 0xC1, 0x0B, 0x22, 0xB3, 0x37, 0xD6, 0x6B, 0x96, 0x6C, 0x3D, 0xDD, 0x3D, 0x30, 0xDF, 0x36, 0x96, 0x6A, 0xC6, 0x0C, 0x3D, 0x32, 0x1B, 0x16, 0x4F, 0xC1, 0x0E, 0x24, 0x06, 0x4C, 0xC1, 0x02, 0x24, 0x01, 0x4C, 0xCE, 0xD0, 0x59, 0x3A, 0xE6, 0x00, 0xDD, 0x3B, 0xC6, 0xFF, 0x96, 0x68, 0x27, 0x04, 0x8B, 0x02, 0x3D, 0x04, 0xDD, 0xF9, 0xD6, 0x69, 0xC4, 0x80, 0x96, 0x5C, 0x8D, 0x06, 0x01, 0x1B, 0x8D, 0x02, 0x20, 0xF6, 0xB7, 0xBF, 0xFF, 0xDE, 0x3B, 0x09, 0x08, 0x09, 0x26, 0xFB, 0x39, 0x3C, 0x96, 0x3A, 0x27, 0x3B, 0x4A, 0x97, 0x3A, 0xDE, 0x38, 0xA6, 0x00, 0x08, 0xDF, 0x38, 0x81, 0x20, 0x27, 0xEE, 0x38, 0x39, 0x8D, 0xE9, 0x81, 0x2B, 0x26, 0x04, 0x5C, 0x27, 0x22, 0x39, 0x81, 0x2D, 0x26, 0x05, 0xC0, 0x01, 0x25, 0x19, 0x39, 0x81, 0x3E, 0x26, 0x03, 0x58, 0x20, 0xF6, 0x81, 0x3C, 0x26, 0x04, 0x54, 0x39, 0x8D, 0xC9, 0x81, 0x3D, 0x26, 0x08, 0x8D, 0x35, 0x7E, 0xEF, 0x10, 0x7E, 0xEC, 0x2E, 0x8D, 0x24, 0x25, 0xF9, 0x5F, 0x80, 0x30, 0x97, 0x82, 0x86, 0x0A, 0x3D, 0x4D, 0x26, 0xEE, 0xDB, 0x82, 0x25, 0xEA, 0x96, 0x3A, 0x27, 0x0E, 0x8D, 0xA4, 0x8D, 0x0B, 0x24, 0xE8, 0x7C, 0x00, 0x3A, 0xDE, 0x38, 0x09, 0xDF, 0x38, 0x39, 0x81, 0x30, 0x25, 0x04, 0x80, 0x3A, 0x80, 0xC6, 0x39, 0xDE, 0xF4, 0x3C, 0xDE, 0x38, 0x8D, 0x87, 0xBD, 0xEB, 0x76, 0x25, 0xC2, 0x8D, 0x80, 0x81, 0x3B, 0x26, 0xFA, 0xDF, 0xF4, 0xBD, 0xEA, 0x49, 0x38, 0xDF, 0xF4, 0x39, 0x0A, 0x0C, 0x01, 0x03, 0x05, 0x06, 0x08, 0x38, 0x18, 0xFB, 0xDD, 0xC3, 0xA9, 0x91, 0x7B, 0x65, 0x51, 0x3F, 0x2C, 0x1C, 0x0C, 0xFC, 0xEF, 0xE0, 0xD4, 0xC8, 0xBC, 0xB1, 0xA8, 0x9F, 0x95, 0x8D, 0x84, 0x7D, 0x76, 0x70, 0x69, 0x63, 0x5D, 0x58, 0x53, 0x4E, 0x4A, 0x46, 0x42, 0x3E, 0x3A, 0x37, 0x34, 0x30, 0x2E, 0x2B, 0x29, 0x26, 0x24, 0x22, 0x20, 0x1E, 0x1C, 0x1B, 0x19, 0x17, 0x16, 0x15, 0x13, 0x12, 0x11, 0x4F, 0x5F, 0xDD, 0x3B, 0x5C, 0xD7, 0x55, 0xBD, 0xD7, 0xCA, 0xCE, 0xD0, 0xA6, 0xBD, 0xCE, 0x81, 0x39, 0x81, 0x4E, 0x26, 0x04, 0x73, 0x00, 0x3B, 0x39, 0x81, 0x42, 0x26, 0x04, 0x73, 0x00, 0x3C, 0x39, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xD1, 0xE0, 0x36, 0xC6, 0x01, 0x96, 0x3A, 0x27, 0x10, 0xBD, 0xD2, 0x01, 0xBD, 0xEB, 0x76, 0x25, 0x05, 0xBD, 0xD0, 0x25, 0x20, 0x03, 0xBD, 0xCF, 0xFC, 0x32, 0x81, 0x43, 0x26, 0x09, 0xBD, 0xD7, 0xF2, 0xD7, 0x64, 0xBD, 0xD7, 0xCA, 0x39, 0x81, 0x41, 0x26, 0x07, 0xC1, 0x03, 0x22, 0x37, 0xD7, 0x66, 0x39, 0x81, 0x53, 0x26, 0x07, 0xC1, 0x3E, 0x22, 0x2C, 0xD7, 0x67, 0x39, 0x36, 0x4F, 0xDD, 0x3D, 0x50, 0x82, 0x00, 0xDD, 0x3F, 0xDE, 0x3F, 0x32, 0x81, 0x55, 0x27, 0x3C, 0x81, 0x44, 0x27, 0x36, 0x81, 0x4C, 0x27, 0x28, 0x81, 0x52, 0x27, 0x27, 0x80, 0x45, 0x27, 0x16, 0x4A, 0x27, 0x0D, 0x4A, 0x27, 0x14, 0x4A, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x96, 0x3F, 0x20, 0x54, 0xDC, 0x3D, 0xDE, 0x3D, 0x20, 0x4E, 0xDC, 0x3D, 0x20, 0x4A, 0x96, 0x3F, 0xDE, 0x3D, 0x20, 0x44, 0x96, 0x3F, 0x8C, 0xDC, 0x3D, 0xCE, 0x00, 0x00, 0x20, 0x3A, 0xDE, 0x3D, 0x4F, 0x5F, 0x20, 0x34, 0x4F, 0xD6, 0x67, 0xDD, 0xCA, 0xEC, 0x00, 0xDE, 0xCA, 0x27, 0x16, 0x97, 0xCE, 0x2A, 0x02, 0x8D, 0x0C, 0xBD, 0xD3, 0x57, 0xDC, 0xCC, 0x04, 0x04, 0x7D, 0x00, 0xCE, 0x2A, 0x04, 0x40, 0x50, 0x82, 0x00, 0x39, 0xEC, 0x00, 0xED, 0x04, 0x7D, 0x00, 0x82, 0x26, 0xF6, 0xE3, 0x08, 0x2A, 0x02, 0x4F, 0x5F, 0xED, 0x08, 0x39, 0xDD, 0x4E, 0xDF, 0x50, 0xCE, 0x00, 0x4E, 0x8D, 0xC3, 0xDD, 0x4E, 0xCE, 0x00, 0x50, 0x8D, 0xBC, 0xDD, 0x50, 0x96, 0x66, 0x27, 0x0F, 0x36, 0xDE, 0x50, 0xDC, 0x4E, 0xDF, 0x4E, 0x8D, 0xCA, 0xDD, 0x50, 0x32, 0x4A, 0x26, 0xF1, 0x97, 0x82, 0xCE, 0x00, 0x46, 0x8D, 0xC2, 0xCE, 0x00, 0x48, 0x8D, 0xBD, 0xCE, 0x00, 0xFF, 0x9C, 0x4E, 0x24, 0x02, 0xDF, 0x4E, 0xCE, 0x00, 0xBF, 0x9C, 0x50, 0x24, 0x02, 0xDF, 0x50, 0x96, 0x3B, 0x26, 0x08, 0xDC, 0x4E, 0xDD, 0x46, 0xDC, 0x50, 0xDD, 0x48, 0x96, 0x3C, 0x26, 0x0C, 0xBD, 0xD7, 0x07, 0xBD, 0xE0, 0xEF, 0xBD, 0xD5, 0xB7, 0xBD, 0xE1, 0x35, 0x4F, 0x5F, 0xDD, 0x3B, 0x39, 0x8D, 0x1F, 0x36, 0x8D, 0x21, 0xDD, 0x4E, 0x8D, 0x18, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0x8D, 0x12, 0xDD, 0x50, 0x32, 0x81, 0x2B, 0x27, 0x87, 0x81, 0x2D, 0x27, 0x83, 0x97, 0x82, 0x20, 0xA2, 0x7E, 0xCF, 0xC5, 0x8D, 0xFB, 0x81, 0x2B, 0x27, 0x07, 0x81, 0x2D, 0x27, 0x04, 0xBD, 0xD0, 0x25, 0x4F, 0x36, 0xBD, 0xCF, 0xFA, 0x32, 0x4D, 0x27, 0x04, 0x4F, 0x50, 0x82, 0x00, 0x39, 0xBD, 0xD3, 0xA8, 0xDE, 0x4A, 0xDF, 0x34, 0xDE, 0x4C, 0xDF, 0x36, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x38, 0xCE, 0x00, 0x38, 0xBD, 0xD7, 0x12, 0x86, 0x01, 0x97, 0x55, 0xBD, 0xD7, 0xB4, 0xCE, 0x01, 0x00, 0x9D, 0xF3, 0x27, 0x09, 0x8D, 0x51, 0x8B, 0x08, 0x97, 0xC9, 0xBD, 0xEF, 0x4F, 0xDF, 0x3A, 0x96, 0x58, 0x84, 0x18, 0x81, 0x10, 0x26, 0x05, 0xDC, 0x3A, 0x05, 0xDD, 0x3A, 0x8D, 0x42, 0xDD, 0x3C, 0x8D, 0x3E, 0xDD, 0x3E, 0xBD, 0xE0, 0xEF, 0x8D, 0x4E, 0xDE, 0x4E, 0x3C, 0xDE, 0x50, 0x3C, 0x96, 0x55, 0x26, 0x03, 0xBD, 0xD5, 0xB7, 0x7F, 0x00, 0x55, 0x38, 0xDF, 0x4C, 0x38, 0xDF, 0x4A, 0xDC, 0x3C, 0x5C, 0xC4, 0x07, 0x26, 0x03, 0x4C, 0x84, 0x07, 0xDD, 0x3C, 0x93, 0x3E, 0x26, 0xD8, 0x8D, 0x26, 0xBD, 0xD5, 0xB7, 0x7E, 0xE1, 0x32, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x0C, 0x96, 0xC9, 0x39, 0x5F, 0x9D, 0xF3, 0x27, 0x0B, 0x8D, 0xF0, 0x8B, 0x06, 0x97, 0xC9, 0xBD, 0xEF, 0x10, 0xC4, 0x3F, 0x17, 0xC4, 0x07, 0x44, 0x44, 0x44, 0x39, 0xDC, 0x3C, 0xCE, 0xD3, 0x84, 0x84, 0x01, 0x27, 0x03, 0x50, 0xCB, 0x08, 0x58, 0x58, 0x3A, 0x3C, 0xBD, 0xD3, 0x50, 0xDD, 0x4E, 0x38, 0x08, 0x08, 0x8D, 0x7D, 0xDD, 0x50, 0x96, 0x3C, 0x84, 0x03, 0x27, 0x0C, 0x80, 0x03, 0x27, 0x08, 0x96, 0x50, 0xDE, 0x4E, 0xDF, 0x50, 0xDD, 0x4E, 0xDC, 0x50, 0xDE, 0x3A, 0x8C, 0x01, 0x00, 0x27, 0x1B, 0x8C, 0x02, 0x00, 0x26, 0x05, 0x05, 0xDD, 0x50, 0x20, 0x11, 0x8D, 0x5B, 0x4D, 0x27, 0x06, 0xBD, 0xE1, 0x35, 0x7E, 0xEC, 0x2E, 0xD7, 0x50, 0x96, 0xCC, 0x97, 0x51, 0x96, 0x3C, 0x81, 0x02, 0x25, 0x0E, 0x81, 0x05, 0x22, 0x0A, 0xDC, 0x34, 0x93, 0x4E, 0x24, 0x12, 0x4F, 0x5F, 0x20, 0x0E, 0xDC, 0x34, 0xD3, 0x4E, 0x25, 0x06, 0xDD, 0x4E, 0x93, 0x42, 0x23, 0x04, 0xDC, 0x42, 0xDD, 0x4E, 0x96, 0x3C, 0x81, 0x04, 0x25, 0x0A, 0xDC, 0x36, 0x93, 0x50, 0x24, 0x12, 0x4F, 0x5F, 0x20, 0x0E, 0xDC, 0x36, 0xD3, 0x50, 0x25, 0x06, 0xDD, 0x50, 0x93, 0x44, 0x23, 0x04, 0xDC, 0x44, 0xDD, 0x50, 0x39, 0xDC, 0x38, 0xEE, 0x00, 0x27, 0xF9, 0x09, 0xDD, 0xD7, 0xDF, 0xD9, 0x7F, 0x00, 0xCA, 0x96, 0xDA, 0x3D, 0xDD, 0xCC, 0xDC, 0xD8, 0x3D, 0xDB, 0xCC, 0x89, 0x00, 0xDD, 0xCB, 0xD6, 0xD7, 0x96, 0xDA, 0x3D, 0xD3, 0xCB, 0xDD, 0xCB, 0x24, 0x03, 0x7C, 0x00, 0xCA, 0x96, 0xD7, 0xD6, 0xD9, 0x3D, 0xD3, 0xCA, 0xDD, 0xCA, 0x39, 0x00, 0x00, 0x00, 0x01, 0xFE, 0xC5, 0x19, 0x19, 0xFB, 0x16, 0x31, 0xF2, 0xF4, 0xFB, 0x4A, 0x51, 0xEC, 0x84, 0x61, 0xF9, 0xE1, 0xC7, 0x78, 0xAE, 0xD4, 0xDC, 0x8E, 0x3B, 0xC5, 0xE5, 0xA2, 0x69, 0xB5, 0x06, 0xB5, 0x06, 0x81, 0x40, 0x26, 0x02, 0x9D, 0xEB, 0xCE, 0x00, 0xFF, 0xDF, 0x42, 0xCE, 0x00, 0xBF, 0xDF, 0x44, 0xCE, 0x00, 0x42, 0xBD, 0xD7, 0x12, 0xBD, 0xD7, 0x56, 0x7E, 0xEA, 0x29, 0x8D, 0xE2, 0xD7, 0x55, 0xBD, 0xD7, 0xB4, 0xDE, 0x56, 0x3C, 0x9D, 0xF3, 0x27, 0x03, 0xBD, 0xD7, 0xB4, 0xD7, 0x38, 0x38, 0xDF, 0x56, 0xBD, 0xE0, 0xEF, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xA6, 0x00, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x49, 0x86, 0xFF, 0xBD, 0xD4, 0xE5, 0x96, 0x7E, 0x27, 0x07, 0xD6, 0x5F, 0x5C, 0xBD, 0xD9, 0x16, 0x8C, 0xDC, 0x99, 0xC3, 0x00, 0x10, 0xDD, 0x3C, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x57, 0xD4, 0xE1, 0x26, 0x03, 0x7E, 0xD4, 0xC7, 0xD6, 0x4B, 0x27, 0x26, 0x5C, 0xD7, 0x4B, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x38, 0xD4, 0xE1, 0x27, 0x14, 0x7A, 0x00, 0x4B, 0x27, 0x14, 0x48, 0x24, 0x02, 0x49, 0x09, 0xD6, 0x59, 0x2A, 0xE8, 0x49, 0x20, 0xE5, 0x7E, 0xD4, 0xD4, 0xBD, 0xD6, 0x33, 0x97, 0xE1, 0xCC, 0x00, 0x00, 0xDD, 0x3A, 0xD6, 0x4B, 0xD7, 0x4F, 0xDF, 0x52, 0xD6, 0x59, 0xC4, 0x7F, 0x3A, 0xDF, 0x36, 0x43, 0x50, 0xD3, 0x52, 0xDD, 0x34, 0xDE, 0x52, 0x96, 0xE1, 0x16, 0x43, 0xA4, 0x00, 0xD4, 0x57, 0x1B, 0xA7, 0x00, 0x96, 0x4D, 0x27, 0x20, 0xDE, 0x34, 0xA6, 0x00, 0x16, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x0D, 0xD8, 0x57, 0xD4, 0xE1, 0x27, 0x09, 0x96, 0x3A, 0x26, 0x05, 0x43, 0x8D, 0x5B, 0x97, 0x3A, 0x96, 0x4D, 0x91, 0x45, 0x27, 0x1A, 0xDE, 0x36, 0xA6, 0x00, 0x16, 0x98, 0x38, 0x94, 0xE1, 0x27, 0x0D, 0xD8, 0x57, 0xD4, 0xE1, 0x27, 0x09, 0x96, 0x3B, 0x26, 0x05, 0x4C, 0x8D, 0x3B, 0x97, 0x3B, 0xD6, 0x4F, 0xD1, 0x43, 0x27, 0x23, 0x5C, 0xD7, 0x4F, 0xDE, 0x52, 0x96, 0xE1, 0x44, 0x24, 0x0A, 0x46, 0x08, 0xDF, 0x52, 0x7C, 0x00, 0x35, 0x7C, 0x00, 0x37, 0xD6, 0x59, 0x2A, 0x01, 0x46, 0x97, 0xE1, 0xE6, 0x00, 0xD8, 0x38, 0xD4, 0xE1, 0x26, 0x90, 0x32, 0x97, 0x4B, 0x32, 0x81, 0xFF, 0x27, 0x05, 0x97, 0x4D, 0x7E, 0xD4, 0x01, 0x7E, 0xE1, 0x32, 0x30, 0x9C, 0x3C, 0x24, 0x06, 0xBD, 0xE1, 0x35, 0x7E, 0xE2, 0x36, 0xD6, 0x4D, 0x1B, 0x38, 0x36, 0x10, 0xD6, 0x4F, 0x37, 0x6E, 0x00, 0x9D, 0xEB, 0xBD, 0xE7, 0xE0, 0x8D, 0x03, 0x7E, 0xE7, 0x21, 0xBD, 0xC5, 0x51, 0xBD, 0xE8, 0x05, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE9, 0x0F, 0xCE, 0x01, 0xB1, 0x4F, 0xBD, 0xED, 0x08, 0x7E, 0xE6, 0xEA, 0xDE, 0x46, 0xDF, 0x4A, 0xDE, 0x48, 0xDF, 0x4C, 0x81, 0xA8, 0x27, 0x05, 0xCE, 0x00, 0x4A, 0x8D, 0x08, 0xC6, 0xA8, 0xBD, 0xEA, 0x31, 0xCE, 0x00, 0x4E, 0xBD, 0xEA, 0x2C, 0xBD, 0xD6, 0xEE, 0x7E, 0xEA, 0x29, 0x81, 0x88, 0x27, 0xB8, 0x81, 0x28, 0x27, 0x09, 0x81, 0xA8, 0x27, 0x05, 0xC6, 0x40, 0xBD, 0xEA, 0x31, 0x8D, 0xCB, 0xDC, 0x4E, 0xDD, 0x46, 0xDC, 0x50, 0xDD, 0x48, 0xBD, 0xD7, 0x07, 0xBD, 0xEA, 0x2F, 0x2B, 0x08, 0xBD, 0xD7, 0xEF, 0xBD, 0xD7, 0xD3, 0x20, 0x0F, 0xC6, 0xCC, 0x10, 0x97, 0x55, 0x27, 0x02, 0xC6, 0xCB, 0xBD, 0xEA, 0x31, 0xBD, 0xD7, 0xCA, 0x5F, 0x9D, 0xF3, 0x27, 0x18, 0xBD, 0xEA, 0x2F, 0xCE, 0x00, 0x4A, 0x8D, 0x33, 0x08, 0x08, 0x8D, 0x2F, 0xC6, 0x42, 0xBD, 0xEA, 0x31, 0x27, 0x05, 0xC6, 0x46, 0xBD, 0xEA, 0x31, 0xBD, 0xE0, 0xEF, 0x5D, 0x27, 0x19, 0x96, 0x4D, 0xC1, 0x46, 0x27, 0x51, 0xBD, 0xD6, 0x9F, 0xBD, 0xD6, 0x6F, 0x96, 0x51, 0xBD, 0xD6, 0x9F, 0x96, 0x4F, 0x97, 0x4B, 0xBD, 0xD6, 0x6F, 0x8C, 0x8D, 0x0E, 0x20, 0x44, 0xE6, 0x01, 0xA6, 0x05, 0x11, 0x24, 0x04, 0xA7, 0x01, 0xE7, 0x05, 0x39, 0xD6, 0x59, 0xC4, 0x7F, 0x4F, 0xDD, 0xBE, 0xCE, 0x00, 0x4A, 0x8D, 0xE8, 0x27, 0x18, 0x10, 0xE6, 0x07, 0x24, 0x0A, 0x40, 0x36, 0xA6, 0x03, 0xE7, 0x03, 0xA7, 0x07, 0x16, 0x32, 0xE0, 0x03, 0x26, 0x1A, 0x96, 0x4D, 0x7E, 0xD6, 0x9F, 0xCE, 0x00, 0x4C, 0x8D, 0xC9, 0x7E, 0xD6, 0x6F, 0x36, 0xBD, 0xD6, 0x9F, 0x32, 0x4C, 0x91, 0x51, 0x23, 0xF6, 0x7E, 0xE1, 0x32, 0x22, 0x07, 0x73, 0x00, 0xBE, 0x70, 0x00, 0xBF, 0x50, 0x11, 0x25, 0x4D, 0x97, 0xBB, 0xD7, 0xBD, 0x16, 0x8D, 0x1B, 0x8C, 0x8D, 0x29, 0xBD, 0xD7, 0x70, 0x7A, 0x00, 0x54, 0x27, 0x20, 0xDC, 0xC0, 0xD3, 0xBC, 0xDD, 0xC0, 0x93, 0xBA, 0x25, 0xEC, 0xDD, 0xC0, 0x8D, 0x22, 0x20, 0xE6, 0x4C, 0x97, 0x54, 0x4F, 0x54, 0xDD, 0xC0, 0x97, 0xBA, 0x97, 0xBC, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0x39, 0x96, 0xE1, 0x44, 0x24, 0x02, 0x46, 0x08, 0xD6, 0x59, 0x2A, 0x01, 0x46, 0x97, 0xE1, 0x39, 0xDF, 0x89, 0xDC, 0x89, 0xD3, 0xBE, 0xDD, 0x89, 0xDE, 0x89, 0x39, 0xD7, 0xBB, 0x97, 0xBD, 0x17, 0x8D, 0xCE, 0x8C, 0x8D, 0xEB, 0x96, 0xE1, 0xBD, 0xD7, 0x70, 0x7A, 0x00, 0x54, 0x27, 0xD1, 0xDC, 0xC0, 0xD3, 0xBC, 0xDD, 0xC0, 0x93, 0xBA, 0x25, 0xEA, 0xDD, 0xC0, 0x8D, 0xC4, 0x20, 0xE4, 0xD6, 0x51, 0xD0, 0x4D, 0x5C, 0xD7, 0x54, 0xBD, 0xD7, 0x7A, 0x97, 0xE1, 0xBD, 0xD7, 0x70, 0xD6, 0x59, 0xC4, 0x7F, 0x3A, 0x96, 0xE1, 0x7A, 0x00, 0x54, 0x26, 0xF1, 0x39, 0x59, 0x7D, 0x00, 0x59, 0x2B, 0x01, 0x54, 0xC4, 0x07, 0x3A, 0x39, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xD6, 0x59, 0xC4, 0x7F, 0x3D, 0x9B, 0x60, 0xDD, 0x52, 0xD6, 0x4B, 0x96, 0x4F, 0x7D, 0x00, 0x59, 0x2B, 0x01, 0x04, 0x04, 0x04, 0xC4, 0x1F, 0x10, 0x97, 0x54, 0xDE, 0x52, 0x3A, 0x3C, 0xCE, 0xD6, 0x96, 0xD6, 0x4B, 0x8D, 0xC7, 0xA6, 0x00, 0x43, 0xD6, 0x54, 0x27, 0x12, 0x38, 0xBD, 0xD7, 0x70, 0x96, 0x57, 0x8C, 0xA7, 0x00, 0x08, 0x7A, 0x00, 0x54, 0x26, 0xF8, 0x86, 0xFF, 0x3C, 0xCE, 0xD6, 0x97, 0xD6, 0x4F, 0x0D, 0x8D, 0xA6, 0xA4, 0x00, 0x38, 0x7E, 0xD7, 0x70, 0xCE, 0x00, 0x4A, 0x3C, 0xBD, 0xEF, 0x43, 0x38, 0xC1, 0xC0, 0x25, 0x02, 0xC6, 0xBF, 0x4F, 0xED, 0x02, 0xDC, 0xA5, 0x4D, 0x27, 0x03, 0xCC, 0x00, 0xFF, 0xED, 0x00, 0x39, 0xCE, 0x00, 0x4E, 0x8D, 0x06, 0xCE, 0x00, 0x4A, 0x8C, 0x8D, 0xD9, 0x96, 0x58, 0x81, 0x36, 0x27, 0x05, 0xEC, 0x02, 0x04, 0xED, 0x02, 0xEC, 0x00, 0x04, 0xED, 0x00, 0x39, 0x8D, 0xEB, 0xBD, 0xEA, 0x29, 0x8D, 0x50, 0x36, 0xBD, 0xE0, 0xA2, 0x96, 0x59, 0x33, 0x2B, 0x07, 0xD4, 0xE1, 0x27, 0x1C, 0x5F, 0x20, 0x12, 0xD4, 0xE1, 0x27, 0x0E, 0xC5, 0xF0, 0x27, 0x04, 0x54, 0x54, 0x54, 0x54, 0xC5, 0x0C, 0x27, 0x02, 0x54, 0x54, 0x5C, 0x96, 0x5B, 0x27, 0x02, 0xCB, 0x04, 0x7E, 0xEC, 0xE2, 0xBD, 0xEA, 0x2C, 0x20, 0xB5, 0x86, 0x4F, 0x97, 0x55, 0x8D, 0xF5, 0x8D, 0x51, 0xBD, 0xEA, 0x29, 0xBD, 0xE0, 0xEF, 0x8D, 0x0F, 0x8D, 0x03, 0x7E, 0xE1, 0x32, 0x16, 0x43, 0xA4, 0x00, 0xD4, 0x57, 0x1B, 0xA7, 0x00, 0x39, 0xD6, 0x59, 0xC4, 0x7F, 0x96, 0x4D, 0x3D, 0x9B, 0x60, 0xDD, 0x52, 0xD6, 0x4B, 0x96, 0x59, 0x2B, 0x19, 0x17, 0xCE, 0xD7, 0x98, 0xC4, 0x07, 0x3A, 0x16, 0xA6, 0x00, 0x54, 0x20, 0x16, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0xC0, 0x30, 0x0C, 0x03, 0x17, 0xCE, 0xD7, 0xA0, 0xC4, 0x03, 0x3A, 0x16, 0xA6, 0x00, 0x54, 0x54, 0xDE, 0x52, 0x3A, 0x39, 0x9D, 0xF3, 0x27, 0x12, 0x81, 0x29, 0x27, 0x0E, 0xBD, 0xEA, 0x2F, 0x81, 0x2C, 0x27, 0x07, 0xBD, 0xEF, 0x0D, 0x8D, 0x2A, 0x20, 0x09, 0xD6, 0x64, 0x7D, 0x00, 0x55, 0x26, 0x02, 0xD6, 0x65, 0xD7, 0x56, 0x86, 0x55, 0x3D, 0xD7, 0x57, 0x39, 0x81, 0x2C, 0x27, 0x08, 0x8D, 0x0E, 0xD7, 0x64, 0x9D, 0xF3, 0x27, 0x07, 0xBD, 0xEF, 0x47, 0x8D, 0x06, 0xD7, 0x65, 0x39, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x44, 0xC1, 0x05, 0x25, 0x02, 0xC0, 0x04, 0x96, 0x59, 0x2B, 0x05, 0xC4, 0x01, 0x27, 0x06, 0xC0, 0x5A, 0x2A, 0x02, 0xC6, 0x03, 0x39, 0x27, 0x03, 0x8D, 0xE0, 0x8C, 0xD6, 0x65, 0x86, 0x55, 0x3D, 0xBD, 0xE0, 0xEF, 0x17, 0xDE, 0x60, 0xED, 0x00, 0xED, 0x02, 0xC6, 0x04, 0x3A, 0x16, 0x9C, 0x62, 0x25, 0xF4, 0x7E, 0xE1, 0x32, 0xD3, 0x6E, 0xDD, 0x93, 0xC6, 0x02, 0xD7, 0x70, 0x5A, 0x8D, 0x41, 0x5C, 0xD7, 0x7D, 0x20, 0x26, 0x7E, 0xEC, 0x2E, 0x3B, 0x10, 0x26, 0xA0, 0x36, 0x10, 0x81, 0x2C, 0x27, 0x0D, 0xBD, 0xEF, 0x0D, 0xC1, 0x02, 0x22, 0xEC, 0x8D, 0x26, 0x9D, 0xF3, 0x27, 0x18, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5A, 0xD1, 0x5D, 0x24, 0xDB, 0x5C, 0xD7, 0x5F, 0xD1, 0x5E, 0x26, 0x01, 0x5F, 0xBD, 0xD9, 0x16, 0xDD, 0x60, 0x96, 0x58, 0x48, 0x84, 0x0E, 0xD3, 0x60, 0xDD, 0x62, 0x39, 0x58, 0xCE, 0xD8, 0x3D, 0x3A, 0xEC, 0x00, 0xDD, 0x58, 0xCC, 0x03, 0x00, 0xDD, 0x64, 0x39, 0xD6, 0x5E, 0x81, 0x2C, 0x27, 0x14, 0xBD, 0xEF, 0x0D, 0x96, 0x5A, 0x5D, 0x27, 0x06, 0xD6, 0x5F, 0x96, 0x58, 0x9A, 0x5B, 0x97, 0x5C, 0x9D, 0xF3, 0x27, 0x20, 0x37, 0xBD, 0xEF, 0x47, 0x17, 0x27, 0x02, 0x86, 0x40, 0x33, 0x5D, 0x27, 0x03, 0x97, 0x5B, 0x8C, 0x97, 0x5A, 0x20, 0xDD, 0xD6, 0x7F, 0x26, 0xCD, 0x96, 0x5E, 0x27, 0xC9, 0x96, 0x5A, 0x97, 0x5C, 0xD1, 0x5E, 0x27, 0x14, 0x96, 0x5E, 0x27, 0x10, 0x37, 0x16, 0x8D, 0x4B, 0xDD, 0x36, 0x8D, 0x9B, 0xCC, 0x40, 0x00, 0xDD, 0x34, 0x8D, 0x59, 0x33, 0xBD, 0xCE, 0x7B, 0xD1, 0x5E, 0x27, 0x48, 0xD7, 0x5E, 0x27, 0x10, 0x8D, 0x32, 0xDD, 0x34, 0xCC, 0x40, 0x00, 0xDD, 0x36, 0xBD, 0xD8, 0x6A, 0x93, 0x60, 0x20, 0x3F, 0x7E, 0xFB, 0xD4, 0x0E, 0xBD, 0x01, 0x91, 0xD6, 0xE8, 0x26, 0x02, 0x8D, 0xB4, 0x7E, 0xFA, 0xA7, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x0D, 0xD1, 0x5D, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xD1, 0x5E, 0x26, 0x01, 0x5F, 0x86, 0x0C, 0x3D, 0x17, 0x27, 0x05, 0xD6, 0x7E, 0x27, 0x04, 0x5F, 0x8B, 0x40, 0x39, 0x8B, 0xF8, 0x39, 0x8D, 0xDE, 0xDD, 0x34, 0x8D, 0xD5, 0xDD, 0x36, 0x86, 0x0C, 0xD3, 0x36, 0xDD, 0xBB, 0xBD, 0xE0, 0xEF, 0x0F, 0xDE, 0x36, 0x9F, 0x91, 0x9E, 0x34, 0x34, 0x32, 0x33, 0xED, 0x00, 0x32, 0x33, 0xED, 0x02, 0x32, 0x33, 0xED, 0x04, 0x32, 0x33, 0xED, 0x06, 0xC6, 0x08, 0x3A, 0x9C, 0xBB, 0x25, 0xE9, 0x9E, 0x91, 0xBD, 0xE1, 0x35, 0x39, 0x27, 0x03, 0x7E, 0xE6, 0x8A, 0x7F, 0x00, 0x7B, 0xBD, 0xE6, 0x51, 0x4D, 0x27, 0x78, 0x9D, 0xEB, 0x81, 0xC9, 0x26, 0xF4, 0x7A, 0x00, 0x7B, 0x2A, 0xEF, 0x9D, 0xEB, 0x7E, 0xE6, 0x8D, 0x26, 0x03, 0x7E, 0xE6, 0x5F, 0x81, 0x84, 0x26, 0x03, 0x7C, 0x00, 0x7B, 0x7E, 0xE6, 0x64, 0xCE, 0x00, 0xCA, 0x4F, 0x5F, 0xED, 0x00, 0xED, 0x02, 0x9D, 0xEB, 0x25, 0x14, 0x81, 0x48, 0x27, 0x21, 0x81, 0x4F, 0x27, 0x17, 0xCC, 0xA0, 0x00, 0x97, 0xC9, 0xD7, 0xDD, 0xD7, 0xCE, 0x7E, 0xEF, 0xD7, 0x81, 0x38, 0x25, 0x03, 0x7E, 0xEA, 0x3C, 0xC6, 0x07, 0x8D, 0x1B, 0x9D, 0xEB, 0x25, 0xF1, 0x20, 0xE3, 0x9D, 0xEB, 0x25, 0x0B, 0xBD, 0xEB, 0x76, 0x25, 0xDA, 0x81, 0x46, 0x22, 0xD6, 0x80, 0x07, 0xC6, 0x0F, 0x8D, 0x02, 0x20, 0xEB, 0x68, 0x03, 0x69, 0x02, 0x24, 0x03, 0x7E, 0xF0, 0x58, 0x54, 0x26, 0xF4, 0x80, 0x30, 0xAB, 0x03, 0xA7, 0x03, 0x39, 0xBD, 0x01, 0x9D, 0x25, 0x05, 0x81, 0x26, 0x27, 0x9D, 0x0C, 0x7E, 0xF3, 0x5C, 0xC6, 0x04, 0x3A, 0xDF, 0x89, 0xCE, 0x01, 0xB3, 0xDF, 0xDE, 0x5F, 0x6F, 0x00, 0xDE, 0x89, 0xA6, 0x00, 0x08, 0x4D, 0x26, 0x01, 0x39, 0xDF, 0x89, 0x81, 0x22, 0x26, 0x02, 0xC8, 0x01, 0x81, 0x3A, 0x26, 0x12, 0xC5, 0x01, 0x26, 0x0E, 0xC4, 0xFD, 0xA6, 0x00, 0x81, 0xC9, 0x27, 0xE3, 0x81, 0xDD, 0x27, 0xDF, 0x86, 0x3A, 0x4D, 0x2A, 0x32, 0x5D, 0x26, 0x2F, 0x81, 0x85, 0x26, 0x02, 0xCA, 0x02, 0x81, 0x83, 0x27, 0x04, 0x81, 0xDD, 0x26, 0x02, 0xCA, 0x04, 0xF7, 0x01, 0x84, 0xBD, 0x01, 0xA6, 0xF6, 0x01, 0x84, 0x81, 0xF7, 0x22, 0x0E, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x2B, 0x09, 0x08, 0x3C, 0x8D, 0x0B, 0x38, 0x20, 0xF5, 0x86, 0x21, 0x84, 0x7F, 0x8D, 0x02, 0x20, 0x9E, 0xDE, 0xDE, 0x8C, 0x02, 0xAD, 0x24, 0x05, 0xA7, 0x00, 0x08, 0xDF, 0xDE, 0x39, 0x38, 0x8D, 0x05, 0x27, 0x2F, 0x7E, 0xEA, 0x3C, 0xBD, 0xE6, 0xB2, 0x7E, 0x00, 0xF3, 0x9D, 0xEB, 0x81, 0x45, 0x26, 0x08, 0x9D, 0xEB, 0x24, 0x04, 0x8D, 0xEE, 0x27, 0x18, 0xBD, 0xE3, 0xB3, 0x7E, 0xE5, 0x3D, 0x09, 0xDF, 0xA5, 0xBD, 0xF4, 0x12, 0xD6, 0x7A, 0xFA, 0x01, 0x83, 0xC1, 0x02, 0x26, 0xCE, 0xBD, 0xE7, 0x66, 0xBD, 0xE3, 0xB9, 0x24, 0x03, 0x7E, 0xE6, 0x42, 0xBD, 0xD9, 0xF1, 0xDC, 0xDE, 0x83, 0x01, 0xB4, 0xD7, 0x34, 0x86, 0x01, 0x97, 0x35, 0xBD, 0xCC, 0x03, 0xCE, 0x01, 0xB3, 0xD6, 0x35, 0x26, 0x25, 0x5F, 0xBD, 0xDB, 0xAE, 0xBD, 0xD0, 0x2E, 0x25, 0x0B, 0x80, 0x30, 0x36, 0x86, 0x0A, 0x3D, 0x32, 0x1B, 0x16, 0x20, 0xED, 0xC0, 0x01, 0xC9, 0x01, 0x81, 0x41, 0x26, 0x05, 0xBD, 0xE7, 0x66, 0x20, 0xBF, 0x81, 0x4C, 0x26, 0x0C, 0x8D, 0x32, 0x7F, 0x00, 0x35, 0xBD, 0xE7, 0x66, 0x20, 0xC7, 0x31, 0x31, 0x81, 0x0D, 0x26, 0x0D, 0x8D, 0x22, 0xBD, 0xE7, 0x66, 0xCE, 0x01, 0xB3, 0xDF, 0xF4, 0x7E, 0xE2, 0x96, 0x81, 0x03, 0x26, 0x06, 0xBD, 0xE7, 0x66, 0x7E, 0xE2, 0x71, 0x8D, 0x02, 0x20, 0xB0, 0x81, 0x20, 0x27, 0x07, 0x81, 0x4E, 0x26, 0x0F, 0x8C, 0xC6, 0xFF, 0xA6, 0x00, 0x27, 0x07, 0xBD, 0xF9, 0xC6, 0x08, 0x5A, 0x26, 0xF5, 0x39, 0x81, 0x49, 0x27, 0x14, 0x81, 0x58, 0x27, 0x0E, 0x81, 0x48, 0x26, 0x4B, 0x6F, 0x00, 0x3C, 0x32, 0x33, 0x83, 0x01, 0xB4, 0xD7, 0x34, 0x8D, 0xDA, 0x8D, 0x6E, 0x81, 0x0D, 0x27, 0xAA, 0x81, 0x03, 0x27, 0xA6, 0x81, 0x0A, 0x27, 0xD9, 0x81, 0x08, 0x26, 0x0B, 0x8C, 0x01, 0xB3, 0x27, 0xE9, 0x8D, 0x7E, 0x8D, 0x32, 0x20, 0xE3, 0xD6, 0x34, 0xC1, 0xF8, 0x27, 0xDD, 0x5C, 0xD7, 0x34, 0xDF, 0xDE, 0x21, 0x08, 0xE6, 0x00, 0x26, 0xFB, 0x21, 0x09, 0xE6, 0x00, 0xE7, 0x01, 0x9C, 0xDE, 0x26, 0xF7, 0xA7, 0x00, 0x08, 0x8D, 0x62, 0x20, 0xC1, 0x81, 0x44, 0x26, 0x18, 0xA6, 0x00, 0x27, 0xA0, 0x8D, 0x04, 0x5A, 0x26, 0xF7, 0x39, 0x7A, 0x00, 0x34, 0x3C, 0x21, 0x08, 0xA6, 0x01, 0xA7, 0x00, 0x26, 0xF9, 0x38, 0x39, 0x81, 0x43, 0x26, 0x2A, 0xA6, 0x00, 0x27, 0x0C, 0x8D, 0x0B, 0x24, 0xFC, 0xA7, 0x00, 0x08, 0x8D, 0x33, 0x5A, 0x26, 0xF0, 0x39, 0xBD, 0xF8, 0x65, 0x81, 0x03, 0x27, 0x11, 0x81, 0x0A, 0x27, 0x0D, 0x81, 0x08, 0x27, 0x09, 0x81, 0x0D, 0x27, 0x05, 0x81, 0x20, 0x25, 0xE9, 0x0D, 0x39, 0x81, 0x08, 0x27, 0x04, 0x81, 0x42, 0x26, 0x11, 0x8D, 0x04, 0x5A, 0x26, 0xFB, 0x39, 0x8C, 0x01, 0xB3, 0x27, 0xD3, 0x09, 0x86, 0x08, 0x7E, 0xF9, 0xC6, 0x81, 0x4B, 0x27, 0x05, 0x80, 0x53, 0x27, 0x01, 0x39, 0x97, 0x36, 0x8D, 0xC1, 0x97, 0x37, 0xA6, 0x00, 0x27, 0x14, 0x7D, 0x00, 0x36, 0x26, 0x04, 0x8D, 0xE3, 0x08, 0x8C, 0x8D, 0x8D, 0xA6, 0x00, 0x91, 0x37, 0x26, 0xEB, 0x5A, 0x26, 0xE8, 0x39, 0x86, 0x4F, 0x97, 0x7C, 0x39, 0x81, 0x87, 0x27, 0x09, 0x81, 0xA6, 0x27, 0x06, 0x9D, 0xF3, 0x7E, 0xE7, 0x1F, 0xC6, 0x5F, 0xD7, 0x7D, 0x7E, 0x00, 0xEB, 0x38, 0x36, 0x0F, 0x17, 0xD6, 0x7D, 0x26, 0x02, 0x6E, 0x00, 0x36, 0xCE, 0x21, 0x50, 0x3C, 0x30, 0xCC, 0x00, 0x03, 0xBD, 0xC9, 0x96, 0x38, 0x31, 0x7E, 0xF9, 0xEE, 0x08, 0xDF, 0xF4, 0x7D, 0x00, 0x7C, 0x27, 0x3C, 0x86, 0x5B, 0xBD, 0xF9, 0xC6, 0x96, 0xE2, 0xBD, 0xF4, 0x19, 0x86, 0x5D, 0x7E, 0xF9, 0xC6, 0xBD, 0xEF, 0x4C, 0x08, 0xBD, 0xE5, 0x66, 0x86, 0xA6, 0x4A, 0x26, 0xFD, 0x09, 0x26, 0xF5, 0x39, 0xCE, 0x00, 0xFD, 0x9D, 0xEB, 0x81, 0xB2, 0x26, 0x05, 0x9D, 0xEB, 0xCE, 0x00, 0xFB, 0x3C, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x4C, 0x3C, 0x32, 0x33, 0x38, 0xED, 0x00, 0x39, 0xBD, 0xEB, 0xC7, 0x27, 0x03, 0xBD, 0xED, 0x85, 0xDC, 0x9D, 0x93, 0x9B, 0x20, 0x19, 0x93, 0x99, 0x36, 0x9D, 0xF3, 0x81, 0x89, 0x26, 0x09, 0x31, 0xDC, 0xA1, 0xC3, 0x00, 0x01, 0x36, 0x9D, 0xEB, 0x32, 0x8C, 0xDC, 0x78, 0x8C, 0xDC, 0xFD, 0xDD, 0xCA, 0xC6, 0x90, 0x7F, 0x00, 0x84, 0x0D, 0x7E, 0xF2, 0xC7, 0xD6, 0x7A, 0x7E, 0xF2, 0xBC, 0xBD, 0x01, 0xA0, 0x81, 0xC9, 0x24, 0x07, 0x81, 0xC4, 0x27, 0x5B, 0x7E, 0xE5, 0x49, 0x81, 0xF5, 0x27, 0x99, 0xCE, 0xC2, 0x93, 0x81, 0xE8, 0x7E, 0xE5, 0x54, 0xBD, 0xE9, 0x0E, 0xBD, 0xEF, 0x4F, 0xCE, 0x02, 0xAE, 0xCC, 0x30, 0x00, 0xED, 0x00, 0x96, 0xCC, 0x8D, 0x07, 0x96, 0xCD, 0x8D, 0x03, 0x7E, 0xEC, 0xF6, 0x16, 0x54, 0x54, 0x54, 0x54, 0x8D, 0x03, 0x16, 0xC4, 0x0F, 0x26, 0x05, 0x8C, 0x02, 0xAE, 0x27, 0x0D, 0xC1, 0x09, 0x23, 0x02, 0xCB, 0x07, 0xCB, 0x30, 0xE7, 0x00, 0x08, 0x6F, 0x00, 0x39, 0xDF, 0xD7, 0xE6, 0x00, 0xBD, 0xED, 0x5F, 0x3C, 0xDE, 0xD7, 0xBD, 0xEE, 0x38, 0xDE, 0xD7, 0x32, 0x33, 0xED, 0x02, 0x39, 0x9D, 0xEB, 0xBD, 0xEA, 0x2C, 0xBD, 0xEB, 0x1B, 0xDF, 0x34, 0xBD, 0xE9, 0x0F, 0xBD, 0xEF, 0x47, 0x5A, 0xD7, 0x38, 0xDE, 0x34, 0xE1, 0x00, 0x24, 0x6D, 0x81, 0x29, 0x27, 0x06, 0xBD, 0xEF, 0x47, 0x5D, 0x26, 0x02, 0xC6, 0xFF, 0xD7, 0x39, 0xBD, 0xEA, 0x29, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xDE, 0x34, 0xEC, 0x02, 0x93, 0x9B, 0x22, 0x02, 0x8D, 0xB3, 0xEE, 0x02, 0xD6, 0x38, 0x3A, 0xDF, 0x36, 0x8D, 0x4A, 0x3C, 0xDE, 0x34, 0xA6, 0x00, 0x90, 0x38, 0x4C, 0x11, 0x24, 0x01, 0x16, 0xD1, 0x39, 0x23, 0x02, 0xD6, 0x39, 0xDE, 0x36, 0xDF, 0x9F, 0x38, 0x7E, 0xEE, 0x3A, 0x96, 0xE8, 0x36, 0xBD, 0xEB, 0xC7, 0x27, 0x06, 0x2A, 0x12, 0xC1, 0xFE, 0x26, 0x0E, 0xD7, 0xE8, 0xBD, 0xFA, 0x7B, 0xD6, 0xE6, 0x32, 0x97, 0xE8, 0x4F, 0x7E, 0xEC, 0xE3, 0xC6, 0x26, 0x7E, 0xE2, 0x38, 0xBD, 0xEF, 0x0D, 0xC4, 0xFE, 0xC1, 0x36, 0x23, 0xF4, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0x7E, 0xEE, 0x53, 0xBD, 0xE9, 0x1A, 0xC6, 0x01, 0x37, 0x96, 0x84, 0x26, 0x11, 0xBD, 0xEF, 0x10, 0x30, 0xE7, 0x00, 0x27, 0xE2, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0x3C, 0x8D, 0xD7, 0x37, 0x3C, 0xC6, 0x01, 0x9D, 0xF3, 0x81, 0x2C, 0x26, 0x03, 0xBD, 0xEF, 0x47, 0x4F, 0xDD, 0xD0, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0xCB, 0x33, 0xD7, 0xCD, 0x38, 0xBD, 0xEE, 0x58, 0xDF, 0xC9, 0x17, 0x33, 0x9F, 0x91, 0x10, 0x25, 0x2B, 0x4C, 0x90, 0xCD, 0x25, 0x26, 0x4C, 0x7D, 0x00, 0xCD, 0x27, 0x22, 0x0F, 0x5A, 0x3A, 0x5C, 0xDD, 0xCE, 0x35, 0xDE, 0xCB, 0xD6, 0xCD, 0x32, 0xA1, 0x00, 0x26, 0x1B, 0x08, 0x5A, 0x26, 0xF7, 0xD6, 0xCF, 0x96, 0xD1, 0x27, 0x0F, 0x4A, 0x97, 0xD1, 0x26, 0x09, 0x8C, 0xD6, 0xD0, 0x9E, 0x91, 0x0E, 0x7E, 0xEC, 0xE2, 0x5F, 0xD7, 0xD0, 0xDC, 0xCE, 0x4A, 0x27, 0xF0, 0xDE, 0xC9, 0x20, 0xCE, 0xBD, 0xEF, 0x0D, 0x37, 0xBD, 0xEA, 0x2F, 0xBD, 0xE9, 0x1A, 0xBD, 0xEA, 0x29, 0x96, 0x84, 0x2B, 0x05, 0xBD, 0xEF, 0x10, 0x20, 0x03, 0xBD, 0xEE, 0xA6, 0x17, 0x33, 0x36, 0xBD, 0xEC, 0xFC, 0x32, 0x27, 0x06, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0x7E, 0xEE, 0x9D, 0x0B, 0x76, 0xB3, 0x83, 0xBD, 0xD3, 0x79, 0x1E, 0xF4, 0xA6, 0xF5, 0x7B, 0x83, 0xFC, 0xB0, 0x10, 0x7C, 0x0C, 0x1F, 0x67, 0xCA, 0x7C, 0xDE, 0x53, 0xCB, 0xC1, 0x7D, 0x14, 0x64, 0x70, 0x4C, 0x7D, 0xB7, 0xEA, 0x51, 0x7A, 0x7D, 0x63, 0x30, 0x88, 0x7E, 0x7E, 0x92, 0x44, 0x99, 0x3A, 0x7E, 0x4C, 0xCC, 0x91, 0xC7, 0x7F, 0xAA, 0xAA, 0xAA, 0x13, 0x81, 0x00, 0x00, 0x00, 0x00, 0x96, 0xCE, 0x36, 0x2A, 0x02, 0x8D, 0x30, 0x96, 0xC9, 0x36, 0x81, 0x81, 0x25, 0x06, 0xCE, 0xF0, 0x8B, 0xBD, 0xF1, 0xC6, 0xCE, 0xDE, 0x60, 0xBD, 0xF5, 0xF8, 0x32, 0x81, 0x81, 0x25, 0x06, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x72, 0x32, 0x4D, 0x2B, 0x0E, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x03, 0x7E, 0xF3, 0x35, 0x73, 0x00, 0xCE, 0x8D, 0xF8, 0x7E, 0xF5, 0x93, 0x8D, 0x05, 0x2B, 0x26, 0x7E, 0xF2, 0x51, 0xBD, 0xE9, 0x0C, 0x3C, 0x3C, 0x34, 0x30, 0xBD, 0xF2, 0x72, 0xBD, 0xD2, 0x99, 0xBD, 0xEA, 0x29, 0xBD, 0xF2, 0x6C, 0x30, 0x8D, 0xE7, 0x31, 0x38, 0x38, 0xCE, 0x00, 0xBA, 0x7E, 0xF2, 0xD9, 0x8D, 0xDF, 0x2B, 0xDA, 0x39, 0xBD, 0xEB, 0x1B, 0x3C, 0x96, 0x84, 0x36, 0xCC, 0x00, 0x34, 0x8D, 0x15, 0xBD, 0xEA, 0x2F, 0xBD, 0xEB, 0x1B, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x32, 0x33, 0x3C, 0x8D, 0x05, 0xCE, 0x00, 0x34, 0x32, 0x33, 0xDD, 0xBF, 0xC6, 0x05, 0x7E, 0xF7, 0xB2, 0xCE, 0x00, 0x74, 0x81, 0xE9, 0x27, 0x0A, 0x81, 0xDC, 0x27, 0x03, 0x7E, 0xE6, 0x92, 0xCE, 0x00, 0x76, 0x3C, 0x9D, 0xEB, 0xC6, 0xFF, 0xD7, 0xA5, 0x81, 0x91, 0x27, 0x14, 0x5A, 0x81, 0x93, 0x27, 0x0F, 0xC6, 0x81, 0xBD, 0xEA, 0x31, 0x8D, 0x51, 0xBD, 0xE3, 0xB9, 0x24, 0x07, 0x7E, 0xE6, 0x42, 0xD7, 0xA6, 0x9D, 0xEB, 0xDC, 0xA5, 0xC3, 0x00, 0x01, 0x38, 0xED, 0x00, 0x39, 0x0E, 0xD7, 0x7A, 0xF7, 0x01, 0x83, 0xDE, 0xE2, 0xDF, 0x78, 0xDE, 0x76, 0x8D, 0x40, 0x26, 0x4A, 0xCE, 0xE1, 0x8A, 0xC1, 0x26, 0x25, 0x03, 0xCE, 0xDF, 0x5C, 0x39, 0x44, 0x4E, 0x4E, 0x45, 0x57, 0x50, 0x46, 0x4E, 0x46, 0x53, 0x49, 0x45, 0x46, 0x44, 0x41, 0x4F, 0x4E, 0x4F, 0x44, 0x53, 0x26, 0x03, 0x7E, 0xE5, 0x60, 0x8D, 0x06, 0xBD, 0xE3, 0xB9, 0x7E, 0xE5, 0x62, 0x25, 0x04, 0x81, 0x28, 0x27, 0x03, 0x7E, 0xE6, 0xB2, 0xBD, 0xEA, 0x24, 0xBD, 0xEF, 0x4F, 0xDF, 0xA5, 0x39, 0x27, 0xFD, 0x3C, 0xDE, 0xE2, 0x08, 0x38, 0x27, 0xF6, 0xDF, 0xA5, 0x39, 0x30, 0xCC, 0xE5, 0x19, 0xED, 0x00, 0xDE, 0xA5, 0x08, 0x27, 0x07, 0x09, 0x09, 0xDF, 0xA5, 0x7E, 0xE6, 0x26, 0x7E, 0xE6, 0x51, 0x0E, 0x96, 0x73, 0x26, 0xD9, 0x7E, 0xF8, 0x79, 0x81, 0x03, 0x26, 0xD2, 0x7D, 0x00, 0x73, 0x26, 0x03, 0xB7, 0x01, 0x7F, 0x7F, 0x00, 0x73, 0x38, 0xDE, 0x74, 0x8D, 0xC3, 0x26, 0xD3, 0x7E, 0xE5, 0x7E, 0x81, 0x03, 0x26, 0x02, 0x97, 0x73, 0x7E, 0xEE, 0x91, 0xF2, 0xBA, 0xF3, 0x35, 0xF2, 0xD5, 0x01, 0x15, 0xF6, 0x2A, 0xF5, 0x4D, 0xF0, 0xB9, 0xF5, 0xC9, 0xF6, 0x8C, 0xF6, 0x86, 0xF6, 0xD2, 0xEF, 0x5F, 0xEE, 0x82, 0xEC, 0xED, 0xEF, 0x1C, 0xEE, 0xA2, 0xEE, 0x8E, 0xEE, 0xAD, 0xEE, 0xC8, 0xEE, 0xCF, 0xFB, 0x9C, 0xFC, 0x11, 0xFB, 0xED, 0xEC, 0xDB, 0x79, 0xEF, 0x80, 0x79, 0xEF, 0x75, 0x7B, 0xF0, 0xF1, 0x7B, 0xF1, 0xC8, 0x7F, 0xF5, 0x56, 0x50, 0xEA, 0x8E, 0x46, 0xEA, 0x8D, 0x01, 0xC6, 0xB4, 0xBD, 0xEA, 0x31, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0xBD, 0xEF, 0x4C, 0xFF, 0x01, 0x16, 0x39, 0xC1, 0x18, 0x25, 0x03, 0x7E, 0xEA, 0x3C, 0x58, 0x7E, 0x00, 0xEB, 0xFE, 0x01, 0x80, 0x20, 0x21, 0xCE, 0x40, 0x00, 0x20, 0x36, 0xCE, 0x40, 0x00, 0x20, 0x18, 0x81, 0x40, 0x27, 0x03, 0x7E, 0xEF, 0x66, 0x9D, 0xEB, 0xBD, 0xEF, 0x43, 0x96, 0xA5, 0x84, 0x3F, 0x8B, 0x40, 0x97, 0xA5, 0xDE, 0xA5, 0x21, 0x16, 0x4F, 0x07, 0x0F, 0xB7, 0xBF, 0x00, 0xE7, 0x00, 0x9A, 0x7E, 0xB7, 0xBF, 0x00, 0x06, 0x39, 0x8D, 0x08, 0xC6, 0xFF, 0x39, 0x8D, 0x03, 0x7E, 0xEF, 0x47, 0x4F, 0x07, 0x0F, 0xB7, 0xBF, 0x00, 0xE6, 0x00, 0x9A, 0x7E, 0xB7, 0xBF, 0x00, 0x06, 0x4F, 0xD7, 0xE1, 0x39, 0xBD, 0x01, 0x94, 0xDE, 0xF4, 0x9D, 0xEB, 0x81, 0x26, 0x26, 0x03, 0x7E, 0xD9, 0x8A, 0x81, 0xBC, 0x27, 0x0C, 0x81, 0xEA, 0x25, 0x03, 0x7E, 0xE4, 0x6B, 0xDF, 0xF4, 0x7E, 0xE9, 0xEB, 0x9D, 0xEB, 0x81, 0x40, 0x26, 0xF5, 0x9D, 0xEB, 0xBD, 0xEA, 0x24, 0xBD, 0xEF, 0x4F, 0x96, 0xCC, 0x84, 0x3F, 0x8B, 0x40, 0x97, 0xCC, 0xDE, 0xCC, 0x8D, 0xB6, 0x7E, 0xEC, 0xE3, 0x38, 0x97, 0xE1, 0x96, 0x7E, 0x27, 0x0D, 0x4F, 0x07, 0x0F, 0xB7, 0xBF, 0x00, 0xBF, 0xBE, 0xFE, 0x8E, 0xBE, 0xFD, 0x06, 0x96, 0xE1, 0x6E, 0x00, 0xD6, 0x5E, 0x27, 0x05, 0x36, 0xBD, 0xD8, 0xB3, 0x32, 0x8D, 0xDD, 0xFE, 0x01, 0x80, 0x7E, 0xFA, 0x1E, 0x8D, 0x1B, 0xCC, 0x0F, 0x01, 0xBA, 0x01, 0x82, 0xB7, 0x01, 0x82, 0xF7, 0x01, 0x2B, 0x32, 0x33, 0x38, 0x39, 0x8D, 0xC3, 0xCE, 0x40, 0x00, 0xBD, 0xFB, 0xD9, 0x8D, 0x01, 0x39, 0x38, 0x4F, 0x07, 0x9A, 0x7E, 0x85, 0x02, 0x27, 0x08, 0x0F, 0xBE, 0xBE, 0xFE, 0xB7, 0xBF, 0x00, 0x06, 0x6E, 0x00, 0xE4, 0xC4, 0xE6, 0x1A, 0xE6, 0x04, 0xE6, 0x85, 0xE6, 0x72, 0xE6, 0x51, 0xDC, 0x0D, 0xDF, 0x2A, 0xC5, 0x41, 0xC4, 0x82, 0xE8, 0xBB, 0xEB, 0x12, 0xE8, 0x0E, 0xE6, 0xD3, 0xE5, 0xFA, 0xDF, 0x96, 0xE6, 0x31, 0xE5, 0x7E, 0xE0, 0x71, 0xE5, 0xA6, 0xE4, 0x0D, 0xC3, 0xC7, 0xE3, 0xCD, 0xFD, 0x5C, 0xFC, 0x3B, 0xE4, 0x0B, 0xE7, 0x1C, 0xC6, 0x5B, 0xFB, 0x55, 0xFB, 0xBF, 0xFF, 0xA5, 0xFC, 0x04, 0xFE, 0x2F, 0x4E, 0x46, 0x53, 0x4E, 0x52, 0x47, 0x4F, 0x44, 0x46, 0x43, 0x4F, 0x56, 0x4F, 0x4D, 0x55, 0x4C, 0x42, 0x53, 0x44, 0x44, 0x2F, 0x30, 0x49, 0x44, 0x54, 0x4D, 0x4F, 0x53, 0x4C, 0x53, 0x53, 0x54, 0x43, 0x4E, 0x49, 0x4F, 0x46, 0x4D, 0x20, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x00, 0x20, 0x49, 0x4E, 0x20, 0x00, 0x0D, 0x4F, 0x4B, 0x0D, 0x00, 0x0D, 0x42, 0x52, 0x45, 0x41, 0x4B, 0x00, 0x81, 0x3A, 0x24, 0x0B, 0x81, 0x20, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0x80, 0x30, 0x80, 0xD0, 0x39, 0x30, 0xC6, 0x04, 0x3A, 0xC6, 0x12, 0xDF, 0x89, 0xA6, 0x00, 0x80, 0x80, 0x26, 0x14, 0xEE, 0x01, 0xDF, 0x8B, 0xDE, 0xB5, 0x27, 0x08, 0x9C, 0x8B, 0x27, 0x08, 0x8D, 0x3B, 0x20, 0xE6, 0xDE, 0x8B, 0xDF, 0xB5, 0xDE, 0x89, 0x4D, 0x39, 0x8D, 0x1E, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x9E, 0xBB, 0xDE, 0xBD, 0x08, 0x09, 0xA6, 0x00, 0x36, 0x9C, 0xC1, 0x26, 0xF8, 0x31, 0x9F, 0xBF, 0x9E, 0x91, 0x32, 0x06, 0x39, 0x4F, 0x58, 0xD3, 0x99, 0x9F, 0x91, 0xC3, 0x00, 0x3A, 0x25, 0x11, 0x93, 0x91, 0x24, 0x0D, 0xD3, 0x91, 0x39, 0x4F, 0xDF, 0x89, 0xD3, 0x89, 0xDD, 0x8B, 0xDE, 0x8B, 0x39, 0xC6, 0x0C, 0xBD, 0x01, 0x97, 0xBD, 0x01, 0x9A, 0xBD, 0xFC, 0x86, 0xB6, 0x01, 0x6E, 0x27, 0x03, 0xBD, 0xCB, 0x6A, 0xBD, 0xE3, 0xEE, 0xBD, 0xDF, 0x67, 0x7F, 0x00, 0xE8, 0xBD, 0xE7, 0x6A, 0xBD, 0xE7, 0xBC, 0x3A, 0xA6, 0x00, 0xBD, 0xE7, 0xBE, 0xA6, 0x01, 0xBD, 0xE7, 0xBE, 0xCE, 0xE1, 0xAF, 0xBD, 0xE7, 0xA8, 0xDE, 0xE2, 0x08, 0x27, 0x03, 0xBD, 0xDA, 0x8D, 0xBD, 0xE7, 0x6A, 0xCE, 0xE1, 0xBC, 0xBD, 0xE7, 0xA8, 0xCE, 0xFF, 0xFF, 0xDF, 0xE2, 0xBD, 0xFA, 0xA4, 0x25, 0xF6, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0x27, 0xEF, 0x25, 0x06, 0xBD, 0xE3, 0x11, 0x7E, 0xDA, 0x79, 0xBD, 0xE6, 0xB2, 0xDE, 0xA5, 0xFF, 0x01, 0xB0, 0xBD, 0xE3, 0x11, 0xD7, 0x82, 0xBD, 0xE3, 0xB9, 0x25, 0x1C, 0xDC, 0xC1, 0xA3, 0x00, 0xD3, 0x95, 0xDD, 0x95, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0xAE, 0x00, 0x34, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0x95, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xB6, 0x01, 0xB2, 0x27, 0x25, 0xDC, 0x95, 0xDD, 0xBD, 0xDB, 0x82, 0x89, 0x00, 0xDD, 0xBB, 0xBD, 0xE1, 0xFE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x8E, 0x01, 0xAD, 0x32, 0xA7, 0x00, 0x08, 0x9C, 0xBF, 0x26, 0xF8, 0x9E, 0x91, 0x32, 0x06, 0xDE, 0xBB, 0xDF, 0x95, 0xBD, 0xE3, 0xD9, 0xDE, 0xC1, 0x7E, 0xCB, 0x9F, 0xDE, 0x93, 0xEC, 0x00, 0x26, 0x01, 0x39, 0x3C, 0xC6, 0x04, 0x3A, 0x08, 0xA6, 0x00, 0x26, 0xFB, 0x08, 0x3C, 0x30, 0xEC, 0x00, 0xEE, 0x02, 0xED, 0x00, 0x38, 0x31, 0x31, 0x20, 0xE4, 0x7F, 0x00, 0x85, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0x01, 0xB1, 0xDF, 0xDE, 0x9F, 0x91, 0x07, 0x97, 0x87, 0x01, 0x0F, 0x9E, 0xF4, 0x33, 0xC1, 0x20, 0x27, 0x38, 0xD7, 0x81, 0xC1, 0x22, 0x27, 0x5B, 0x96, 0x85, 0x26, 0x2E, 0x7E, 0xE4, 0x89, 0x01, 0xC6, 0x86, 0x20, 0x26, 0xC1, 0x30, 0x25, 0x04, 0xC1, 0x3C, 0x25, 0x1E, 0x5D, 0x2B, 0x19, 0xCE, 0xC1, 0x50, 0x9E, 0xF4, 0x5F, 0x08, 0x32, 0x81, 0x20, 0x27, 0xFB, 0xA0, 0x00, 0x27, 0xF6, 0x81, 0x80, 0x26, 0x35, 0xCA, 0x80, 0xDE, 0xDE, 0x8C, 0xC6, 0x21, 0x9F, 0xF4, 0x9E, 0x91, 0x96, 0x87, 0x06, 0x7E, 0xE4, 0xA3, 0xE7, 0x00, 0x27, 0x38, 0xC0, 0x3A, 0x27, 0x04, 0xC1, 0x4B, 0x26, 0x02, 0xD7, 0x85, 0xC0, 0x49, 0x26, 0xA4, 0xD7, 0x81, 0x0F, 0x9E, 0xF4, 0x33, 0x5D, 0x27, 0xDB, 0xD1, 0x81, 0x27, 0xD7, 0x08, 0xE7, 0x00, 0x20, 0xF3, 0x9E, 0xF4, 0x5C, 0xA6, 0x00, 0x08, 0x2A, 0xFB, 0xA6, 0x00, 0x26, 0xB2, 0x9F, 0xF4, 0x9E, 0x91, 0xBD, 0x01, 0xA3, 0x9E, 0xF4, 0x33, 0x20, 0xB5, 0xE7, 0x01, 0xE7, 0x02, 0xDC, 0xDE, 0x83, 0x01, 0xAD, 0xCE, 0x01, 0xB1, 0xDF, 0xF4, 0x39, 0xDE, 0x93, 0xEC, 0x00, 0x27, 0x0A, 0xDC, 0xA5, 0xA3, 0x02, 0x23, 0x05, 0xEE, 0x00, 0x20, 0xF2, 0x0D, 0xDF, 0xC1, 0x39, 0x26, 0xFB, 0x37, 0xBD, 0xC3, 0xDB, 0x33, 0x6F, 0x00, 0x08, 0xDF, 0x95, 0xDE, 0x93, 0x09, 0xDF, 0xF4, 0xBD, 0x01, 0x8E, 0xDE, 0xA1, 0xDF, 0x9D, 0xBD, 0xE5, 0x60, 0xDE, 0x95, 0xDF, 0x97, 0xDF, 0x99, 0xCE, 0x01, 0x41, 0xFF, 0x01, 0x3D, 0x38, 0x9E, 0x9B, 0x4F, 0x36, 0x97, 0xA7, 0x97, 0xA8, 0x97, 0x86, 0xB7, 0x01, 0x6E, 0x6E, 0x00, 0xC6, 0xFE, 0xD7, 0xE8, 0x7E, 0x00, 0xF3, 0x8D, 0xF7, 0x07, 0x36, 0x8D, 0xF7, 0xBD, 0xE6, 0xB2, 0x8D, 0xA3, 0x32, 0x06, 0x3C, 0x27, 0x16, 0xBD, 0x00, 0xF3, 0x27, 0x16, 0x81, 0xA8, 0x26, 0x0A, 0xBD, 0x00, 0xEB, 0x27, 0x08, 0xBD, 0xE6, 0xB2, 0x27, 0x08, 0x7E, 0xEA, 0x3C, 0xCE, 0xFF, 0xFF, 0xDF, 0xA5, 0x38, 0x31, 0x31, 0xBD, 0xE7, 0x6A, 0xBD, 0xE5, 0x66, 0xEC, 0x00, 0x26, 0x06, 0x7F, 0x00, 0xE8, 0x7E, 0xE2, 0x71, 0xEC, 0x02, 0x93, 0xA5, 0x22, 0xF4, 0xEC, 0x02, 0x3C, 0xBD, 0xF4, 0x19, 0xBD, 0xE7, 0xB9, 0x38, 0xBD, 0xD9, 0xF1, 0x3C, 0x3C, 0xCE, 0x01, 0xB2, 0x08, 0xA6, 0x00, 0x27, 0xD0, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x16, 0x9D, 0xEB, 0xC1, 0xF5, 0x24, 0x0E, 0x37, 0xBD, 0xEA, 0x2C, 0x33, 0xC1, 0xEF, 0x22, 0x05, 0x37, 0xBD, 0xEA, 0x26, 0x33, 0xC0, 0xEA, 0x58, 0xCE, 0xC3, 0x65, 0x7E, 0xEA, 0x85, 0xC1, 0x3F, 0x26, 0x03, 0x7E, 0xE3, 0x3A, 0xC1, 0x27, 0x27, 0x03, 0x7E, 0xE3, 0x3E, 0xCC, 0x3A, 0xDD, 0x08, 0xA7, 0x00, 0x7F, 0x00, 0x81, 0x7E, 0xE3, 0x8D, 0xC1, 0xC9, 0x26, 0x05, 0x08, 0x86, 0x3A, 0xA7, 0x00, 0x08, 0xDF, 0xDE, 0x7E, 0xE3, 0x6E, 0x80, 0x7F, 0xDF, 0x89, 0xCE, 0xC1, 0x51, 0x4A, 0x26, 0x01, 0x39, 0x6D, 0x00, 0x08, 0x2A, 0xFB, 0x20, 0xF5, 0x86, 0x80, 0x97, 0x86, 0xBD, 0xE6, 0xD3, 0xBD, 0xE1, 0xD8, 0x38, 0x26, 0x04, 0xDE, 0x89, 0x3A, 0x35, 0xC6, 0x09, 0xBD, 0xE2, 0x1A, 0xBD, 0xE6, 0x56, 0x3C, 0xDE, 0xE2, 0x3C, 0xC6, 0xA2, 0xBD, 0xEA, 0x31, 0xBD, 0xE9, 0x0E, 0xBD, 0xE9, 0x0C, 0xD6, 0xCE, 0xCA, 0x7F, 0xD4, 0xCA, 0xD7, 0xCA, 0xCE, 0xE4, 0xFA, 0x7E, 0xE9, 0xA4, 0xCE, 0xF0, 0x8B, 0xBD, 0xF2, 0x51, 0xBD, 0x00, 0xF3, 0x81, 0xA5, 0x26, 0x06, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xF2, 0xAD, 0xBD, 0xE9, 0xA2, 0xDE, 0xB5, 0x3C, 0x86, 0x80, 0x36, 0x8D, 0x4B, 0xDE, 0xF4, 0xDF, 0xA9, 0xA6, 0x00, 0x27, 0x07, 0x81, 0x3A, 0x27, 0x16, 0x7E, 0xEA, 0x3C, 0x08, 0xA6, 0x00, 0x08, 0xAA, 0x00, 0xB7, 0x01, 0x83, 0x27, 0x54, 0x08, 0xEC, 0x00, 0xDD, 0xE2, 0xBD, 0xDC, 0x3C, 0xBD, 0x00, 0xEB, 0x8D, 0x02, 0x20, 0xD5, 0x27, 0x71, 0x7E, 0xDC, 0xB8, 0x4D, 0x2B, 0x03, 0x7E, 0xE6, 0xD3, 0xCE, 0xE1, 0x48, 0x81, 0xA0, 0x22, 0xD1, 0x48, 0x16, 0x3A, 0xEE, 0x00, 0xBD, 0x00, 0xEB, 0x6E, 0x00, 0xDE, 0x93, 0x09, 0xDF, 0xAD, 0x39, 0xBD, 0xDF, 0xD6, 0x27, 0x0B, 0xBD, 0xDF, 0xDE, 0x01, 0x81, 0x13, 0x27, 0x04, 0xB7, 0x01, 0x7F, 0x39, 0xBD, 0xF8, 0x83, 0x27, 0xFB, 0x20, 0xED, 0x0D, 0x26, 0x36, 0xDE, 0xF4, 0xDF, 0xA9, 0x76, 0x01, 0x83, 0x38, 0xDE, 0xE2, 0x08, 0x27, 0x07, 0x09, 0xDF, 0xA3, 0xDE, 0xA9, 0xDF, 0xA7, 0x7F, 0x00, 0xE8, 0xCE, 0xE1, 0xC0, 0x7D, 0x01, 0x83, 0x2A, 0x03, 0x7E, 0xE2, 0x66, 0x7E, 0xE2, 0x71, 0x26, 0x0F, 0xC6, 0x20, 0xDE, 0xA7, 0x26, 0x03, 0x7E, 0xE2, 0x38, 0xDF, 0xF4, 0xDE, 0xA3, 0xDF, 0xE2, 0x39, 0x20, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x9D, 0xF3, 0x27, 0x31, 0xBD, 0xEF, 0x4C, 0x3C, 0xDE, 0xA1, 0xBD, 0x00, 0xF3, 0x27, 0x0C, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0x09, 0xBC, 0x01, 0x50, 0x22, 0x1D, 0x3C, 0x01, 0x30, 0xEC, 0x00, 0xA3, 0x02, 0x25, 0x14, 0xED, 0x02, 0x83, 0x00, 0x3A, 0x25, 0x0D, 0x93, 0x95, 0x25, 0x09, 0x38, 0xDF, 0xA1, 0x38, 0xDF, 0x9B, 0x7E, 0xE3, 0xDE, 0x7E, 0xE2, 0x36, 0xBD, 0xC3, 0x81, 0x9D, 0xF3, 0xBD, 0xC7, 0x9D, 0x20, 0x0E, 0xC6, 0x03, 0xBD, 0xE2, 0x1A, 0xDE, 0xF4, 0x3C, 0xDE, 0xE2, 0x3C, 0x86, 0x82, 0x36, 0xBD, 0x00, 0xF3, 0x8D, 0x03, 0x7E, 0xE5, 0x19, 0xBD, 0xDF, 0xA3, 0x8D, 0x3A, 0x08, 0xDC, 0xA5, 0x93, 0xE2, 0x22, 0x02, 0xDE, 0x93, 0xBD, 0xE3, 0xBB, 0x25, 0x15, 0x09, 0xDF, 0xF4, 0x39, 0x26, 0xFD, 0x86, 0xFF, 0x97, 0xB5, 0xBD, 0xE1, 0xD8, 0x35, 0x81, 0x02, 0x27, 0x0B, 0xC6, 0x04, 0x8C, 0xC6, 0x0E, 0x7E, 0xE2, 0x38, 0x7E, 0xEA, 0x3C, 0x32, 0x38, 0xDF, 0xE2, 0x38, 0xDF, 0xF4, 0x8D, 0x03, 0xDF, 0xF4, 0x39, 0xC6, 0x3A, 0x86, 0x5F, 0xD7, 0x80, 0x5F, 0xDE, 0xF4, 0x17, 0xD6, 0x80, 0x97, 0x80, 0xA6, 0x00, 0x27, 0xED, 0x11, 0x27, 0xEA, 0x08, 0x81, 0x22, 0x7E, 0xD9, 0x7B, 0x01, 0xBD, 0xE9, 0x0C, 0x9D, 0xF3, 0x81, 0x81, 0x27, 0x05, 0xC6, 0xA3, 0xBD, 0xEA, 0x31, 0x96, 0xC9, 0x7E, 0xD9, 0x5D, 0x8D, 0xD2, 0xDF, 0xF4, 0x39, 0xBD, 0x00, 0xF3, 0x25, 0x8B, 0x7E, 0xE5, 0x44, 0xBD, 0xEF, 0x0D, 0x36, 0x81, 0x82, 0x27, 0x04, 0x81, 0x81, 0x26, 0xA9, 0x5A, 0x26, 0x04, 0x32, 0x7E, 0xE5, 0x46, 0x9D, 0xEB, 0x37, 0xBD, 0xDF, 0xA3, 0x33, 0x81, 0x2C, 0x27, 0xEE, 0x31, 0x39, 0xCE, 0x00, 0x00, 0xDF, 0xA5, 0x24, 0xF8, 0x80, 0x30, 0x97, 0x80, 0xDC, 0xA5, 0x81, 0x18, 0x22, 0xD9, 0x05, 0x05, 0xD3, 0xA5, 0x05, 0xDB, 0x80, 0x89, 0x00, 0xDD, 0xA5, 0xBD, 0x00, 0xEB, 0x20, 0xE4, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xC6, 0xAF, 0xBD, 0xEA, 0x31, 0x96, 0x84, 0x36, 0xBD, 0xE9, 0x1A, 0x32, 0x46, 0xBD, 0xE9, 0x10, 0x27, 0x2F, 0xDE, 0xCC, 0xDC, 0x9B, 0xA3, 0x02, 0x24, 0x13, 0xDC, 0x95, 0x93, 0xCC, 0x22, 0x0D, 0xE6, 0x00, 0xBD, 0xEC, 0xFC, 0xDE, 0xC7, 0xBD, 0xEE, 0x38, 0xCE, 0x00, 0xD0, 0xDF, 0xC7, 0xBD, 0xEE, 0x70, 0xDE, 0xC7, 0xA6, 0x00, 0x36, 0xEC, 0x02, 0xDE, 0xB5, 0xED, 0x02, 0x32, 0xA7, 0x00, 0x39, 0x7E, 0xF2, 0x70, 0xBD, 0xE4, 0x04, 0x8D, 0x04, 0x7F, 0x00, 0xE8, 0x39, 0x27, 0x3F, 0x7E, 0xC5, 0xB8, 0x01, 0xBD, 0xFC, 0x29, 0xBD, 0x00, 0xF3, 0x27, 0x33, 0xBD, 0xEA, 0x2F, 0x27, 0x3B, 0x81, 0xA1, 0x27, 0x50, 0x81, 0x2C, 0x27, 0x34, 0x81, 0x3B, 0x27, 0x5E, 0xBD, 0xE9, 0x1A, 0x96, 0x84, 0x36, 0x26, 0x06, 0xBD, 0xF4, 0x26, 0xBD, 0xED, 0x05, 0x7E, 0xC3, 0xEB, 0x5D, 0x26, 0x09, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0x15, 0x8D, 0x58, 0xBD, 0x00, 0xF3, 0x26, 0xD2, 0x86, 0x0D, 0x20, 0x54, 0xBD, 0xFA, 0x7B, 0x27, 0xF7, 0x96, 0xE6, 0x26, 0xF3, 0x39, 0xBD, 0xFA, 0x7B, 0x27, 0x0A, 0xD6, 0xE6, 0xD1, 0xE5, 0x25, 0x06, 0x8D, 0xE5, 0x20, 0x1F, 0xD6, 0xE6, 0xD0, 0xE4, 0x24, 0xFC, 0x50, 0x20, 0x11, 0xBD, 0xEF, 0x0A, 0x81, 0x29, 0x27, 0x03, 0x7E, 0xEA, 0x3C, 0xBD, 0xFA, 0x7B, 0xD0, 0xE6, 0x23, 0x05, 0xBD, 0xC3, 0xFE, 0x01, 0x01, 0xBD, 0x00, 0xEB, 0x7E, 0xE7, 0x36, 0xBD, 0xED, 0x06, 0xBD, 0xEE, 0x56, 0x5C, 0x5A, 0x27, 0xC1, 0xA6, 0x00, 0x08, 0x8D, 0x07, 0x20, 0xF6, 0x86, 0x20, 0x8C, 0x86, 0x3F, 0x7E, 0xF9, 0xC6, 0x3F, 0x52, 0x45, 0x44, 0x4F, 0x0D, 0x00, 0x96, 0x87, 0x27, 0x06, 0xDE, 0xAB, 0xDF, 0xE2, 0x20, 0xC1, 0x96, 0xE8, 0x26, 0x22, 0xCE, 0xE7, 0xC0, 0x8D, 0xCD, 0xDE, 0xA9, 0xDF, 0xF4, 0x39, 0xDE, 0xE2, 0x08, 0x27, 0x10, 0x39, 0xC6, 0x2C, 0xE7, 0x00, 0xD6, 0xE8, 0x27, 0xF7, 0xD6, 0xE9, 0x27, 0xF3, 0xC6, 0x30, 0x8C, 0xC6, 0x16, 0x8C, 0xC6, 0x32, 0x7E, 0xE2, 0x38, 0x20, 0x12, 0xBD, 0xE7, 0xBC, 0xBD, 0xE7, 0xB9, 0xBD, 0xFA, 0xA4, 0x24, 0xDC, 0x38, 0x7E, 0xDF, 0xED, 0xDE, 0xAD, 0x86, 0x4F, 0x97, 0x87, 0xDF, 0xAF, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xDE, 0xF4, 0xDF, 0xA5, 0xDE, 0xAF, 0xA6, 0x00, 0x26, 0x09, 0x96, 0x87, 0x26, 0x4E, 0xBD, 0xE7, 0xBC, 0x8D, 0xD1, 0xDF, 0xF4, 0xBD, 0x00, 0xEB, 0xD6, 0x84, 0x27, 0x1C, 0xDE, 0xF4, 0x97, 0x80, 0x81, 0x22, 0x27, 0x06, 0x09, 0xCC, 0x3A, 0x2C, 0x01, 0x01, 0xBD, 0xC5, 0x35, 0xBD, 0xED, 0x0C, 0xBD, 0xEF, 0x3E, 0xBD, 0xE6, 0xEA, 0x20, 0x06, 0xBD, 0xF3, 0x59, 0xBD, 0xF2, 0x70, 0xBD, 0x00, 0xF3, 0x27, 0x07, 0x81, 0x2C, 0x27, 0x03, 0x7E, 0xE7, 0xC8, 0xDE, 0xF4, 0xDF, 0xAF, 0xDE, 0xA5, 0xDF, 0xF4, 0xBD, 0x00, 0xF3, 0x27, 0x25, 0xBD, 0xEA, 0x2F, 0x20, 0x9F, 0xDF, 0xF4, 0xBD, 0xE6, 0x56, 0x08, 0x4D, 0x26, 0x0F, 0xC6, 0x06, 0xA6, 0x00, 0xAA, 0x01, 0x27, 0x46, 0xEC, 0x02, 0xDD, 0xAB, 0xC6, 0x04, 0x3A, 0xA6, 0x00, 0x81, 0x85, 0x26, 0xE2, 0x20, 0x97, 0xDE, 0xAF, 0xD6, 0x87, 0x27, 0x03, 0x7E, 0xE5, 0x63, 0xA6, 0x00, 0x27, 0x06, 0xCE, 0xE8, 0xAA, 0x7E, 0xE7, 0xA8, 0x39, 0x3F, 0x45, 0x58, 0x54, 0x52, 0x41, 0x20, 0x49, 0x47, 0x4E, 0x4F, 0x52, 0x45, 0x44, 0x0D, 0x00, 0x26, 0x05, 0xCE, 0x00, 0x00, 0x20, 0x03, 0xBD, 0xEB, 0x1B, 0xDF, 0xB5, 0xBD, 0xE1, 0xD8, 0x27, 0x04, 0xC6, 0x00, 0x20, 0x47, 0x35, 0x08, 0x08, 0x08, 0xBD, 0xF2, 0x51, 0x30, 0xA6, 0x08, 0x97, 0xCE, 0xDE, 0xB5, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x70, 0x30, 0xC6, 0x09, 0x3A, 0xBD, 0xF2, 0xD9, 0x30, 0xE0, 0x08, 0x27, 0x0C, 0xEE, 0x0E, 0xDF, 0xE2, 0x30, 0xEE, 0x10, 0xDF, 0xF4, 0x7E, 0xE5, 0x19, 0xC6, 0x12, 0x3A, 0x35, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x26, 0xF2, 0xBD, 0x00, 0xEB, 0x8D, 0xB6, 0x8D, 0x0C, 0x6D, 0x0D, 0x76, 0x00, 0x84, 0x28, 0x95, 0xC6, 0x18, 0x7E, 0xE2, 0x38, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0x4F, 0xC6, 0x37, 0x36, 0xC6, 0x01, 0xBD, 0xE2, 0x1A, 0xBD, 0xE9, 0xE5, 0x7F, 0x00, 0xB9, 0xBD, 0x00, 0xF3, 0x80, 0xAE, 0x25, 0x14, 0x81, 0x03, 0x24, 0x10, 0x81, 0x01, 0x49, 0x98, 0xB9, 0x91, 0xB9, 0x25, 0x59, 0x97, 0xB9, 0xBD, 0x00, 0xEB, 0x20, 0xE8, 0xD6, 0xB9, 0x26, 0x2B, 0x24, 0x66, 0x8B, 0x07, 0x24, 0x62, 0x99, 0x84, 0x26, 0x03, 0x7E, 0xEE, 0x06, 0x89, 0xFF, 0x16, 0x48, 0x1B, 0x16, 0xCE, 0xE0, 0x30, 0x3A, 0x32, 0xA1, 0x00, 0x24, 0x53, 0x8D, 0xA3, 0x36, 0x8D, 0x23, 0xDE, 0xB7, 0x32, 0x26, 0x18, 0x4D, 0x27, 0x6C, 0x20, 0x4D, 0x78, 0x00, 0x84, 0x59, 0xDE, 0xF4, 0x09, 0xDF, 0xF4, 0xCE, 0xE9, 0x88, 0xD7, 0xB9, 0x20, 0xDC, 0x64, 0xEA, 0xAE, 0xA1, 0x00, 0x24, 0x36, 0x20, 0xDA, 0xEC, 0x01, 0x37, 0x36, 0x8D, 0x07, 0xD6, 0xB9, 0x20, 0x86, 0x7E, 0xEA, 0x3C, 0xD6, 0xCE, 0xA6, 0x00, 0x38, 0x37, 0xD6, 0xCD, 0x37, 0xD6, 0xCC, 0x37, 0xD6, 0xCB, 0x37, 0xD6, 0xCA, 0x37, 0xD6, 0xC9, 0x37, 0x6E, 0x00, 0xCE, 0x00, 0x00, 0x32, 0x4D, 0x27, 0x26, 0x81, 0x64, 0x27, 0x03, 0xBD, 0xE9, 0x0E, 0xDF, 0xB7, 0x33, 0x81, 0x5A, 0x27, 0x1A, 0x81, 0x7D, 0x27, 0x16, 0x54, 0xD7, 0x88, 0x32, 0x33, 0xDD, 0xD6, 0x38, 0xDF, 0xD8, 0x33, 0xD7, 0xDA, 0x33, 0xD7, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xD6, 0xC9, 0x39, 0x7F, 0x00, 0x84, 0x7E, 0xE0, 0xB4, 0x9D, 0xEB, 0x24, 0x03, 0x7E, 0xF3, 0x59, 0xBD, 0xEB, 0x76, 0x24, 0x52, 0x81, 0x2E, 0x27, 0xF4, 0x81, 0xA8, 0x27, 0x42, 0x81, 0xA7, 0x27, 0xE2, 0x81, 0x22, 0x26, 0x08, 0xDE, 0xF4, 0xBD, 0xED, 0x06, 0x7E, 0xEF, 0x3E, 0x81, 0xA4, 0x26, 0x0D, 0x86, 0x5A, 0xBD, 0xE9, 0x21, 0xBD, 0xEB, 0xC7, 0x43, 0x53, 0x7E, 0xEC, 0xE3, 0x80, 0xB1, 0x24, 0x31, 0x8D, 0x06, 0xBD, 0xE9, 0x1A, 0xC6, 0x29, 0x8C, 0xC6, 0x28, 0x8C, 0xC6, 0x2C, 0x3C, 0xDE, 0xF4, 0xE1, 0x00, 0x38, 0x26, 0x03, 0x7E, 0x00, 0xEB, 0xC6, 0x02, 0x7E, 0xE2, 0x38, 0x86, 0x7D, 0xBD, 0xE9, 0x21, 0x7E, 0xF5, 0x93, 0xBD, 0xEB, 0x1B, 0xDF, 0xCC, 0x96, 0x84, 0x26, 0x92, 0x7E, 0xF2, 0x51, 0x16, 0xBD, 0xE0, 0x57, 0xC1, 0x2C, 0x24, 0x25, 0x37, 0xC1, 0x22, 0x25, 0x1D, 0x8D, 0xC8, 0x33, 0xC1, 0x28, 0x24, 0x19, 0x37, 0xBD, 0xE9, 0x1A, 0x8D, 0xC0, 0xBD, 0xE9, 0x0F, 0x32, 0xDE, 0xCC, 0x3C, 0x36, 0xBD, 0xEF, 0x0D, 0x32, 0x37, 0x16, 0x20, 0x03, 0x8D, 0xA3, 0x33, 0xCE, 0xE0, 0x00, 0x3A, 0xEE, 0x00, 0xAD, 0x00, 0x7E, 0xE9, 0x0E, 0x86, 0x4F, 0x97, 0x82, 0xBD, 0xEB, 0xC7, 0xDD, 0x80, 0xBD, 0xF2, 0x8B, 0xBD, 0xEB, 0xC7, 0x7D, 0x00, 0x82, 0x26, 0x06, 0x94, 0x80, 0xD4, 0x81, 0x20, 0x04, 0x9A, 0x80, 0xDA, 0x81, 0x7E, 0xEC, 0xE3, 0xBD, 0xE9, 0x10, 0x26, 0x10, 0x96, 0xDB, 0x8A, 0x7F, 0x94, 0xD7, 0x97, 0xD7, 0xCE, 0x00, 0xD6, 0xBD, 0xF2, 0xD9, 0x20, 0x40, 0x7F, 0x00, 0x84, 0x7A, 0x00, 0xB9, 0xBD, 0xEE, 0x56, 0xD7, 0xD0, 0xDF, 0xD2, 0xDE, 0xD9, 0xBD, 0xEE, 0x58, 0x96, 0xD0, 0x10, 0x27, 0x07, 0x86, 0x01, 0x24, 0x03, 0xD6, 0xD0, 0x40, 0x97, 0xCE, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0xD2, 0x5C, 0x09, 0x5A, 0x26, 0x04, 0xD6, 0xCE, 0x20, 0x0B, 0x32, 0x08, 0xA1, 0x00, 0x27, 0xF3, 0xC6, 0xFF, 0x24, 0x01, 0x50, 0x9E, 0x91, 0x32, 0x06, 0xCB, 0x01, 0x59, 0xD4, 0x88, 0x27, 0x02, 0xC6, 0xFF, 0x7E, 0xF2, 0xBC, 0xBD, 0xEA, 0x2F, 0x16, 0x8D, 0x0A, 0xBD, 0x00, 0xF3, 0x26, 0xF5, 0x39, 0x5F, 0xBD, 0x00, 0xF3, 0xD7, 0x83, 0x97, 0xB1, 0xBD, 0x00, 0xF3, 0x8D, 0x4E, 0x24, 0x03, 0x7E, 0xEA, 0x3C, 0x5F, 0xD7, 0x84, 0xBD, 0x00, 0xEB, 0x25, 0x04, 0x8D, 0x3F, 0x25, 0x0A, 0x16, 0xBD, 0x00, 0xEB, 0x25, 0xFB, 0x8D, 0x35, 0x24, 0xF7, 0x81, 0x24, 0x26, 0x08, 0x73, 0x00, 0x84, 0xCB, 0x80, 0xBD, 0x00, 0xEB, 0xD7, 0xB2, 0xD6, 0x86, 0x5A, 0x26, 0x03, 0x7E, 0xEC, 0x07, 0x9B, 0x86, 0x80, 0x28, 0x26, 0x03, 0x7E, 0xEB, 0xDE, 0x7F, 0x00, 0x86, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x14, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x3F, 0xC6, 0x07, 0x3A, 0x20, 0xF1, 0x81, 0x41, 0x25, 0x04, 0x80, 0x5B, 0x80, 0xA5, 0x39, 0x38, 0x3C, 0x8C, 0xEA, 0x4C, 0x26, 0x04, 0xCE, 0xEB, 0xB7, 0x39, 0xDC, 0x99, 0xDD, 0xBD, 0xC3, 0x00, 0x07, 0xDD, 0xBB, 0xDE, 0x97, 0xDF, 0xC1, 0xBD, 0xE1, 0xFE, 0xDE, 0xBB, 0xDF, 0x99, 0xDE, 0xBF, 0xDF, 0x97, 0xDE, 0xC1, 0xDC, 0xB1, 0xED, 0x00, 0x4F, 0x5F, 0xED, 0x02, 0xED, 0x04, 0xA7, 0x06, 0x08, 0x08, 0xDF, 0xB3, 0x39, 0x90, 0x80, 0x00, 0x00, 0x00, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xE9, 0x0E, 0x96, 0xCE, 0x2B, 0x67, 0xBD, 0xE9, 0x0E, 0x96, 0xC9, 0x81, 0x90, 0x25, 0x08, 0xCE, 0xEB, 0xB5, 0xBD, 0xF2, 0xD9, 0x26, 0x56, 0xBD, 0xF3, 0x0B, 0xDC, 0xCC, 0x39, 0xDE, 0x83, 0x3C, 0x5F, 0x37, 0xDE, 0xB1, 0x3C, 0x8D, 0xD2, 0x38, 0xDF, 0xB1, 0x33, 0x5C, 0xD7, 0x82, 0x32, 0x33, 0xDE, 0xCC, 0x3C, 0x37, 0x36, 0xD6, 0x82, 0xBD, 0x00, 0xF3, 0x81, 0x2C, 0x27, 0xE3, 0xBD, 0xEA, 0x29, 0x38, 0xDF, 0x83, 0xC6, 0xFF, 0x37, 0xDE, 0x97, 0x9C, 0x99, 0x27, 0x25, 0xDC, 0xB1, 0xA3, 0x00, 0x27, 0x07, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0x20, 0xEF, 0xC6, 0x12, 0x32, 0x4D, 0x27, 0xBC, 0x96, 0x83, 0x26, 0x0B, 0xD6, 0x82, 0xE1, 0x04, 0x27, 0x5C, 0xC6, 0x10, 0x8C, 0xC6, 0x08, 0x7E, 0xE2, 0x38, 0x32, 0x4D, 0x27, 0xF7, 0xCC, 0x00, 0x05, 0xDD, 0xDE, 0xDC, 0xB1, 0xED, 0x00, 0xD6, 0x82, 0xE7, 0x04, 0xBD, 0xE2, 0x1A, 0xDF, 0xBB, 0xC6, 0x0B, 0x4F, 0x7D, 0x00, 0x83, 0x27, 0x05, 0x32, 0x33, 0xC3, 0x00, 0x01, 0xED, 0x05, 0x8D, 0x5F, 0xDD, 0xDE, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE6, 0xBD, 0xE2, 0x2D, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xBD, 0xE2, 0x1E, 0x83, 0x00, 0x35, 0xDD, 0x99, 0x4F, 0x09, 0xA7, 0x05, 0x9C, 0x89, 0x26, 0xF9, 0xDE, 0xBB, 0x96, 0x99, 0x93, 0xBB, 0xED, 0x02, 0x96, 0x83, 0x26, 0x31, 0xE6, 0x04, 0xD7, 0x82, 0x4F, 0x5F, 0xDD, 0xDE, 0x32, 0x33, 0xDD, 0xCC, 0x37, 0x36, 0xA3, 0x05, 0x24, 0x3F, 0xDC, 0xDE, 0x32, 0x33, 0x27, 0x04, 0x8D, 0x18, 0xD3, 0xCC, 0x08, 0x08, 0x7A, 0x00, 0x82, 0x26, 0xE3, 0xDD, 0x89, 0x05, 0x05, 0xD3, 0x89, 0xC3, 0x00, 0x05, 0xBD, 0xE2, 0x2D, 0xDF, 0xB3, 0x39, 0x86, 0x10, 0x97, 0xBF, 0xEC, 0x05, 0xDD, 0x91, 0x4F, 0x5F, 0x05, 0x25, 0x12, 0x78, 0x00, 0xDF, 0x79, 0x00, 0xDE, 0x24, 0x04, 0xD3, 0x91, 0x25, 0x06, 0x7A, 0x00, 0xBF, 0x26, 0xEC, 0x39, 0x7E, 0xEC, 0x2B, 0x9F, 0x91, 0xDC, 0x91, 0x7E, 0xDC, 0x8F, 0x4F, 0x7F, 0x00, 0x84, 0xDD, 0xCA, 0xC6, 0x90, 0x7E, 0xF2, 0xC3, 0xBD, 0xE9, 0x0E, 0xCE, 0x02, 0xAE, 0xBD, 0xF4, 0x29, 0x38, 0xCE, 0x02, 0xAD, 0x20, 0x0A, 0xDF, 0xC7, 0x8D, 0x5F, 0xDF, 0xD2, 0xD7, 0xD0, 0x39, 0x09, 0x86, 0x22, 0x97, 0x80, 0x97, 0x81, 0x08, 0xDF, 0xDC, 0xDF, 0xD2, 0xC6, 0xFF, 0x5C, 0xA6, 0x00, 0x27, 0x0E, 0x08, 0x91, 0x80, 0x27, 0x04, 0x91, 0x81, 0x26, 0xF2, 0x81, 0x22, 0x27, 0x01, 0x09, 0xDF, 0xDE, 0xD7, 0xD0, 0x37, 0xDC, 0xDC, 0x83, 0x02, 0xAE, 0x33, 0x22, 0x07, 0x8D, 0xC7, 0xDE, 0xDC, 0xBD, 0xEE, 0x3A, 0xFE, 0x01, 0x3D, 0x8C, 0x01, 0x50, 0x26, 0x05, 0xC6, 0x1E, 0x7E, 0xE2, 0x38, 0x96, 0xD0, 0xA7, 0x00, 0xDC, 0xD2, 0xED, 0x02, 0x86, 0xFF, 0x97, 0x84, 0xFF, 0x01, 0x3F, 0xDF, 0xCC, 0xC6, 0x05, 0x3A, 0xFF, 0x01, 0x3D, 0x39, 0x7F, 0x00, 0x85, 0x37, 0x4F, 0xDD, 0x89, 0xDC, 0x9D, 0x93, 0x89, 0x93, 0x9B, 0x25, 0x0B, 0xD3, 0x9B, 0xDD, 0x9D, 0xDE, 0x9D, 0x08, 0xDF, 0x9F, 0x33, 0x39, 0xC6, 0x1A, 0x73, 0x00, 0x85, 0x27, 0xC4, 0x8D, 0x03, 0x33, 0x20, 0xDD, 0xDE, 0xA1, 0xDF, 0x9D, 0x4F, 0x5F, 0xDD, 0xC5, 0xDE, 0x9B, 0xDF, 0xC1, 0xCE, 0x01, 0x41, 0xBC, 0x01, 0x3D, 0x27, 0x04, 0x8D, 0x32, 0x20, 0xF7, 0xDE, 0x95, 0x9C, 0x97, 0x27, 0x04, 0x8D, 0x22, 0x20, 0xF8, 0xDF, 0xBB, 0xDE, 0xBB, 0x9C, 0x99, 0x27, 0x38, 0xEC, 0x02, 0xD3, 0xBB, 0xDD, 0xBB, 0xA6, 0x01, 0x2A, 0xF0, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0x9C, 0xBB, 0x27, 0xE8, 0x8D, 0x08, 0x20, 0xF8, 0xA6, 0x01, 0x08, 0x08, 0x2A, 0x16, 0xE6, 0x00, 0x27, 0x12, 0xEC, 0x02, 0x93, 0x9D, 0x22, 0x0C, 0xEC, 0x02, 0x93, 0xC1, 0x23, 0x06, 0xDF, 0xC5, 0xEC, 0x02, 0xDD, 0xC1, 0xC6, 0x05, 0x3A, 0x39, 0xDE, 0xC5, 0x27, 0xFB, 0x4F, 0xE6, 0x00, 0x5A, 0xD3, 0xC1, 0xDD, 0xBD, 0xDE, 0x9D, 0xDF, 0xBB, 0xBD, 0xE2, 0x00, 0xDE, 0xC5, 0xDC, 0xBF, 0xED, 0x02, 0xDE, 0xBF, 0x09, 0x7E, 0xED, 0x87, 0xDE, 0xCC, 0x3C, 0xBD, 0xE9, 0xE5, 0xBD, 0xE9, 0x0F, 0x38, 0xDF, 0xDC, 0xE6, 0x00, 0xDE, 0xCC, 0xEB, 0x00, 0x24, 0x05, 0xC6, 0x1C, 0x7E, 0xE2, 0x38, 0xBD, 0xEC, 0xFC, 0xDE, 0xDC, 0xE6, 0x00, 0x8D, 0x10, 0xDE, 0xC7, 0x8D, 0x2C, 0x8D, 0x0C, 0xDE, 0xDC, 0x8D, 0x26, 0xBD, 0xED, 0x3A, 0x7E, 0xE9, 0x2E, 0xEE, 0x02, 0x07, 0x36, 0x9F, 0x91, 0x0F, 0x35, 0xDE, 0x9F, 0x5C, 0x20, 0x04, 0x32, 0xA7, 0x00, 0x08, 0x5A, 0x26, 0xF9, 0xDF, 0x9F, 0x9E, 0x91, 0x32, 0x06, 0x39, 0xBD, 0xE9, 0x0F, 0xDE, 0xCC, 0xE6, 0x00, 0x8D, 0x14, 0x26, 0x0F, 0xEE, 0x07, 0x09, 0x9C, 0x9D, 0x26, 0x06, 0x37, 0xD3, 0x9D, 0xDD, 0x9D, 0x33, 0x08, 0x39, 0xEE, 0x02, 0x39, 0xBC, 0x01, 0x3F, 0x26, 0x0C, 0xFF, 0x01, 0x3D, 0x09, 0x09, 0x09, 0x09, 0x09, 0xFF, 0x01, 0x3F, 0x4F, 0x39, 0x8D, 0x03, 0x7E, 0xEC, 0xE2, 0x8D, 0xCA, 0x7F, 0x00, 0x84, 0x5D, 0x39, 0xBD, 0xEF, 0x10, 0xC6, 0x01, 0xBD, 0xED, 0x5F, 0x96, 0xCD, 0xBD, 0xED, 0x00, 0xA7, 0x00, 0x31, 0x31, 0x7E, 0xED, 0x3A, 0x8D, 0x02, 0x20, 0xDE, 0x8D, 0xDF, 0x27, 0x5D, 0xE6, 0x00, 0x39, 0x8D, 0x43, 0x4F, 0xE1, 0x00, 0x23, 0x03, 0xE6, 0x00, 0x4F, 0x37, 0x36, 0xBD, 0xEC, 0xFE, 0xDE, 0xC7, 0x8D, 0x98, 0x33, 0x3A, 0x33, 0xBD, 0xEE, 0x3A, 0x20, 0xD7, 0x8D, 0x28, 0xA6, 0x00, 0x10, 0x20, 0xE1, 0xC6, 0xFF, 0xD7, 0xCD, 0x8D, 0x44, 0x81, 0x29, 0x27, 0x03, 0xBD, 0xEF, 0x47, 0x8D, 0x14, 0x27, 0x27, 0x5F, 0x4A, 0xA1, 0x00, 0x24, 0xD1, 0x16, 0xE0, 0x00, 0x50, 0xD1, 0xCD, 0x23, 0xC9, 0xD6, 0xCD, 0x20, 0xC5, 0xBD, 0xEA, 0x29, 0x30, 0xEC, 0x05, 0xDD, 0xC7, 0xEC, 0x00, 0xED, 0x05, 0x31, 0x31, 0x31, 0x31, 0x32, 0xDE, 0xC7, 0x16, 0x39, 0x7E, 0xEC, 0x2E, 0xBD, 0x00, 0xEB, 0xBD, 0xE9, 0x0C, 0xBD, 0xEB, 0xC0, 0x96, 0xCC, 0x26, 0xF0, 0xD6, 0xCD, 0x7E, 0x00, 0xF3, 0xBD, 0xEE, 0x87, 0x26, 0x03, 0x7E, 0xEF, 0xF4, 0xBD, 0xE2, 0x2C, 0xA6, 0x00, 0x36, 0x6F, 0x00, 0xDE, 0xF4, 0xDF, 0xDE, 0xDE, 0x89, 0xDF, 0xF4, 0x8D, 0xE3, 0xBD, 0xF3, 0x59, 0x32, 0xDE, 0x8B, 0xA7, 0x00, 0xDE, 0xDE, 0xDF, 0xF4, 0x39, 0x8D, 0x07, 0xDF, 0xA5, 0xBD, 0xEA, 0x2F, 0x20, 0xC1, 0xBD, 0xE9, 0x0C, 0x96, 0xCE, 0x2B, 0xB4, 0x96, 0xC9, 0x81, 0x90, 0x22, 0xAE, 0xBD, 0xF3, 0x0B, 0xDE, 0xCC, 0x39, 0x8D, 0xEE, 0xE6, 0x00, 0x7E, 0xEC, 0xE2, 0x8D, 0xDB, 0xDE, 0xA5, 0xE7, 0x00, 0x39, 0xCE, 0xF5, 0x24, 0x20, 0x0B, 0xBD, 0xF1, 0x60, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xDC, 0x20, 0x03, 0xBD, 0xF1, 0x60, 0x5D, 0x26, 0x03, 0x7E, 0xF2, 0x8B, 0xCE, 0x00, 0xD6, 0x16, 0x27, 0x6D, 0xD0, 0xC9, 0x27, 0x6A, 0x2B, 0x0A, 0x97, 0xC9, 0x96, 0xDB, 0x97, 0xCE, 0xCE, 0x00, 0xC9, 0x50, 0xC1, 0xF8, 0x2F, 0x5A, 0x4F, 0x64, 0x01, 0xBD, 0xF0, 0x80, 0xD6, 0xDC, 0x2A, 0x0B, 0x63, 0x01, 0x63, 0x02, 0x63, 0x03, 0x63, 0x04, 0x43, 0x89, 0x00, 0x97, 0xDD, 0x96, 0xCD, 0x99, 0xDA, 0x97, 0xCD, 0x96, 0xCC, 0x99, 0xD9, 0x97, 0xCC, 0x96, 0xCB, 0x99, 0xD8, 0x97, 0xCB, 0x96, 0xCA, 0x99, 0xD7, 0x97, 0xCA, 0x17, 0x2A, 0x47, 0x25, 0x02, 0x8D, 0x66, 0x5F, 0x96, 0xCA, 0x26, 0x34, 0x96, 0xCB, 0x97, 0xCA, 0x96, 0xCC, 0x97, 0xCB, 0x96, 0xCD, 0x97, 0xCC, 0x96, 0xDD, 0x97, 0xCD, 0x7F, 0x00, 0xDD, 0xCB, 0x08, 0xC1, 0x28, 0x2D, 0xE3, 0x4F, 0x97, 0xC9, 0x97, 0xCE, 0x39, 0x8D, 0x78, 0x0C, 0x20, 0xA7, 0x5C, 0x78, 0x00, 0xDD, 0x79, 0x00, 0xCD, 0x79, 0x00, 0xCC, 0x79, 0x00, 0xCB, 0x79, 0x00, 0xCA, 0x2A, 0xEE, 0x96, 0xC9, 0x10, 0x97, 0xC9, 0x23, 0xDC, 0x8C, 0x25, 0x09, 0x78, 0x00, 0xDD, 0x86, 0x00, 0x97, 0xDD, 0x20, 0x11, 0x7C, 0x00, 0xC9, 0x27, 0x2F, 0x76, 0x00, 0xCA, 0x76, 0x00, 0xCB, 0x76, 0x00, 0xCC, 0x76, 0x00, 0xCD, 0x24, 0x04, 0x8D, 0x12, 0x27, 0xE9, 0x39, 0x73, 0x00, 0xCE, 0x73, 0x00, 0xCA, 0x73, 0x00, 0xCB, 0x73, 0x00, 0xCC, 0x73, 0x00, 0xCD, 0xDE, 0xCC, 0x08, 0xDF, 0xCC, 0x26, 0x05, 0xDE, 0xCA, 0x08, 0xDF, 0xCA, 0x39, 0xC6, 0x0A, 0x7E, 0xE2, 0x38, 0xCE, 0x00, 0x8C, 0xA6, 0x04, 0x97, 0xDD, 0xA6, 0x03, 0xA7, 0x04, 0xA6, 0x02, 0xA7, 0x03, 0xA6, 0x01, 0xA7, 0x02, 0x96, 0xD5, 0xA7, 0x01, 0xCB, 0x08, 0x2F, 0xE8, 0x96, 0xDD, 0xC0, 0x08, 0x27, 0x0C, 0x67, 0x01, 0x66, 0x02, 0x66, 0x03, 0x66, 0x04, 0x46, 0x5C, 0x26, 0xF4, 0x39, 0x81, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7F, 0x5E, 0x56, 0xCB, 0x79, 0x80, 0x13, 0x9B, 0x0B, 0x64, 0x80, 0x76, 0x38, 0x93, 0x16, 0x82, 0x38, 0xAA, 0x3B, 0x20, 0x80, 0x35, 0x04, 0xF3, 0x34, 0x81, 0x35, 0x04, 0xF3, 0x34, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x31, 0x72, 0x17, 0xF8, 0xBD, 0xF2, 0xAD, 0x2E, 0x03, 0x7E, 0xEC, 0x2E, 0xCE, 0xF0, 0xA5, 0x96, 0xC9, 0x80, 0x80, 0x36, 0x86, 0x80, 0x97, 0xC9, 0xBD, 0xEF, 0x7D, 0xCE, 0xF0, 0xAA, 0xBD, 0xF1, 0xC6, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x72, 0xCE, 0xF0, 0x90, 0xBD, 0xF5, 0xF8, 0xCE, 0xF0, 0xAF, 0xBD, 0xEF, 0x7D, 0x33, 0xBD, 0xF3, 0xE9, 0xCE, 0xF0, 0xB4, 0x8D, 0x6F, 0x27, 0x6C, 0xBD, 0xF1, 0x79, 0x86, 0x00, 0x97, 0x8D, 0x97, 0x8E, 0x97, 0x8F, 0x97, 0x90, 0xD6, 0xCD, 0x8D, 0x26, 0xD6, 0xDD, 0xF7, 0x01, 0x55, 0xD6, 0xCC, 0x8D, 0x1D, 0xD6, 0xDD, 0xF7, 0x01, 0x54, 0xD6, 0xCB, 0x8D, 0x14, 0xD6, 0xDD, 0xF7, 0x01, 0x53, 0xD6, 0xCA, 0x8D, 0x10, 0xD6, 0xDD, 0xF7, 0x01, 0x52, 0xBD, 0xF2, 0x48, 0x7E, 0xEF, 0xD6, 0x26, 0x03, 0x7E, 0xF0, 0x5D, 0x0D, 0x96, 0x8D, 0x56, 0x27, 0x2A, 0x24, 0x16, 0x96, 0x90, 0x9B, 0xDA, 0x97, 0x90, 0x96, 0x8F, 0x99, 0xD9, 0x97, 0x8F, 0x96, 0x8E, 0x99, 0xD8, 0x97, 0x8E, 0x96, 0x8D, 0x99, 0xD7, 0x46, 0x97, 0x8D, 0x76, 0x00, 0x8E, 0x76, 0x00, 0x8F, 0x76, 0x00, 0x90, 0x76, 0x00, 0xDD, 0x0C, 0x20, 0xD1, 0x39, 0xEC, 0x01, 0x97, 0xDB, 0x8A, 0x80, 0xDD, 0xD7, 0xD6, 0xDB, 0xD8, 0xCE, 0xD7, 0xDC, 0xEC, 0x03, 0xDD, 0xD9, 0xA6, 0x00, 0x97, 0xD6, 0xD6, 0xC9, 0x39, 0x4D, 0x27, 0x19, 0x9B, 0xC9, 0x46, 0x49, 0x28, 0x13, 0x8B, 0x80, 0x97, 0xC9, 0x26, 0x03, 0x7E, 0xEF, 0xF7, 0x96, 0xDC, 0x97, 0xCE, 0x39, 0x96, 0xCE, 0x43, 0x20, 0x02, 0x32, 0x32, 0x2B, 0x03, 0x7E, 0xEF, 0xF4, 0x7E, 0xF0, 0x58, 0xBD, 0xF2, 0x9F, 0x27, 0x0F, 0x8B, 0x02, 0x25, 0xF4, 0x7F, 0x00, 0xDC, 0xBD, 0xEF, 0x89, 0x7C, 0x00, 0xC9, 0x27, 0xE9, 0x39, 0x84, 0x20, 0x00, 0x00, 0x00, 0xBD, 0xF2, 0x9F, 0xCE, 0xF1, 0xB4, 0x5F, 0xD7, 0xDC, 0xBD, 0xF2, 0x51, 0x8C, 0x8D, 0x98, 0x27, 0x79, 0x70, 0x00, 0xC9, 0x8D, 0xAA, 0x7C, 0x00, 0xC9, 0x27, 0xC8, 0xCE, 0x00, 0x8D, 0xC6, 0x04, 0xD7, 0x82, 0xC6, 0x01, 0x96, 0xCA, 0x91, 0xD7, 0x26, 0x13, 0x96, 0xCB, 0x91, 0xD8, 0x26, 0x0D, 0x96, 0xCC, 0x91, 0xD9, 0x26, 0x07, 0x96, 0xCD, 0x91, 0xDA, 0x26, 0x01, 0x0D, 0x07, 0x59, 0x24, 0x0C, 0xE7, 0x00, 0x08, 0x7A, 0x00, 0x82, 0x2B, 0x37, 0x27, 0x31, 0xC6, 0x01, 0x06, 0x25, 0x12, 0x78, 0x00, 0xDA, 0x79, 0x00, 0xD9, 0x79, 0x00, 0xD8, 0x79, 0x00, 0xD7, 0x25, 0xDF, 0x2B, 0xC4, 0x20, 0xDB, 0x96, 0xDA, 0x90, 0xCD, 0x97, 0xDA, 0x96, 0xD9, 0x92, 0xCC, 0x97, 0xD9, 0x96, 0xD8, 0x92, 0xCB, 0x97, 0xD8, 0x96, 0xD7, 0x92, 0xCA, 0x97, 0xD7, 0x20, 0xD4, 0xC6, 0x40, 0x20, 0xCD, 0x56, 0x56, 0x56, 0xD7, 0xDD, 0x8D, 0x08, 0x7E, 0xEF, 0xD6, 0xC6, 0x14, 0x7E, 0xE2, 0x38, 0xDE, 0x8D, 0xDF, 0xCA, 0xDE, 0x8F, 0xDF, 0xCC, 0x39, 0x36, 0xEC, 0x01, 0x97, 0xCE, 0x8A, 0x80, 0xDD, 0xCA, 0x7F, 0x00, 0xDD, 0xE6, 0x00, 0xEE, 0x03, 0xDF, 0xCC, 0xD7, 0xC9, 0x32, 0x39, 0xCE, 0x00, 0xBF, 0x20, 0x06, 0xCE, 0x00, 0xBA, 0x8C, 0xDE, 0xB5, 0x96, 0xC9, 0xA7, 0x00, 0x96, 0xCE, 0x8A, 0x7F, 0x94, 0xCA, 0xA7, 0x01, 0x96, 0xCB, 0xA7, 0x02, 0x96, 0xCC, 0xA7, 0x03, 0x96, 0xCD, 0xA7, 0x04, 0x39, 0x96, 0xDB, 0x97, 0xCE, 0xDE, 0xD6, 0xDF, 0xC9, 0x7F, 0x00, 0xDD, 0xDE, 0xD8, 0xDF, 0xCB, 0xDE, 0xD9, 0xDF, 0xCC, 0x39, 0xDC, 0xC9, 0xDD, 0xD6, 0xDE, 0xCB, 0xDF, 0xD8, 0xDE, 0xCD, 0xDF, 0xDA, 0x4D, 0x39, 0xD6, 0xC9, 0x27, 0x08, 0xD6, 0xCE, 0x59, 0xC6, 0xFF, 0x25, 0x01, 0x50, 0x39, 0x8D, 0xF1, 0xD7, 0xCA, 0x7F, 0x00, 0xCB, 0xC6, 0x88, 0x96, 0xCA, 0x80, 0x80, 0xD7, 0xC9, 0xCC, 0x00, 0x00, 0xDD, 0xCC, 0x97, 0xDD, 0x97, 0xCE, 0x7E, 0xEF, 0xD2, 0x7F, 0x00, 0xCE, 0x39, 0xE6, 0x00, 0x27, 0xD0, 0xE6, 0x01, 0xD8, 0xCE, 0x2B, 0xCE, 0xD6, 0xC9, 0xE1, 0x00, 0x26, 0x1D, 0xE6, 0x01, 0xCA, 0x7F, 0xD4, 0xCA, 0xE1, 0x01, 0x26, 0x13, 0xD6, 0xCB, 0xE1, 0x02, 0x26, 0x0D, 0xD6, 0xCC, 0xE1, 0x03, 0x26, 0x07, 0xD6, 0xCD, 0xE0, 0x04, 0x26, 0x01, 0x39, 0x56, 0xD8, 0xCE, 0x20, 0xA8, 0xD6, 0xC9, 0x27, 0x41, 0xC0, 0xA0, 0x96, 0xCE, 0x2A, 0x06, 0x73, 0x00, 0xD5, 0xBD, 0xF0, 0x3F, 0xCE, 0x00, 0xC9, 0xC1, 0xF8, 0x2E, 0x07, 0xBD, 0xF0, 0x74, 0x7F, 0x00, 0xD5, 0x39, 0x7F, 0x00, 0xD5, 0x96, 0xCE, 0x49, 0x76, 0x00, 0xCA, 0x7E, 0xF0, 0x80, 0xD6, 0xC9, 0xC1, 0xA0, 0x24, 0x1D, 0x8D, 0xCE, 0xD7, 0xDD, 0x96, 0xCE, 0xD7, 0xCE, 0x80, 0x80, 0x86, 0xA0, 0x97, 0xC9, 0x96, 0xCD, 0x97, 0x80, 0x7E, 0xEF, 0xD2, 0xD7, 0xCA, 0xD7, 0xCB, 0xD7, 0xCC, 0xD7, 0xCD, 0x39, 0x7E, 0xD9, 0xE4, 0xCE, 0x00, 0x00, 0xDF, 0xCE, 0xDF, 0xC9, 0xDF, 0xCB, 0xDF, 0xCC, 0xDF, 0xC1, 0xDF, 0xBF, 0x25, 0x6B, 0x81, 0x2D, 0x26, 0x05, 0x73, 0x00, 0xCF, 0x20, 0x04, 0x81, 0x2B, 0x26, 0x05, 0xBD, 0x00, 0xEB, 0x25, 0x59, 0x81, 0x2E, 0x27, 0x2D, 0x81, 0x45, 0x26, 0x2E, 0xBD, 0x00, 0xEB, 0x25, 0x69, 0x81, 0xA8, 0x27, 0x0E, 0x81, 0x2D, 0x27, 0x0A, 0x81, 0xA7, 0x27, 0x09, 0x81, 0x2B, 0x27, 0x05, 0x20, 0x08, 0x73, 0x00, 0xC2, 0xBD, 0x00, 0xEB, 0x25, 0x4F, 0x7D, 0x00, 0xC2, 0x27, 0x0A, 0x70, 0x00, 0xC1, 0x20, 0x05, 0x73, 0x00, 0xC0, 0x26, 0xC5, 0x96, 0xC1, 0x90, 0xBF, 0x97, 0xC1, 0x27, 0x14, 0x2A, 0x0A, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xC1, 0x26, 0xF8, 0x20, 0x08, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xC1, 0x26, 0xF8, 0x96, 0xCF, 0x2A, 0x83, 0x7E, 0xF5, 0x93, 0xD6, 0xBF, 0xD0, 0xC0, 0xD7, 0xBF, 0x36, 0xBD, 0xF1, 0x9F, 0x33, 0xC0, 0x30, 0x8D, 0x02, 0x20, 0x91, 0xBD, 0xF2, 0x6C, 0xBD, 0xF2, 0xBC, 0xCE, 0x00, 0xBA, 0x7E, 0xEF, 0x7D, 0xD6, 0xC1, 0x58, 0x58, 0xDB, 0xC1, 0x58, 0x80, 0x30, 0x1B, 0x97, 0xC1, 0x20, 0x9E, 0x9B, 0x3E, 0xBC, 0x1F, 0xFD, 0x9E, 0x6E, 0x6B, 0x27, 0xFD, 0x9E, 0x6E, 0x6B, 0x28, 0x00, 0xCE, 0xE1, 0xB6, 0x8D, 0x0C, 0xDC, 0xE2, 0xDD, 0xCA, 0xC6, 0x90, 0x0D, 0xBD, 0xF2, 0xC7, 0x8D, 0x03, 0x7E, 0xE7, 0xA8, 0xCE, 0x02, 0xAF, 0x86, 0x20, 0xD6, 0xCE, 0x2A, 0x02, 0x86, 0x2D, 0xA7, 0x00, 0x97, 0xCE, 0xDF, 0xDE, 0x08, 0x86, 0x30, 0xD6, 0xC9, 0x26, 0x03, 0x7E, 0xF5, 0x1C, 0x4F, 0xC1, 0x80, 0x22, 0x08, 0xCE, 0xF4, 0x0D, 0xBD, 0xF0, 0xEF, 0x86, 0xF7, 0x97, 0xBF, 0xCE, 0xF4, 0x08, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xCE, 0xF4, 0x03, 0xBD, 0xF2, 0xE3, 0x2E, 0x10, 0xBD, 0xF1, 0x9F, 0x7A, 0x00, 0xBF, 0x20, 0xF0, 0xBD, 0xF1, 0xB9, 0x7C, 0x00, 0xBF, 0x20, 0xE0, 0xBD, 0xEF, 0x6D, 0xBD, 0xF3, 0x0B, 0xC6, 0x01, 0x96, 0xBF, 0x8B, 0x0A, 0x2B, 0x08, 0x81, 0x0B, 0x24, 0x04, 0x4A, 0x16, 0x86, 0x02, 0x4A, 0x4A, 0x97, 0xC1, 0xD7, 0xBF, 0x2E, 0x11, 0xDE, 0xDE, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0x5D, 0x27, 0x05, 0x86, 0x30, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xCE, 0xF5, 0x29, 0xC6, 0x80, 0x96, 0xCD, 0xAB, 0x03, 0x97, 0xCD, 0x96, 0xCC, 0xA9, 0x02, 0x97, 0xCC, 0x96, 0xCB, 0xA9, 0x01, 0x97, 0xCB, 0x96, 0xCA, 0xA9, 0x00, 0x97, 0xCA, 0x5C, 0x56, 0x59, 0x28, 0xE3, 0x24, 0x03, 0xC0, 0x0B, 0x50, 0xCB, 0x2F, 0x08, 0x08, 0x08, 0x08, 0xDF, 0xB3, 0xDE, 0xDE, 0x08, 0x17, 0x84, 0x7F, 0xA7, 0x00, 0x7A, 0x00, 0xBF, 0x26, 0x05, 0x86, 0x2E, 0x08, 0xA7, 0x00, 0xDF, 0xDE, 0xDE, 0xB3, 0x53, 0xC4, 0x80, 0x8C, 0xF5, 0x4D, 0x26, 0xB8, 0xDE, 0xDE, 0xA6, 0x00, 0x09, 0x81, 0x30, 0x27, 0xF9, 0x81, 0x2E, 0x27, 0x01, 0x08, 0x86, 0x2B, 0xD6, 0xC1, 0x27, 0x1E, 0x2A, 0x03, 0x86, 0x2D, 0x50, 0xA7, 0x02, 0x86, 0x45, 0xA7, 0x01, 0x86, 0x2F, 0x4C, 0xC0, 0x0A, 0x24, 0xFB, 0xCB, 0x3A, 0xA7, 0x03, 0xE7, 0x04, 0x6F, 0x05, 0x20, 0x04, 0xA7, 0x00, 0x6F, 0x01, 0xCE, 0x02, 0xAF, 0x39, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x0A, 0x1F, 0x00, 0x00, 0x98, 0x96, 0x80, 0xFF, 0xF0, 0xBD, 0xC0, 0x00, 0x01, 0x86, 0xA0, 0xFF, 0xFF, 0xD8, 0xF0, 0x00, 0x00, 0x03, 0xE8, 0xFF, 0xFF, 0xFF, 0x9C, 0x00, 0x00, 0x00, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xF2, 0x9F, 0xCE, 0xF5, 0x24, 0xBD, 0xF2, 0x51, 0x27, 0x71, 0x4D, 0x26, 0x0A, 0x96, 0xCE, 0x2A, 0x03, 0x7E, 0xF2, 0x43, 0x7E, 0xEF, 0xF5, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0x5F, 0x96, 0xDB, 0x2A, 0x10, 0xBD, 0xF3, 0x35, 0xCE, 0x00, 0xC4, 0x96, 0xDB, 0xBD, 0xF2, 0xE3, 0x26, 0x03, 0x43, 0xD6, 0x80, 0xBD, 0xF2, 0x8D, 0x37, 0xBD, 0xF0, 0xB9, 0xCE, 0x00, 0xC4, 0xBD, 0xF0, 0xEF, 0x8D, 0x3A, 0x32, 0x46, 0x24, 0x90, 0x96, 0xC9, 0x27, 0x03, 0x73, 0x00, 0xCE, 0x39, 0x81, 0x38, 0xAA, 0x3B, 0x29, 0x07, 0x71, 0x34, 0x58, 0x3E, 0x56, 0x74, 0x16, 0x7E, 0xB3, 0x1B, 0x77, 0x2F, 0xEE, 0xE3, 0x85, 0x7A, 0x1D, 0x84, 0x1C, 0x2A, 0x7C, 0x63, 0x59, 0x58, 0x0A, 0x7E, 0x75, 0xFD, 0xE7, 0xC6, 0x80, 0x31, 0x72, 0x18, 0x10, 0x81, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xF5, 0x9B, 0x8D, 0x36, 0xBD, 0xF2, 0x6C, 0x96, 0xC9, 0x81, 0x88, 0x25, 0x03, 0x7E, 0xF1, 0x90, 0xBD, 0xF3, 0x35, 0x96, 0x80, 0x8B, 0x81, 0x27, 0xF4, 0x4A, 0x36, 0xCE, 0x00, 0xBA, 0xBD, 0xEF, 0x72, 0xCE, 0xF5, 0xA0, 0x8D, 0x17, 0x7F, 0x00, 0xDC, 0x32, 0xBD, 0xF1, 0x79, 0x39, 0xDF, 0xDE, 0xBD, 0xF2, 0x6C, 0x8D, 0x05, 0x8D, 0x08, 0xCE, 0x00, 0xBA, 0x7E, 0xF0, 0xEF, 0xDF, 0xDE, 0xBD, 0xF2, 0x67, 0xDE, 0xDE, 0xE6, 0x00, 0xD7, 0xCF, 0x08, 0xDF, 0xDE, 0x8D, 0xED, 0xDE, 0xDE, 0xC6, 0x05, 0x3A, 0xDF, 0xDE, 0xBD, 0xEF, 0x7D, 0xCE, 0x00, 0xBF, 0x7A, 0x00, 0xCF, 0x26, 0xEC, 0x39, 0xBD, 0xF2, 0xAD, 0x2B, 0x21, 0x27, 0x15, 0x8D, 0x10, 0xBD, 0xF2, 0x6C, 0x8D, 0x0E, 0xCE, 0x00, 0xBA, 0x8D, 0xC7, 0xCE, 0xF0, 0x8B, 0xBD, 0xEF, 0x7D, 0x7E, 0xF3, 0x35, 0xFE, 0x01, 0x18, 0xDF, 0xCA, 0xFE, 0x01, 0x1A, 0xDF, 0xCC, 0xFE, 0xF6, 0x82, 0xDF, 0xD7, 0xFE, 0xF6, 0x84, 0xDF, 0xD9, 0xBD, 0xF0, 0xF6, 0xFC, 0x01, 0x54, 0xC3, 0x65, 0x8B, 0xFD, 0x01, 0x1A, 0xDD, 0xCC, 0xFC, 0x01, 0x52, 0xC9, 0xB0, 0x89, 0x05, 0xFD, 0x01, 0x18, 0xDD, 0xCA, 0x7F, 0x00, 0xCE, 0x86, 0x80, 0x97, 0xC9, 0x96, 0x8F, 0x97, 0xDD, 0x7E, 0xEF, 0xD6, 0x40, 0xE6, 0x4D, 0xAB, 0xCE, 0xF6, 0xF6, 0xBD, 0xEF, 0x7D, 0xBD, 0xF2, 0x9F, 0xCE, 0xF6, 0xFB, 0xD6, 0xDB, 0xBD, 0xF1, 0xC0, 0xBD, 0xF2, 0x9F, 0xBD, 0xF3, 0x35, 0x7F, 0x00, 0xDC, 0x96, 0xD6, 0xD6, 0xC9, 0xBD, 0xEF, 0x75, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x72, 0x96, 0xCE, 0x36, 0x2A, 0x0A, 0xBD, 0xEF, 0x6D, 0x96, 0xCE, 0x2B, 0x06, 0x73, 0x00, 0x88, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x00, 0xBD, 0xEF, 0x7D, 0x32, 0x4D, 0x2A, 0x03, 0xBD, 0xF5, 0x93, 0xCE, 0xF7, 0x05, 0x7E, 0xF5, 0xF8, 0xBD, 0xF2, 0x6C, 0x7F, 0x00, 0x88, 0x8D, 0xB2, 0xCE, 0x00, 0xC4, 0xBD, 0xF2, 0x72, 0xCE, 0x00, 0xBA, 0xBD, 0xF2, 0x51, 0x7F, 0x00, 0xCE, 0x96, 0x88, 0x8D, 0x06, 0xCE, 0x00, 0xC4, 0x7E, 0xF1, 0xC6, 0x36, 0x20, 0xC6, 0x81, 0x49, 0x0F, 0xDA, 0xA2, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x05, 0x84, 0xE6, 0x1A, 0x2D, 0x1B, 0x86, 0x28, 0x07, 0xFB, 0xF8, 0x87, 0x99, 0x68, 0x89, 0x01, 0x87, 0x23, 0x35, 0xDF, 0xE1, 0x86, 0xA5, 0x5D, 0xE7, 0x28, 0x83, 0x49, 0x0F, 0xDA, 0xA2, 0xA1, 0x43, 0x49, 0x93, 0x01, 0x82, 0x20, 0x58, 0x83, 0xCD, 0x01, 0x7E, 0xC0, 0x06, 0x5F, 0xD7, 0xE8, 0xBD, 0xD8, 0xBB, 0xBD, 0xFB, 0xD4, 0xBD, 0xC3, 0x84, 0xCC, 0x3A, 0x43, 0xDD, 0xFB, 0xC6, 0x08, 0xD7, 0x08, 0x7E, 0xE2, 0x71, 0x20, 0xE2, 0x4D, 0x45, 0x52, 0x47, 0x49, 0x4E, 0x47, 0x20, 0x00, 0x08, 0x8C, 0xBE, 0xFE, 0x24, 0x0A, 0xA7, 0x02, 0xE9, 0x02, 0xE7, 0x02, 0xEA, 0x02, 0x27, 0xF0, 0xFF, 0x01, 0x50, 0xDF, 0xA1, 0xDF, 0x9D, 0xDC, 0x9D, 0x83, 0x00, 0xC8, 0xDD, 0x9B, 0x9E, 0x9B, 0xCE, 0xF7, 0xCF, 0xCC, 0x00, 0xEB, 0x8D, 0x30, 0xCE, 0xF7, 0xDE, 0xCC, 0x01, 0x00, 0x8D, 0x28, 0x86, 0x39, 0xCE, 0x01, 0x85, 0xA7, 0x00, 0x08, 0x8C, 0x01, 0xAF, 0x26, 0xF8, 0x63, 0x00, 0xCC, 0x02, 0x09, 0xBD, 0xD8, 0x2A, 0xBD, 0xE3, 0xCF, 0xBD, 0xFB, 0xD4, 0xCE, 0xF8, 0x0F, 0xBD, 0xE7, 0xA8, 0x86, 0x55, 0x97, 0xEA, 0x7E, 0xF7, 0x3B, 0xDD, 0xBF, 0xE6, 0x00, 0x08, 0xA6, 0x00, 0xDF, 0xC1, 0xDE, 0xBF, 0xA7, 0x00, 0x08, 0xDF, 0xBF, 0xDE, 0xC1, 0x5A, 0x26, 0xEF, 0x39, 0x01, 0x96, 0x7E, 0xB7, 0xBF, 0x00, 0xBD, 0xE3, 0xEE, 0x7E, 0xF7, 0x32, 0x0E, 0x7C, 0x00, 0xF5, 0x26, 0x03, 0x7C, 0x00, 0xF4, 0xB6, 0x00, 0x00, 0x7E, 0xE1, 0xC8, 0x31, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xC3, 0xA4, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x7E, 0xEC, 0x2E, 0x4F, 0xC7, 0x52, 0x59, 0xFF, 0x04, 0x5E, 0xEC, 0x2E, 0xF7, 0xC3, 0x00, 0x76, 0x00, 0x01, 0x10, 0x70, 0x84, 0x00, 0x01, 0x15, 0x1A, 0x0B, 0x00, 0x80, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x20, 0x32, 0x2E, 0x31, 0x0D, 0x42, 0x55, 0x49, 0x4C, 0x54, 0x20, 0x4D, 0x41, 0x52, 0x20, 0x31, 0x38, 0x2C, 0x20, 0x32, 0x30, 0x31, 0x31, 0x20, 0x0D, 0x0D, 0x00, 0x4D, 0x43, 0x58, 0x20, 0x42, 0x41, 0x53, 0x49, 0x43, 0x0D, 0x00, 0x7A, 0x01, 0x2B, 0x26, 0x1A, 0xB6, 0x01, 0x82, 0x88, 0x0F, 0xB7, 0x01, 0x82, 0x8A, 0x80, 0x36, 0xBD, 0xE0, 0x62, 0x32, 0xC6, 0x1E, 0x84, 0x0F, 0x27, 0x02, 0xC6, 0x32, 0xF7, 0x01, 0x2B, 0xCE, 0x03, 0xFA, 0x09, 0x26, 0xFD, 0x39, 0x7E, 0xC4, 0xFF, 0x3C, 0x37, 0x8D, 0xD3, 0x8D, 0x15, 0x27, 0xFA, 0x36, 0x86, 0x60, 0xBD, 0xE0, 0x62, 0x32, 0x20, 0x52, 0x4F, 0x8D, 0x54, 0x26, 0x05, 0x8D, 0x64, 0x4C, 0x27, 0x4A, 0xBD, 0x01, 0xA9, 0x3C, 0x37, 0x86, 0xFB, 0x8D, 0x44, 0x16, 0x27, 0x03, 0xF8, 0x01, 0x3B, 0xB7, 0x01, 0x3B, 0x5D, 0x27, 0x06, 0x8D, 0x42, 0xBD, 0xC4, 0xED, 0x01, 0xCE, 0x01, 0x30, 0x5F, 0x5A, 0xF7, 0x01, 0x39, 0x59, 0x24, 0x1D, 0x7C, 0x01, 0x39, 0x8D, 0x34, 0x37, 0x16, 0x08, 0xA8, 0x00, 0xA4, 0x00, 0xE7, 0x00, 0x33, 0x4D, 0x0D, 0x27, 0xEA, 0x36, 0x8D, 0x1D, 0x8D, 0x23, 0xA1, 0x00, 0x32, 0x26, 0x24, 0x4F, 0x8C, 0x86, 0x03, 0x4D, 0x33, 0x38, 0x39, 0x86, 0x7F, 0x97, 0x02, 0x96, 0x03, 0x43, 0x84, 0x02, 0x27, 0x02, 0x86, 0xFF, 0x39, 0xFE, 0x01, 0x1D, 0x7E, 0xF8, 0x61, 0xD7, 0x02, 0xB6, 0xBF, 0xFF, 0x8A, 0xC0, 0x39, 0xC6, 0xF8, 0xCB, 0x08, 0x44, 0x24, 0xFB, 0xFB, 0x01, 0x39, 0x86, 0xFE, 0x8D, 0xD8, 0xB7, 0x01, 0x3A, 0xBD, 0x01, 0xAC, 0x27, 0x11, 0xCE, 0xF9, 0x7C, 0xC1, 0x20, 0x26, 0x27, 0xB6, 0x01, 0x82, 0x8B, 0x10, 0xB7, 0x01, 0x82, 0x20, 0xB5, 0x17, 0x27, 0x05, 0xC1, 0x1A, 0x23, 0x1B, 0x8C, 0xC6, 0x1D, 0xCE, 0xF9, 0x39, 0x8D, 0xAE, 0x27, 0x0C, 0xCE, 0xF9, 0x4C, 0xC1, 0x20, 0x26, 0x05, 0x73, 0x01, 0x1C, 0x20, 0x98, 0x3A, 0xA6, 0x00, 0x20, 0x97, 0x8D, 0x99, 0xB8, 0x01, 0x1C, 0x26, 0x07, 0xB6, 0x01, 0x1C, 0x26, 0x07, 0xCA, 0x20, 0x17, 0x8A, 0x40, 0x20, 0x84, 0xCE, 0xF9, 0xAB, 0x3A, 0xA6, 0x00, 0x2A, 0xF6, 0xF6, 0x01, 0x82, 0xC4, 0x70, 0x1B, 0x20, 0xEE, 0x40, 0x0D, 0x20, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x2C, 0x2D, 0x2E, 0x2F, 0x13, 0x0D, 0x20, 0x00, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x3C, 0x3D, 0x3E, 0x3F, 0x88, 0x08, 0xB3, 0xB2, 0x82, 0x9B, 0x90, 0x84, 0xA3, 0x8A, 0x81, 0x9E, 0xBC, 0xBA, 0xB9, 0xA5, 0xC7, 0x15, 0x9C, 0x09, 0x8C, 0x80, 0xB5, 0x5E, 0xB1, 0x8F, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x20, 0x00, 0x8E, 0x93, 0xE0, 0xDF, 0x96, 0x94, 0x95, 0x9D, 0x86, 0x89, 0x92, 0xBB, 0x91, 0xB7, 0xB6, 0x89, 0x80, 0x82, 0x87, 0x8D, 0x86, 0x85, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x8F, 0x8C, 0x88, 0x8B, 0x55, 0x81, 0x8E, 0x83, 0x8A, 0x84, 0xBD, 0x01, 0x88, 0x3C, 0x37, 0x7E, 0xC4, 0xC6, 0x27, 0x4B, 0x16, 0x07, 0xBD, 0xDC, 0x21, 0xD6, 0x03, 0xC4, 0x04, 0x26, 0xFA, 0x8D, 0x2D, 0x5F, 0x8D, 0x2C, 0xC6, 0x08, 0x37, 0x5F, 0x44, 0x59, 0x8D, 0x24, 0x33, 0x5A, 0x26, 0xF6, 0x8D, 0x1C, 0x32, 0x06, 0x32, 0x81, 0x0D, 0x27, 0x0B, 0x7C, 0x01, 0x2A, 0xF6, 0x01, 0x2A, 0xF1, 0x01, 0x29, 0x25, 0x07, 0x7F, 0x01, 0x2A, 0x8D, 0x10, 0x8D, 0x0E, 0x33, 0x38, 0x39, 0xC6, 0x01, 0xD7, 0x03, 0x8D, 0x00, 0xFE, 0x01, 0x23, 0x20, 0x03, 0xFE, 0x01, 0x25, 0x7E, 0xF8, 0x61, 0x7E, 0xE1, 0x07, 0x81, 0x08, 0x26, 0x0C, 0x8C, 0x40, 0x00, 0x27, 0x50, 0x86, 0x60, 0x09, 0xA7, 0x00, 0x20, 0x2E, 0x81, 0x0D, 0x26, 0x14, 0xF6, 0x01, 0x81, 0x86, 0x60, 0xA7, 0x00, 0x08, 0x5C, 0xC5, 0x1F, 0x26, 0xF8, 0x20, 0x1B, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 0x20, 0x25, 0x2D, 0x4D, 0x2B, 0x0C, 0x81, 0x40, 0x25, 0x06, 0x81, 0x60, 0x25, 0x04, 0x84, 0xDF, 0x88, 0x40, 0xA7, 0x00, 0x08, 0xFF, 0x01, 0x80, 0x8C, 0x42, 0x00, 0x26, 0x13, 0xCE, 0x40, 0x00, 0xEC, 0x20, 0xED, 0x00, 0x08, 0x08, 0x8C, 0x41, 0xE0, 0x26, 0xF5, 0xC6, 0x60, 0xBD, 0xFB, 0xD9, 0x7E, 0xE1, 0x18, 0x39, 0xBD, 0x01, 0x8B, 0x3C, 0x37, 0x36, 0x96, 0xE8, 0x27, 0x08, 0xFE, 0x01, 0x27, 0xFC, 0x01, 0x29, 0x20, 0x0A, 0xF6, 0x01, 0x81, 0xC4, 0x1F, 0xCE, 0x10, 0x10, 0x86, 0x20, 0xDF, 0xE4, 0xD7, 0xE6, 0x97, 0xE7, 0x32, 0x33, 0x38, 0x39, 0xBD, 0xFB, 0xD4, 0x7E, 0xD8, 0xF5, 0x7F, 0x01, 0x7F, 0xCE, 0x01, 0xB2, 0xC6, 0x01, 0xBD, 0xF8, 0x65, 0x7D, 0x00, 0xE9, 0x26, 0x4D, 0x7D, 0x00, 0xE8, 0x26, 0x44, 0x4D, 0x2A, 0x1E, 0x7D, 0x01, 0x3A, 0x27, 0x19, 0xBD, 0xE4, 0xB2, 0xA6, 0x00, 0x08, 0x3C, 0x36, 0x84, 0x7F, 0xDE, 0x89, 0x8D, 0x48, 0xDF, 0x89, 0x32, 0x38, 0x4D, 0x2A, 0xEE, 0xDE, 0x89, 0x20, 0xD2, 0x81, 0x0C, 0x27, 0xC0, 0x81, 0x08, 0x26, 0x08, 0x5A, 0x27, 0xBF, 0x09, 0x8D, 0x37, 0x20, 0xC2, 0x81, 0x15, 0x26, 0x0A, 0x5A, 0x27, 0xB3, 0x86, 0x08, 0xBD, 0xF9, 0xC6, 0x20, 0xF6, 0x81, 0x03, 0x0D, 0x27, 0x05, 0x81, 0x0D, 0x26, 0x0E, 0x4F, 0x07, 0x36, 0xBD, 0xE7, 0x66, 0x6F, 0x00, 0xCE, 0x01, 0xB1, 0x32, 0x06, 0x39, 0x81, 0x20, 0x25, 0x99, 0x8D, 0x02, 0x20, 0x95, 0xC1, 0xFA, 0x24, 0x82, 0xA7, 0x00, 0x08, 0x5C, 0x7E, 0xF9, 0xC6, 0x8D, 0x43, 0x3C, 0xBD, 0xE0, 0x9D, 0x38, 0xC1, 0x08, 0x22, 0x37, 0x5A, 0x2B, 0x05, 0x86, 0x10, 0x3D, 0x20, 0x08, 0xD6, 0xE1, 0x2A, 0x03, 0xC4, 0x70, 0x21, 0x5F, 0xD7, 0x82, 0x8D, 0x77, 0x96, 0xE1, 0x2B, 0x01, 0x4F, 0x84, 0x0F, 0xBA, 0x01, 0x3C, 0x9A, 0x82, 0x8A, 0x80, 0x7E, 0xE0, 0x88, 0x8D, 0x13, 0x8D, 0x62, 0xBD, 0xE0, 0xA2, 0x2A, 0xF2, 0x73, 0x01, 0x3C, 0xF4, 0x01, 0x3C, 0x7E, 0xE0, 0x89, 0x7E, 0xEC, 0x2E, 0xBD, 0xEA, 0x2C, 0xBD, 0xEF, 0x0D, 0xC1, 0x3F, 0x22, 0xF3, 0x37, 0xBD, 0xEF, 0x47, 0xC1, 0x1F, 0x22, 0xEB, 0x37, 0x54, 0x86, 0x20, 0x3D, 0xC3, 0x40, 0x00, 0x37, 0x36, 0x30, 0xE6, 0x03, 0x54, 0x38, 0x3A, 0x32, 0x33, 0x84, 0x01, 0x56, 0x49, 0xC6, 0x10, 0x54, 0x4A, 0x2A, 0xFC, 0xF7, 0x01, 0x3C, 0x39, 0x8D, 0xCF, 0xBD, 0xE0, 0x98, 0x96, 0xE1, 0x2A, 0x0E, 0xB4, 0x01, 0x3C, 0x27, 0x08, 0xD6, 0xE1, 0x54, 0x54, 0x54, 0x54, 0xC4, 0x07, 0x5C, 0x4F, 0x5D, 0x2A, 0x01, 0x43, 0xBD, 0xEC, 0xE3, 0x7E, 0xEA, 0x29, 0x01, 0x27, 0x13, 0xBD, 0xEF, 0x0D, 0xC1, 0x08, 0x22, 0x1D, 0x5D, 0x27, 0x06, 0x5A, 0x86, 0x10, 0x3D, 0xCA, 0x0F, 0xCA, 0x80, 0x8C, 0xC6, 0x60, 0x7E, 0xE1, 0x2A, 0xFF, 0x01, 0x80, 0xE7, 0x00, 0x08, 0x8C, 0x42, 0x00, 0x26, 0xF8, 0x39, 0x8D, 0xED, 0xCE, 0xF8, 0x33, 0x7E, 0xE7, 0xA8, 0xB6, 0x01, 0x7F, 0x26, 0x03, 0xBD, 0xF8, 0x83, 0x7F, 0x01, 0x7F, 0x97, 0xCD, 0x27, 0x03, 0x7E, 0xDF, 0xF7, 0x97, 0xD0, 0x7E, 0xEE, 0x9D, 0x27, 0x06, 0xBD, 0xEF, 0x4C, 0xFF, 0x01, 0x1F, 0xCE, 0xC8, 0x4A, 0x6E, 0x00, 0xDE, 0x99, 0x3C, 0xBD, 0xEB, 0x1B, 0xBD, 0xEA, 0x29, 0xDF, 0x89, 0x38, 0xDC, 0x89, 0x9C, 0x99, 0x27, 0x03, 0x7E, 0xEC, 0x2E, 0x7E, 0xDC, 0xA8, 0xBD, 0xEB, 0xBA, 0x83, 0x01, 0xFF, 0x23, 0x03, 0x7E, 0xEC, 0x2E, 0xC3, 0x41, 0xFF, 0xFD, 0x01, 0x80, 0x39, 0xDE, 0x93, 0xFF, 0x01, 0x6F, 0xDE, 0x95, 0xFF, 0x01, 0x71, 0xBD, 0xCB, 0x05, 0x26, 0x05, 0xBD, 0xFD, 0xDB, 0xC6, 0x04, 0xF7, 0x01, 0x67, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xFD, 0x01, 0x6C, 0x8D, 0x2E, 0xFE, 0x01, 0x6F, 0xFF, 0x01, 0x78, 0x86, 0xFF, 0xB7, 0x01, 0x76, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x78, 0x23, 0x0E, 0x4D, 0x26, 0x07, 0xC1, 0xFF, 0x27, 0x03, 0xF7, 0x01, 0x76, 0x8D, 0x44, 0x20, 0xE2, 0x70, 0x01, 0x75, 0x7F, 0x01, 0x76, 0x8D, 0x3A, 0x86, 0x01, 0x97, 0x03, 0x39, 0xBD, 0xFD, 0x29, 0xCE, 0x01, 0x5F, 0xFF, 0x01, 0x78, 0xDF, 0xBF, 0x6F, 0x09, 0x6F, 0x0A, 0xCE, 0x01, 0x57, 0xC6, 0x08, 0xBD, 0xF7, 0xB2, 0x7F, 0x01, 0x75, 0x86, 0x0F, 0xB7, 0x01, 0x76, 0x8D, 0x0B, 0x8D, 0x12, 0x7C, 0x01, 0x75, 0xCE, 0x00, 0x00, 0xBD, 0xF8, 0x61, 0xFE, 0x01, 0x2F, 0x8D, 0x45, 0x09, 0x26, 0xFB, 0x39, 0x01, 0x0F, 0xF6, 0x01, 0x76, 0xF7, 0x01, 0x7B, 0xB6, 0x01, 0x76, 0x27, 0x09, 0xFE, 0x01, 0x78, 0xAB, 0x00, 0x08, 0x5A, 0x26, 0xFA, 0xBB, 0x01, 0x75, 0xB7, 0x01, 0x7A, 0xFE, 0x01, 0x78, 0x8D, 0x20, 0x86, 0x3C, 0x8D, 0x1E, 0xB6, 0x01, 0x75, 0x8D, 0x19, 0xB6, 0x01, 0x76, 0x8D, 0x14, 0x4D, 0x27, 0x0A, 0xA6, 0x00, 0x08, 0x8D, 0x0C, 0x7A, 0x01, 0x7B, 0x26, 0xF6, 0xB6, 0x01, 0x7A, 0x8D, 0x02, 0x86, 0x55, 0x3C, 0x36, 0x36, 0xC6, 0x08, 0x30, 0x64, 0x00, 0xCE, 0x00, 0x20, 0x25, 0x03, 0xCE, 0x00, 0x40, 0x3C, 0x86, 0x01, 0x97, 0x03, 0x09, 0x26, 0xFD, 0x4F, 0x97, 0x03, 0x38, 0x09, 0x26, 0xFD, 0x5A, 0x26, 0xE3, 0x32, 0x32, 0x38, 0x39, 0x8D, 0x08, 0xBD, 0x00, 0xF3, 0x27, 0xF8, 0x7E, 0xEA, 0x3C, 0xCE, 0x01, 0x56, 0x6F, 0x00, 0x86, 0x20, 0x08, 0xA7, 0x00, 0x8C, 0x01, 0x5F, 0x26, 0xF8, 0x9D, 0xF3, 0x0F, 0x27, 0xE1, 0xBD, 0xE9, 0x1A, 0xBD, 0xEE, 0x53, 0xF7, 0x01, 0x56, 0x27, 0xD6, 0x37, 0xCC, 0x01, 0x57, 0xDD, 0xBF, 0x33, 0x7E, 0xF7, 0xB2, 0x81, 0xA9, 0x26, 0x03, 0x7E, 0xFD, 0xB1, 0x81, 0x4D, 0x26, 0x03, 0x7E, 0xFE, 0x06, 0x4F, 0x8D, 0x22, 0xBD, 0xE3, 0xCF, 0x73, 0x01, 0x6E, 0xFC, 0x01, 0x6C, 0xD3, 0x93, 0xBD, 0xE2, 0x1E, 0xDE, 0x93, 0xFF, 0x01, 0x78, 0x8D, 0x4E, 0x2A, 0xF9, 0x4F, 0x97, 0x71, 0x97, 0x72, 0x7E, 0xC8, 0x61, 0x7E, 0xE2, 0xEB, 0x36, 0x8D, 0x10, 0x32, 0x7D, 0x01, 0x74, 0x26, 0x37, 0xB1, 0x01, 0x67, 0x27, 0x32, 0xC6, 0x24, 0x7E, 0xE2, 0x38, 0x8D, 0x8F, 0xBD, 0xFE, 0x37, 0x26, 0x03, 0x7E, 0xFF, 0x4E, 0xC6, 0x22, 0x7E, 0xE2, 0x38, 0x8D, 0x28, 0x86, 0x04, 0x8D, 0xD8, 0xFC, 0x01, 0x71, 0xB3, 0x01, 0x6F, 0xB3, 0x01, 0x6C, 0x24, 0x03, 0x7E, 0xE2, 0x36, 0xFE, 0x01, 0x6F, 0xFF, 0x01, 0x78, 0x8D, 0x03, 0x2A, 0xF9, 0x39, 0xBD, 0xFE, 0xB6, 0x26, 0xD7, 0xB6, 0x01, 0x75, 0x27, 0xD2, 0x39, 0xBD, 0x00, 0xEB, 0xC6, 0x01, 0xD7, 0x86, 0xBD, 0xEB, 0x1B, 0x7F, 0x00, 0x86, 0xBD, 0xE9, 0x0E, 0xEC, 0x02, 0xBD, 0xE2, 0x2D, 0xFF, 0x01, 0x71, 0xDE, 0x89, 0xE6, 0x04, 0x58, 0xCB, 0x05, 0x3A, 0xFF, 0x01, 0x6F, 0xBD, 0x00, 0xF3, 0x27, 0xCC, 0x7E, 0xEA, 0x2F, 0xBD, 0x00, 0xEB, 0x86, 0x02, 0x8D, 0x82, 0xCE, 0x00, 0x00, 0xBD, 0x00, 0xF3, 0x27, 0x06, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x4C, 0xDF, 0x89, 0xFC, 0x01, 0x6A, 0xD3, 0x89, 0xFD, 0x01, 0x1F, 0xFC, 0x01, 0x6C, 0xD3, 0x89, 0x37, 0x36, 0x38, 0x20, 0x99, 0xBD, 0xFD, 0xA2, 0x8D, 0x56, 0x26, 0x9D, 0x39, 0x96, 0xE2, 0x4C, 0x26, 0x0A, 0xBD, 0xFB, 0xD4, 0x86, 0x53, 0x8D, 0x3E, 0xBD, 0xE7, 0xB9, 0x8D, 0x62, 0xBA, 0x01, 0x75, 0x26, 0x33, 0x5F, 0x37, 0xCE, 0x01, 0x5F, 0x3A, 0xA6, 0x00, 0xDE, 0xE2, 0x08, 0x26, 0x02, 0x8D, 0x25, 0xCE, 0x01, 0x57, 0x3A, 0xA0, 0x00, 0x30, 0xAA, 0x00, 0xA7, 0x00, 0x5C, 0xC1, 0x08, 0x26, 0xE3, 0x32, 0x4D, 0x27, 0x0B, 0x7D, 0x01, 0x56, 0x27, 0x06, 0x8D, 0x10, 0x26, 0x07, 0x20, 0xBC, 0xC6, 0x46, 0x8D, 0x22, 0x4F, 0x39, 0x7F, 0x00, 0xE8, 0x7E, 0xF9, 0xC6, 0xBD, 0xFF, 0x4E, 0x86, 0xFF, 0x16, 0x8D, 0x2A, 0x26, 0x07, 0xB6, 0x01, 0x75, 0x40, 0x2B, 0xF3, 0x4A, 0xB7, 0x01, 0x7B, 0x39, 0xBD, 0xE0, 0x67, 0xC8, 0x40, 0x96, 0xE2, 0x4C, 0x26, 0x03, 0xBD, 0xE0, 0x6C, 0x39, 0xBD, 0xFF, 0x4E, 0xCE, 0x01, 0x5F, 0xFF, 0x01, 0x78, 0x86, 0x0F, 0x8C, 0x86, 0xFF, 0x5F, 0x36, 0xF7, 0x01, 0x73, 0x01, 0x0F, 0x8D, 0xDB, 0xFE, 0x01, 0x78, 0x4F, 0x8D, 0x5B, 0x46, 0x81, 0x3C, 0x26, 0xF9, 0x8D, 0x46, 0xB7, 0x01, 0x75, 0x8D, 0x41, 0xB7, 0x01, 0x76, 0x33, 0x11, 0x22, 0x31, 0xBB, 0x01, 0x75, 0xB7, 0x01, 0x7A, 0xB6, 0x01, 0x76, 0xB7, 0x01, 0x7B, 0x27, 0x19, 0x8D, 0x2A, 0x7D, 0x01, 0x73, 0x26, 0x07, 0xA7, 0x00, 0xA1, 0x00, 0x26, 0x19, 0x08, 0xBB, 0x01, 0x7A, 0xB7, 0x01, 0x7A, 0x7A, 0x01, 0x7B, 0x26, 0xE7, 0x8D, 0x11, 0xB0, 0x01, 0x7A, 0x27, 0x08, 0x86, 0x01, 0x8C, 0x86, 0x03, 0x8C, 0x86, 0x02, 0xB7, 0x01, 0x7B, 0x39, 0x86, 0x08, 0xB7, 0x01, 0x7C, 0x8D, 0x07, 0x46, 0x7A, 0x01, 0x7C, 0x26, 0xF8, 0x39, 0x8D, 0x08, 0xF6, 0x01, 0x7D, 0x5A, 0xF1, 0x01, 0x2C, 0x39, 0x7F, 0x01, 0x7D, 0x7D, 0x01, 0x7E, 0x26, 0x11, 0x8D, 0x07, 0x26, 0xFC, 0x8D, 0x03, 0x27, 0xFC, 0x39, 0x7C, 0x01, 0x7D, 0xD6, 0x03, 0xC4, 0x10, 0x39, 0x8D, 0xF6, 0x27, 0xFC, 0x8D, 0xF2, 0x26, 0xFC, 0x39, 0x01, 0x0F, 0x7F, 0x01, 0x7C, 0x8D, 0xDF, 0x8D, 0x2D, 0x22, 0x12, 0x8D, 0x22, 0x25, 0x12, 0x7A, 0x01, 0x7C, 0xB6, 0x01, 0x7C, 0x81, 0xA0, 0x26, 0xEC, 0xB7, 0x01, 0x7E, 0x39, 0x8D, 0x10, 0x22, 0xE6, 0x8D, 0x13, 0x25, 0xE6, 0x7C, 0x01, 0x7C, 0xB6, 0x01, 0x7C, 0x80, 0x60, 0x20, 0xE8, 0x7F, 0x01, 0x7D, 0x8D, 0xB6, 0x20, 0x05, 0x7F, 0x01, 0x7D, 0x8D, 0xC0, 0xF6, 0x01, 0x7D, 0xF1, 0x01, 0x2D, 0x22, 0x04, 0xF1, 0x01, 0x2E, 0x39, 0x7F, 0x01, 0x7C, 0x39, 0xBD, 0xEA, 0x2F, 0xBD, 0xEF, 0x0D, 0x5D, 0x26, 0x37, 0x7E, 0xEC, 0x2E, 0x8D, 0xF5, 0x37, 0x8D, 0xEF, 0x32, 0x36, 0x37, 0x07, 0x36, 0x0F, 0x96, 0x5C, 0x01, 0x01, 0xDE, 0x09, 0xD6, 0x08, 0xDF, 0x0B, 0x88, 0x80, 0xB7, 0xBF, 0xFF, 0x30, 0xE6, 0x02, 0x08, 0x08, 0x5C, 0x26, 0xFB, 0xD6, 0x08, 0x58, 0x2A, 0xEE, 0x30, 0x6A, 0x01, 0x26, 0xE3, 0x96, 0x5C, 0xB7, 0xBF, 0xFF, 0x32, 0x38, 0x06, 0x39, 0x45, 0x58, 0xF8, 0x83, 0xF9, 0xC6, 0xFF, 0x4E, 0xFE, 0xB9, 0xFC, 0xC0, 0xFF, 0xAB, 0xFC, 0xB7, 0xEC, 0xE3, 0xEB, 0xC7, 0x00, 0xC9, 0x01, 0x00, 0x01, 0x03, 0x01, 0x06, 0x01, 0x09, 0x01, 0x0C, 0x01, 0x0F, 0x01, 0x12, 0xC0, 0x06];


MC10.prototype = {
    isRunning: false,

    reset: function () {
        this.vdg.reset();
        this.cpu.reset();
    },

    run: function () {
        if (!this.isRunning) {
            this.isRunning = true;
            this.cycleInterval = setInterval(function () {
                this.frame();
            }.bind(this), this.frameTime);
        }
    },

    pause: function () {
        if (this.isRunning) {
            clearInterval(this.cycleInterval);
            this.isRunning = false;
        }
    },

    frame: function () {
        var cpu = this.cpu;
        var breakon = this.clockRate / this.actualFrameRate;
        var cycles = 0;
        while (cycles < breakon) {
            var cnt = cpu.emulate();
            this.cassette.advance(cnt);
            cycles += cnt;
            for (var i = 0; i < cnt; i++) {
                this.vdg.updateAudio();
            }
        }
        this.vdg.paintFrame();
    },

    record: function (autoStop) {
        this.cassette.recordC10(autoStop);  
    },

    save: function (fname) {
        var ab = new ArrayBuffer(0x1000);
        var dv = new Uint8Array(ab);
        var tmp = new ArrayBuffer(255);
        var tmpdv = new Uint8Array(tmp);

        var startAddress = (this.cpu.memory[0x93] << 8) + this.cpu.memory[0x94];
        var loadAddress = (this.cpu.memory[0x93] << 8) + this.cpu.memory[0x94];
        var endAddress = (this.cpu.memory[0x95] << 8) + this.cpu.memory[0x96];

        var idx = 0;

        // write leader
        for (var i = 0; i < 128; i++) {
            dv[idx++] = 0x55;
        }
        dv[idx++] = 0x3c;

        dv[idx++] = 0x00; // block type
        dv[idx++] = 0x0f; // data length

        var checksum = 0x0f
        checksum += 0x00;

        fname = fname.toUpperCase();
        // write filename
        for (var i = 0; i < 8; i++) {
            if (i >= fname.length) {
                dv[idx++] = 0x00;
            } else {
                dv[idx++] = fname.charCodeAt(i);
            }
            checksum += dv[idx - 1];
        }
        dv[idx++] = 0x00; // BASIC file type
        checksum += dv[idx - 1];
        dv[idx++] = 0x00; // BINARY data mode
        checksum += dv[idx - 1];
        dv[idx++] = 0x00; // CONTINUOUS gap flag
        checksum += dv[idx - 1];
        dv[idx++] = startAddress >> 8; // start address
        checksum += dv[idx - 1];
        dv[idx++] = startAddress & 0xff;
        checksum += dv[idx - 1];
        dv[idx++] = loadAddress >> 8; // load address
        checksum += dv[idx - 1];
        dv[idx++] = loadAddress & 0xff;
        checksum += dv[idx - 1];
        dv[idx++] = checksum & 0xff;

        // write leader
        for (var i = 0; i < 128; i++) {
            dv[idx++] = 0x55;
        }

        // write data
        var cnt = 0;
        var pos = startAddress;
        while (pos < endAddress) {
            tmpdv[cnt++] = this.cpu.memory[pos++];
            if (cnt == 255) {
                cnt = 0;
                dv[idx++] = 0x55;
                dv[idx++] = 0x3c;
                dv[idx++] = 0x01;
                checksum = 0x01;
                dv[idx++] = 0xff;
                checksum += dv[idx - 1];
                for (var i = 0; i < 255; i++) {
                    dv[idx++] = tmpdv[i];
                    checksum += dv[idx - 1];
                }
                dv[idx++] = checksum;
                dv[idx++] = 0x55;
            }
        }
        dv[idx++] = 0x55;
        dv[idx++] = 0x3c;
        dv[idx++] = 0x01;
        checksum = 0x01;
        dv[idx++] = cnt;
        checksum += cnt;
        for (var i = 0; i < cnt; i++) {
            dv[idx++] = tmpdv[i];
            checksum += tmpdv[i];
        }
        dv[idx++] = checksum & 0xff;
        dv[idx++] = 0x55;

        // write EOF
        dv[idx++] = 0x55;
        dv[idx++] = 0x55;
        dv[idx++] = 0x3c;
        dv[idx++] = 0xff;
        dv[idx++] = 0x00;
        dv[idx++] = 0xff;
        dv[idx++] = 0xff;

        return ab;
    },

    load: function (buffer) {
        var dv = new Uint8Array(buffer);

        var idx = 0;

        idx = this.readLeader(dv, idx);
        if (idx == -1) {
            return;
        }
        var fi = this.readFileName(dv, idx);
        if (fi == -1) {
            return;
        }
        idx = fi.idx;

        if (fi.fileType != 0) { //set the start and load addresses in memory
            this.cpu.memory[0x426a] = (fi.startAddress >> 8);
            this.cpu.memory[0x426b] = (fi.startAddress & 0xff);
            this.cpu.memory[0x426c] = (fi.loadAddress >> 8);
            this.cpu.memory[0x426d] = (fi.loadAddress & 0xff);
            console.debug("EXEC ADDR: " + fi.startAddress);
            this.cpu.memory[0x421F] = (fi.startAddress >> 8);
            this.cpu.memory[0x4220] = (fi.startAddress & 0xff);
        } else if (fi.fileType == 0) { //if we're loading a basic program, we need to fudge the start and load addresses
            fi.loadAddress = (this.cpu.memory[0x93]<<8) + this.cpu.memory[0x94];
        }

        idx = this.readLeader(dv, idx);
        if (idx == -1) {
            return;
        }

        var len = 0;
        while (1) {
            var dataBlock = this.readDataBlock(dv, idx, fi.loadAddress + len);
            if (dataBlock == -1) {
                return;
            }
            if (dataBlock == -2) {
                break;
            }
            len += dataBlock.len;
            idx = dataBlock.idx;
            idx = this.readLeader(dv, idx);
            if (idx == -1) {
                return;
            }
        }

        //update other basic areas if need be..
        //NOTE: totalBytes MIGHT BE OFF BY ONE
        if (fi.fileType == 0) {
            len += (this.cpu.memory[0x93]<<8) + this.cpu.memory[0x94];
            this.cpu.memory[0x95] = len >> 8;
            this.cpu.memory[0x96] = len & 0xff;
        }

        idx = this.readEOF(dv, idx);
        if (idx == -1) {
            return;
        }
    },

    readEOF: function (dv, idx) {
        var b = dv[idx++];
        if (b != 0x3c) {
            console.debug("invalid cassette file");
            return -1;
        }

        b = dv[idx++];
        if (b != 0xff) {
            console.debug("invalid cassette file");
            return -1;
        }
        b = dv[idx++];
        if (b != 0x00) {
            console.debug("invalid cassette file");
            return -1;
        }
        b = dv[idx++];
        if (b != 0xff) {
            console.debug("invalid cassette file");
            return -1;
        }

        return idx;
    },

    readLeader: function (dv, idx) {
        var b = 0x55;
        while (idx < dv.buffer.byteLength && b == 0x55) {
            var b = dv[idx++];
        }
        return idx - 1;
    },

    readDataBlock: function (dv, idx, loadAddress) {
        var b = dv[idx++];
        if (b != 0x3c) {
            console.debug("invalid cassette file");
            return -1;
        }
        var checksum = 0;

        b = dv[idx++];
        if (b == 0xff) { // EOF
            return -2;
        }
        if (b != 0x01) {
            console.debug("invalid cassette file");
            return -1;
        }
        checksum += b;

        var len = dv[idx++];
        checksum += len;
        for (var i = 0; i < len; i++) {
            b = dv[idx++];
            this.cpu.memory[loadAddress++] = b;
            checksum += b;
        }

        b = dv[idx++];
        if (b != (checksum & 0xff)) {
            console.debug("invalid cassette file");
            return -1;
        }
        return { idx: idx, len: len };
    },

    readFileName: function (dv, idx) {
        var b = dv[idx++];
        if (b != 0x3c) {
            console.debug("invalid cassette file");
            return -1;
        }
        if (dv[idx++] != 0x00) {
            console.debug("invalid cassette file");
            return -1;
        }
        if (dv[idx++] != 0x0f) {
            console.debug("invalid cassette file");
            return -1;
        }
        var checksum = 0;

        var fname = "";
        for (var i = 0; i < 8; i++) {
            b = dv[idx++];
            fname += String.fromCharCode(b);
            checksum += b;
        }

        var filetype = dv[idx++];
        checksum += filetype;

        var datatype = dv[idx++];
        checksum += datatype;

        var gapflag = dv[idx++];
        checksum += gapflag;

        var a1 = dv[idx++];
        var a2 = dv[idx++];
        checksum += a1;
        checksum += a2;
        var startAddress = (a1 << 8) + a2;

        a1 = dv[idx++];
        a2 = dv[idx++];
        checksum += a1;
        checksum += a2;
        var loadAddress = (a1 << 8) + a2;

        checksum += 0x0f;

        b = dv[idx++];
        if (b != (checksum & 0xff)) {
            console.debug("invalid cassette file");
            return -1;
        }
        return {
            idx: idx,
            fileType: filetype,
            dataType: datatype,
            gapFlag: gapflag,
            startAddress: startAddress,
            loadAddress: loadAddress,
            fileName: fname
        };
    },

    paste: function (data) {

        //        var start = (this.cpu.memory[0x93] << 8) + this.cpu.memory[0x94];
        //	    var finish = (this.cpu.memory[0x95] << 8) + this.cpu.memory[0x96];

        //        for (var i = 0; i < data.length; i++) {
        //            var addr = start + 4 + i;
        //            if (data[i] == '\n') {
        //                this.cpu.setMemory(addr, 0);
        //                i += 4;
        //            } else {
        //                this.cpu.setMemory(start + 4 + i, data[i].charCodeAt());
        //            }
        //        }
    }
}

MC10.MC6803 = function (mc10) {
    this.mc10 = mc10;

    this.idx = 0;
    this.history = [];

    // Addressing modes
    this.DIRECT = 1;
    this.INDEX = 2;
    this.EXTENDED = 3;
    this.RELATIVE = 4;
    this.IMMEDIATE = 5;
    this.INHERENT = 6;

    this.INT_NONE = 0; // No interrupt required
    this.INT_IRQ = 1; // Standard IRQ interrupt
    this.INT_NMI = 2; // NMI interrupt
    this.WAI_ = 8; // set when WAI is waiting for an interrupt
    this.SLP = 0x10;
    this.IRQ_LINE = 0; // IRQ line number
    this.TIN_LINE = 1; // P20/Tin Input Capture line (eddge sense)
    this.CLEAR_LINE = 0; // clear (a fired, held or pulsed) line
    this.ASSERT_LINE = 1; // assert an interrupt immediately
    this.HOLD_LINE = 2; // hold interrupt line until enable is true
    this.PULSE_LINE = 3; // pulse interrupt line for one instruction

    this.TCSR_OLVL = 0x01;
    this.TCSR_IEDG = 0x02;
    this.TCSR_ETOI = 0x04;
    this.TCSR_EOCI = 0x08;
    this.TCSR_EICI = 0x10;
    this.TCSR_TOF = 0x20;
    this.TCSR_OCF = 0x40;
    this.TCSR_ICF = 0x80;

    this.optable = null;
    this.cycleCount = null;

    this.vdg = null;
    this.memoryBuffer = null;
    this.memory = null;
    this.port1Buffer = null;
    this.port1 = null;
    this.port2Buffer = null;
    this.port2 = null;
    this.memmode = null;
    this.printBuffer = null;
    this.irqState = null;
    this.waiState = null;
    this.nmiState = null;
    this.extraCycles = null;
    this.irq2 = null;
    this.pendingTCSR = null;

    this.F_CARRY = null;
    this.F_OVERFLOW = null;
    this.F_ZERO = null;
    this.F_SIGN = null;
    this.F_INTERRUPT = null;
    this.F_HALFCARRY = null;

    this.REG_ACC = null; // Accumulator
    this.REG_A = null;
    this.REG_B = null;
    this.REG_D = null;
    this.REG_SP = null; // Stack pointer
    this.REG_IP = null; // INDEX pointer
    this.REG_PC = null; // Program counter

    //this.clearTOF = false;
    //this.clearOCF = false;

    this.init();
};

MC10.MC6803.prototype = {

    init: function () {
        this.memoryBuffer = new ArrayBuffer(0xC000);
        this.accumBuffer = new ArrayBuffer(0x02);
        this.memory = new Uint8Array(this.memoryBuffer);
        this.port1Buffer = new ArrayBuffer(8);
        this.port1 = new Uint8Array(this.port1Buffer);
        this.port2Buffer = new ArrayBuffer(8);
        this.port2 = new Uint8Array(this.port2Buffer);
        this.cycleCount = 0;
        this.printBuffer = new Array();
        this.irqState = new Array();
        this.waiState = 0;
        this.nmiState = 0;
        this.extraCycles = 0;
        this.irq2 = 0;
        this.pendingTCSR = 0;

        this.REG_ACC = new Uint8Array(this.accumBuffer);
        this.REG_D = new Uint16Array(this.accumBuffer);
        this.REG_B = this.REG_ACC.subarray(0, 1);
        this.REG_A = this.REG_ACC.subarray(1, 2);

        for (var i = 0; i < 0xC000; i++) {
            this.memory[i] = 0x00;
        }
        for (var i = 0; i < 8; i++) {
            this.port1[i] = 0xff;
            this.port2[i] = 0xff;
        }

        this.irqState[this.IRQ_LINE] = 0;
        this.irqState[this.TIN_LINE] = 0;

        this.F_CARRY = 0;
        this.F_OVERFLOW = 0;
        this.F_ZERO = 0;
        this.F_SIGN = 0;
        this.F_INTERRUPT = 0;
        this.F_HALFCARRY = 0;

        this.REG_D[0] = 0;
        this.REG_SP = 0;
        this.REG_IP = 0;

        this.inittable();

        this.reset();
    },

    reset: function () {
        this.REG_PC = (this.fetchMemory(0xfffe) << 8) + this.fetchMemory(0xffff);

        this.SEI(); // IRQ disabled

        this.memory[0x0b] = 0xff; // output compare register defaults
        this.memory[0x0c] = 0xff;
        this.memory[0x11] = 0x20; // transmit control status registers

        this.waiState = 0;
        this.nmiState = 0;
        this.irqState[this.IRQ_LINE] = 0;
        this.irqState[this.TIN_LINE] = 0;
        this.irq2 = 0;
        this.pendingTCSR = 0;
        this.cycleCount = 0;
    },

    emulate: function () {
        var lastpc = this.REG_PC;

        if ((this.waiState & this.WAI_) != 0) {
            console.debug("IN WAI");
            this.cycleCount = (this.cycleCount + 1) & 0xffff;
            this.checkTimer();
            return 1;
        }

        //        if (this.REG_PC>=0x6ff3 & this.REG_PC<=0x7032) {
        //            this.disassemble(this.REG_PC);
        //        }

        var opcode = this.fetchOpCode();

        if (this.mc10.cassette.patchROM) {
            if (lastpc == 0xff22) {
                this.F_CARRY = this.mc10.cassette.getC10bit();
                opcode = 0x39;
            } else if (lastpc > 0xff2c && lastpc <= 0xff98) {
                opcode = 0x39;
            } else if (lastpc == 0xfd03 && this.mc10.cassette.recording) {
                this.mc10.cassette.recordC10byte(this.REG_A);
                opcode = 0x39;
            } else if (lastpc == 0xfc8a && this.mc10.cassette.recording) {
                this.mc10.cassette.saveRecord();
                opcode = 0x39;
            }
        }

        if (opcode in this.optable) {
            var cycles = this.optable[opcode]();

            for (var i = 0; i < cycles; i++) {
                this.cycleCount = (this.cycleCount + 1) & 0xffff;
                this.checkTimer();
            }

            //var cc = this.flagsToVariable();
            //this.history.push({ OP: opcode.toString(16), last_PC: lastpc, PC: this.REG_PC, D: this.REG_D[0], X: this.REG_IP, S: this.REG_SP, CC: cc });
            //this.idx++;

            this.cycleCount += this.extraCycles;
            this.extraCycles = 0;

            return cycles;
        }
        //this.checkIRQLines();

        console.debug("unknown opcode: " + opcode);
    },

    checkTimer: function () {
        // TODO: input capture interrupt

        /*
         * Output compare
         */
        if (this.cycleCount == (this.memory[0x0b] << 8) + (this.memory[0x0c] & 0xff)) {
            this.memory[0x08] |= this.TCSR_OCF; // set OCF (output compare flag)
            this.pendingTCSR |= this.TCSR_OCF;
            this.modifiedTCSR();
            if (this.F_INTERRUPT == 0 && ((this.memory[0x08] & this.TCSR_EOCI) != 0)) {
                this.takeOCI();
            }
        }
        /*
         * Timer overflow
         */
        if (this.cycleCount == 0xffff) {
            this.memory[0x08] |= this.TCSR_TOF; // set TOF (timer overflow flag)
            this.pendingTCSR |= this.TCSR_TOF;
            this.modifiedTCSR();
            if (this.F_INTERRUPT == 0 && ((this.memory[0x08] & this.TCSR_ETOI) != 0)) {
                this.takeTOI();
            }
        }
    },

    interrupt: function (vector) {
        if ((this.waiState & (this.WAI_ | this.SLP)) != 0) {
            if ((this.waiState & this.WAI_) != 0) {
                this.extraCycles += 4;
            }
            this.waiState &= ~(this.WAI_ | this.SLP);
        } else {
            this.pushStack16(this.REG_PC);
            this.pushStack16(this.REG_IP);
            this.pushStack(this.REG_A[0]);
            this.pushStack(this.REG_B[0]);
            this.pushStack(this.flagsToVariable());
            this.extraCycles += 12;
        }
        this.SEI();

        this.REG_PC = vector;
        this.REG_PC &= 0xffff;
    },

    //checkIRQLines: function () {
    //    if (this.F_INTERRUPT == 0) {
    //        if (this.irqState[this.IRQ_LINE] != this.CLEAR_LINE) {
    //            this.interrupt(0xfff8);
    //        } else {
    //            this.checkIRQ2();
    //        }
    //    }
    //},

    //checkIRQ2: function () {
    //    //if ((this.irq2 & this.TCSR_ICF) != 0) {
    //    //    this.takeICI();
    //    //} else if ((this.irq2 & this.TCSR_OCF) != 0) {
    //    //    this.takeOCI();
    //    //} else if ((this.irq2 & this.TCSR_TOF) != 0) {
    //    //    this.takeTOI();
    //    //}
    //},

    takeICI: function () {
        this.interrupt(0x4209);
    },

    takeOCI: function () {
        this.interrupt(0x4206);
    },

    takeTOI: function () {
        this.interrupt(0x4203);
    },

    takeSCI: function () {
        this.interrupt(0x4200);
    },

    takeTRAP: function () {
        this.interrupt(0xF72E);
    },

    modifiedTCSR: function () {
        //this.irq2 = (this.memory[0x08] & (this.memory[0x08] << 3)) & (this.TCSR_ICF | this.TCSR_OCF | this.TCSR_TOF);
        this.irq2 = (this.memory[0x08] & (this.TCSR_ICF | this.TCSR_OCF | this.TCSR_TOF));
    },

    inittable: function () {
        var self = this;

        this.optable = {};

        //ABA
        this.optable[0x1b] = function () { self.memmode = self.INHERENT; self.ABA(); return 2; };

        //ABX
        this.optable[0x3a] = function () { self.memmode = self.INHERENT; self.ABX(); return 3 };

        //ADCA
        this.optable[0x89] = function () { self.memmode = self.IMMEDIATE; self.ADCA(); return 2; };
        this.optable[0x99] = function () { self.memmode = self.DIRECT; self.ADCA(); return 3; };
        this.optable[0xa9] = function () { self.memmode = self.INDEX; self.ADCA(); return 4; };
        this.optable[0xb9] = function () { self.memmode = self.EXTENDED; self.ADCA(); return 4; };

        //ADCB 
        this.optable[0xc9] = function () { self.memmode = self.IMMEDIATE; self.ADCB(); return 2; };
        this.optable[0xd9] = function () { self.memmode = self.DIRECT; self.ADCB(); return 3; };
        this.optable[0xe9] = function () { self.memmode = self.INDEX; self.ADCB(); return 4; };
        this.optable[0xf9] = function () { self.memmode = self.EXTENDED; self.ADCB(); return 4; };

        //ADDA 
        this.optable[0x8b] = function () { self.memmode = self.IMMEDIATE; self.ADDA(); return 2; };
        this.optable[0x9b] = function () { self.memmode = self.DIRECT; self.ADDA(); return 3; };
        this.optable[0xab] = function () { self.memmode = self.INDEX; self.ADDA(); return 4; };
        this.optable[0xbb] = function () { self.memmode = self.EXTENDED; self.ADDA(); return 4; };

        //ADDB 
        this.optable[0xcb] = function () { self.memmode = self.IMMEDIATE; self.ADDB(); return 2; };
        this.optable[0xdb] = function () { self.memmode = self.DIRECT; self.ADDB(); return 3; };
        this.optable[0xeb] = function () { self.memmode = self.INDEX; self.ADDB(); return 4; };
        this.optable[0xfb] = function () { self.memmode = self.EXTENDED; self.ADDB(); return 4; };

        //ADDD 
        this.optable[0xc3] = function () { self.memmode = self.IMMEDIATE; self.ADDD(); return 4; };
        this.optable[0xd3] = function () { self.memmode = self.DIRECT; self.ADDD(); return 5; };
        this.optable[0xe3] = function () { self.memmode = self.INDEX; self.ADDD(); return 6; };
        this.optable[0xf3] = function () { self.memmode = self.EXTENDED; self.ADDD(); return 6; };

        //ANDA 
        this.optable[0x84] = function () { self.memmode = self.IMMEDIATE; self.ANDA(); return 2; };
        this.optable[0x94] = function () { self.memmode = self.DIRECT; self.ANDA(); return 3; };
        this.optable[0xa4] = function () { self.memmode = self.INDEX; self.ANDA(); return 4; };
        this.optable[0xb4] = function () { self.memmode = self.EXTENDED; self.ANDA(); return 4; };

        //ANDB 
        this.optable[0xc4] = function () { self.memmode = self.IMMEDIATE; self.ANDB(); return 2; };
        this.optable[0xd4] = function () { self.memmode = self.DIRECT; self.ANDB(); return 3; };
        this.optable[0xe4] = function () { self.memmode = self.INDEX; self.ANDB(); return 4; };
        this.optable[0xf4] = function () { self.memmode = self.EXTENDED; self.ANDB(); return 4; };

        //ASL 
        this.optable[0x68] = function () { self.memmode = self.INDEX; self.ASL(); return 6; };
        this.optable[0x78] = function () { self.memmode = self.EXTENDED; self.ASL(); return 6; };

        //ASLA 
        this.optable[0x48] = function () { self.memmode = self.INHERENT; self.ASLA(); return 2; };

        //ASLB 
        this.optable[0x58] = function () { self.memmode = self.INHERENT; self.ASLB(); return 2; };

        //ASLD 
        this.optable[0x05] = function () { self.memmode = self.INHERENT; self.ASLD(); return 3; };

        //ASR 
        this.optable[0x67] = function () { self.memmode = self.INDEX; self.ASR(); return 6; };
        this.optable[0x77] = function () { self.memmode = self.EXTENDED; self.ASR(); return 6; };

        //ASRA 
        this.optable[0x47] = function () { self.memmode = self.INHERENT; self.ASRA(); return 2; };

        //ASRB 
        this.optable[0x57] = function () { self.memmode = self.INHERENT; self.ASRB(); return 2; };

        //BRA 
        this.optable[0x20] = function () { self.memmode = self.RELATIVE; self.BRA(); return 3; };

        //BRN 
        this.optable[0x21] = function () { self.memmode = self.RELATIVE; self.BRN(); return 3; };

        //BCC 
        this.optable[0x24] = function () { self.memmode = self.RELATIVE; self.BCC(); return 3; };

        //BCS 
        this.optable[0x25] = function () { self.memmode = self.RELATIVE; self.BCS(); return 3; };

        //BEQ	
        this.optable[0x27] = function () { self.memmode = self.RELATIVE; self.BEQ(); return 3; };

        //BGE	
        this.optable[0x2c] = function () { self.memmode = self.RELATIVE; self.BGE(); return 3; };

        //BGT	
        this.optable[0x2e] = function () { self.memmode = self.RELATIVE; self.BGT(); return 3; };

        //BHI	
        this.optable[0x22] = function () { self.memmode = self.RELATIVE; self.BHI(); return 3; };

        //BLE	
        this.optable[0x2f] = function () { self.memmode = self.RELATIVE; self.BLE(); return 3; };

        //BLS	
        this.optable[0x23] = function () { self.memmode = self.RELATIVE; self.BLS(); return 3; };

        //BLT	
        this.optable[0x2d] = function () { self.memmode = self.RELATIVE; self.BLT(); return 3; };

        //BMI	
        this.optable[0x2b] = function () { self.memmode = self.RELATIVE; self.BMI(); return 3; };

        //BNE	
        this.optable[0x26] = function () { self.memmode = self.RELATIVE; self.BNE(); return 3; };

        //BVC	
        this.optable[0x28] = function () { self.memmode = self.RELATIVE; self.BVC(); return 3; };

        //BVS	
        this.optable[0x29] = function () { self.memmode = self.RELATIVE; self.BVS(); return 3; };

        //BPL	
        this.optable[0x2a] = function () { self.memmode = self.RELATIVE; self.BPL(); return 3; };

        //BSR	
        this.optable[0x8d] = function () { self.memmode = self.RELATIVE; self.BSR(); return 6; };

        //BITA	
        this.optable[0x85] = function () { self.memmode = self.IMMEDIATE; self.BITA(); return 2; };
        this.optable[0x95] = function () { self.memmode = self.DIRECT; self.BITA(); return 3; };
        this.optable[0xa5] = function () { self.memmode = self.INDEX; self.BITA(); return 4; };
        this.optable[0xb5] = function () { self.memmode = self.EXTENDED; self.BITA(); return 4; };

        //BITB	
        this.optable[0xc5] = function () { self.memmode = self.IMMEDIATE; self.BITB(); return 2; };
        this.optable[0xd5] = function () { self.memmode = self.DIRECT; self.BITB(); return 3; };
        this.optable[0xe5] = function () { self.memmode = self.INDEX; self.BITB(); return 4; };
        this.optable[0xf5] = function () { self.memmode = self.EXTENDED; self.BITB(); return 4; };

        //CBA	
        this.optable[0x11] = function () { self.memmode = self.INHERENT; self.CBA(); return 2; };

        //CLC	
        this.optable[0x0c] = function () { self.memmode = self.INHERENT; self.CLC(); return 2; };

        //CLI	
        this.optable[0x0e] = function () { self.memmode = self.INHERENT; self.CLI(); return 2; };

        //CLR	
        this.optable[0x6f] = function () { self.memmode = self.INDEX; self.CLR(); return 6; };
        this.optable[0x7f] = function () { self.memmode = self.EXTENDED; self.CLR(); return 6; };

        //CLRA	
        this.optable[0x4f] = function () { self.memmode = self.INHERENT; self.CLRA(); return 2; };

        //CLRB	
        this.optable[0x5f] = function () { self.memmode = self.INHERENT; self.CLRB(); return 2; };

        //CLV	
        this.optable[0x0a] = function () { self.memmode = self.INHERENT; self.CLV(); return 2; };

        //CMPA	
        this.optable[0x81] = function () { self.memmode = self.IMMEDIATE; self.CMPA(); return 2; };
        this.optable[0x91] = function () { self.memmode = self.DIRECT; self.CMPA(); return 3; };
        this.optable[0xa1] = function () { self.memmode = self.INDEX; self.CMPA(); return 4; };
        this.optable[0xb1] = function () { self.memmode = self.EXTENDED; self.CMPA(); return 4; };

        //CMPB	
        this.optable[0xc1] = function () { self.memmode = self.IMMEDIATE; self.CMPB(); return 2; };
        this.optable[0xd1] = function () { self.memmode = self.DIRECT; self.CMPB(); return 3; };
        this.optable[0xe1] = function () { self.memmode = self.INDEX; self.CMPB(); return 4; };
        this.optable[0xf1] = function () { self.memmode = self.EXTENDED; self.CMPB(); return 4; };

        //COM	
        this.optable[0x63] = function () { self.memmode = self.INDEX; self.COM(); return 6; };
        this.optable[0x73] = function () { self.memmode = self.EXTENDED; self.COM(); return 6; };

        //COMA	
        this.optable[0x43] = function () { self.memmode = self.INHERENT; self.COMA(); return 2; };

        //COMB	
        this.optable[0x53] = function () { self.memmode = self.INHERENT; self.COMB(); return 2; };

        //CPX	
        this.optable[0x8c] = function () { self.memmode = self.IMMEDIATE; self.CPX(); return 4; };
        this.optable[0x9c] = function () { self.memmode = self.DIRECT; self.CPX(); return 5; };
        this.optable[0xac] = function () { self.memmode = self.INDEX; self.CPX(); return 6; };
        this.optable[0xbc] = function () { self.memmode = self.EXTENDED; self.CPX(); return 6; };

        //DAA	
        this.optable[0x19] = function () { self.memmode = self.INHERENT; self.DAA(); return 2; };

        //DEC	
        this.optable[0x6a] = function () { self.memmode = self.INDEX; self.DEC(); return 6; };
        this.optable[0x7a] = function () { self.memmode = self.EXTENDED; self.DEC(); return 6; };

        //DECA	
        this.optable[0x4a] = function () { self.memmode = self.INHERENT; self.DECA(); return 2; };

        //DECB	
        this.optable[0x5a] = function () { self.memmode = self.INHERENT; self.DECB(); return 2; };

        //DES	
        this.optable[0x34] = function () { self.memmode = self.INHERENT; self.DES(); return 3; };

        //DEX	
        this.optable[0x09] = function () { self.memmode = self.INHERENT; self.DEX(); return 3; };

        //EORA	
        this.optable[0x88] = function () { self.memmode = self.IMMEDIATE; self.EORA(); return 2; };
        this.optable[0x98] = function () { self.memmode = self.DIRECT; self.EORA(); return 3; };
        this.optable[0xa8] = function () { self.memmode = self.INDEX; self.EORA(); return 4; };
        this.optable[0xb8] = function () { self.memmode = self.EXTENDED; self.EORA(); return 4; };

        //EORB	
        this.optable[0xc8] = function () { self.memmode = self.IMMEDIATE; self.EORB(); return 2; };
        this.optable[0xd8] = function () { self.memmode = self.DIRECT; self.EORB(); return 3; };
        this.optable[0xe8] = function () { self.memmode = self.INDEX; self.EORB(); return 4; };
        this.optable[0xf8] = function () { self.memmode = self.EXTENDED; self.EORB(); return 4; };

        //INC	
        this.optable[0x6c] = function () { self.memmode = self.INDEX; self.INC(); return 6; };
        this.optable[0x7c] = function () { self.memmode = self.EXTENDED; self.INC(); return 6; };

        //INCA	
        this.optable[0x4c] = function () { self.memmode = self.INHERENT; self.INCA(); return 2; };

        //INCB	
        this.optable[0x5c] = function () { self.memmode = self.INHERENT; self.INCB(); return 2; };

        //INS	
        this.optable[0x31] = function () { self.memmode = self.INHERENT; self.INS(); return 3; };

        //INX	
        this.optable[0x08] = function () { self.memmode = self.INHERENT; self.INX(); return 3; };

        //JMP	
        this.optable[0x6e] = function () { self.memmode = self.INDEX; self.JMP(); return 3; };
        this.optable[0x7e] = function () { self.memmode = self.EXTENDED; self.JMP(); return 3; };

        //JSR	
        this.optable[0x9d] = function () { self.memmode = self.DIRECT; self.JSR(); return 5; };
        this.optable[0xad] = function () { self.memmode = self.INDEX; self.JSR(); return 6; };
        this.optable[0xbd] = function () { self.memmode = self.EXTENDED; self.JSR(); return 6; };

        //LDAA	
        this.optable[0x86] = function () { self.memmode = self.IMMEDIATE; self.LDAA(); return 2; };
        this.optable[0x96] = function () { self.memmode = self.DIRECT; self.LDAA(); return 3; };
        this.optable[0xa6] = function () { self.memmode = self.INDEX; self.LDAA(); return 4; };
        this.optable[0xb6] = function () { self.memmode = self.EXTENDED; self.LDAA(); return 4; };

        //LDAB	
        this.optable[0xc6] = function () { self.memmode = self.IMMEDIATE; self.LDAB(); return 2; };
        this.optable[0xd6] = function () { self.memmode = self.DIRECT; self.LDAB(); return 3; };
        this.optable[0xe6] = function () { self.memmode = self.INDEX; self.LDAB(); return 4; };
        this.optable[0xf6] = function () { self.memmode = self.EXTENDED; self.LDAB(); return 4; };

        //LDD	
        this.optable[0xcc] = function () { self.memmode = self.IMMEDIATE; self.LDD(); return 3; };
        this.optable[0xdc] = function () { self.memmode = self.DIRECT; self.LDD(); return 4; };
        this.optable[0xec] = function () { self.memmode = self.INDEX; self.LDD(); return 5; };
        this.optable[0xfc] = function () { self.memmode = self.EXTENDED; self.LDD(); return 5; };

        //LDS	
        this.optable[0x8e] = function () { self.memmode = self.IMMEDIATE; self.LDS(); return 3; };
        this.optable[0x9e] = function () { self.memmode = self.DIRECT; self.LDS(); return 4; };
        this.optable[0xae] = function () { self.memmode = self.INDEX; self.LDS(); return 5; };
        this.optable[0xbe] = function () { self.memmode = self.EXTENDED; self.LDS(); return 5; };

        //LDX	
        this.optable[0xce] = function () { self.memmode = self.IMMEDIATE; self.LDX(); return 3; };
        this.optable[0xde] = function () { self.memmode = self.DIRECT; self.LDX(); return 4; };
        this.optable[0xee] = function () { self.memmode = self.INDEX; self.LDX(); return 5; };
        this.optable[0xfe] = function () { self.memmode = self.EXTENDED; self.LDX(); return 5; };

        //LSR	
        this.optable[0x64] = function () { self.memmode = self.INDEX; self.LSR(); return 6; };
        this.optable[0x74] = function () { self.memmode = self.EXTENDED; self.LSR(); return 6; };

        //LSRA	
        this.optable[0x44] = function () { self.memmode = self.INHERENT; self.LSRA(); return 2; };

        //LSRB	
        this.optable[0x54] = function () { self.memmode = self.INHERENT; self.LSRB(); return 2; };

        //LSRD	
        this.optable[0x04] = function () { self.memmode = self.INHERENT; self.LSRD(); return 3; };

        //MUL	
        this.optable[0x3d] = function () { self.memmode = self.INHERENT; self.MUL(); return 10; };

        //NEG	
        this.optable[0x60] = function () { self.memmode = self.INDEX; self.NEG(); return 6; };
        this.optable[0x70] = function () { self.memmode = self.EXTENDED; self.NEG(); return 6; };

        //NEGA	
        this.optable[0x40] = function () { self.memmode = self.INHERENT; self.NEGA(); return 2; };

        //NEGB	
        this.optable[0x50] = function () { self.memmode = self.INHERENT; self.NEGB(); return 2; };

        //NGC	
        this.optable[0x62] = function () { self.memmode = self.INDEX; self.NGC(); return 6; };
        this.optable[0x72] = function () { self.memmode = self.EXTENDED; self.NGC(); return 6; };

        //NGCA	
        this.optable[0x42] = function () { self.memmode = self.INHERENT; self.NGCA(); return 2; };

        //NGCB	
        this.optable[0x52] = function () { self.memmode = self.INHERENT; self.NGCB(); return 2; };
        
        //NOP	
        this.optable[0x01] = function () { self.memmode = self.INHERENT; self.NOP(); return 2; };

        //ORAA	
        this.optable[0x8a] = function () { self.memmode = self.IMMEDIATE; self.ORAA(); return 2; };
        this.optable[0x9a] = function () { self.memmode = self.DIRECT; self.ORAA(); return 3; };
        this.optable[0xaa] = function () { self.memmode = self.INDEX; self.ORAA(); return 4; };
        this.optable[0xba] = function () { self.memmode = self.EXTENDED; self.ORAA(); return 4; };

        //ORAB	
        this.optable[0xca] = function () { self.memmode = self.IMMEDIATE; self.ORAB(); return 2; };
        this.optable[0xda] = function () { self.memmode = self.DIRECT; self.ORAB(); return 3; };
        this.optable[0xea] = function () { self.memmode = self.INDEX; self.ORAB(); return 4; };
        this.optable[0xfa] = function () { self.memmode = self.EXTENDED; self.ORAB(); return 4; };

        //PSHA	
        this.optable[0x36] = function () { self.memmode = self.INHERENT; self.PSHA(); return 3; };

        //PSHB	
        this.optable[0x37] = function () { self.memmode = self.INHERENT; self.PSHB(); return 3; };

        //PSHX	
        this.optable[0x3c] = function () { self.memmode = self.INHERENT; self.PSHX(); return 4; };

        //PULA	
        this.optable[0x32] = function () { self.memmode = self.INHERENT; self.PULA(); return 4; };

        //PULB	
        this.optable[0x33] = function () { self.memmode = self.INHERENT; self.PULB(); return 4; };

        //PULX	
        this.optable[0x38] = function () { self.memmode = self.INHERENT; self.PULX(); return 5; };

        //ROL	
        this.optable[0x69] = function () { self.memmode = self.INDEX; self.ROL(); return 6; };
        this.optable[0x79] = function () { self.memmode = self.EXTENDED; self.ROL(); return 6; };

        //ROLA	
        this.optable[0x49] = function () { self.memmode = self.INHERENT; self.ROLA(); return 2; };

        //ROLB	
        this.optable[0x59] = function () { self.memmode = self.INHERENT; self.ROLB(); return 2; };

        //ROR	
        this.optable[0x66] = function () { self.memmode = self.INDEX; self.ROR(); return 6; };
        this.optable[0x76] = function () { self.memmode = self.EXTENDED; self.ROR(); return 6; };

        //RORA	
        this.optable[0x46] = function () { self.memmode = self.INHERENT; self.RORA(); return 2; };

        //RORB	
        this.optable[0x56] = function () { self.memmode = self.INHERENT; self.RORB(); return 2; };

        //RTI	
        this.optable[0x3b] = function () { self.memmode = self.INHERENT; self.RTI(); return 10; };

        //RTS
        this.optable[0x39] = function () { self.memmode = self.INHERENT; self.RTS(); return 5; };

        //SBA
        this.optable[0x10] = function () { self.memmode = self.INHERENT; self.SBA(); return 2; };

        //SBCA
        this.optable[0x82] = function () { self.memmode = self.IMMEDIATE; self.SBCA(); return 2; };
        this.optable[0x92] = function () { self.memmode = self.DIRECT; self.SBCA(); return 3; };
        this.optable[0xa2] = function () { self.memmode = self.INDEX; self.SBCA(); return 4; };
        this.optable[0xb2] = function () { self.memmode = self.EXTENDED; self.SBCA(); return 4; };

        //SBCB
        this.optable[0xc2] = function () { self.memmode = self.IMMEDIATE; self.SBCB(); return 2; };
        this.optable[0xd2] = function () { self.memmode = self.DIRECT; self.SBCB(); return 3; };
        this.optable[0xe2] = function () { self.memmode = self.INDEX; self.SBCB(); return 4; };
        this.optable[0xf2] = function () { self.memmode = self.EXTENDED; self.SBCB(); return 4; };

        //SEC
        this.optable[0x0d] = function () { self.memmode = self.INHERENT; self.SCC(); return 2; };

        //SEI	
        this.optable[0x0f] = function () { self.memmode = self.INHERENT; self.SEI(); return 2; };

        //SEV	
        this.optable[0x0b] = function () { self.memmode = self.INHERENT; self.SEV(); return 2; };

        //STAA	
        this.optable[0x87] = function () { self.memmode = self.IMMEDIATE; self.STAA(); return 3; }; // TEST
        this.optable[0x97] = function () { self.memmode = self.DIRECT; self.STAA(); return 3; };
        this.optable[0xa7] = function () { self.memmode = self.INDEX; self.STAA(); return 4; };
        this.optable[0xb7] = function () { self.memmode = self.EXTENDED; self.STAA(); return 4; };

        //STAB	
        //this.optable[0xc7] = function () { self.memmode = self.IMMEDIATE; self.STAB(); return 3; }; // TEST
        this.optable[0xd7] = function () { self.memmode = self.DIRECT; self.STAB(); return 3; };
        this.optable[0xe7] = function () { self.memmode = self.INDEX; self.STAB(); return 4; };
        this.optable[0xf7] = function () { self.memmode = self.EXTENDED; self.STAB(); return 4; };

        //STD	
        //this.optable[0xcd] = function () { self.memmode = self.IMMEDIATE; self.STD(); return 5; };
        this.optable[0xdd] = function () { self.memmode = self.DIRECT; self.STD(); return 4; };
        this.optable[0xed] = function () { self.memmode = self.INDEX; self.STD(); return 5; };
        this.optable[0xfd] = function () { self.memmode = self.EXTENDED; self.STD(); return 5; };

        //STS	
        //this.optable[0x8f] = function () { self.memmode = self.IMMEDIATE; self.STS(); return 4; }; // TEST
        this.optable[0x9f] = function () { self.memmode = self.DIRECT; self.STS(); return 4; };
        this.optable[0xaf] = function () { self.memmode = self.INDEX; self.STS(); return 5; };
        this.optable[0xbf] = function () { self.memmode = self.EXTENDED; self.STS(); return 5; };

        //STX	
        //this.optable[0xcf] = function () { self.memmode = self.IMMEDIATE; self.STX(); return 4; };
        this.optable[0xdf] = function () { self.memmode = self.DIRECT; self.STX(); return 4; };
        this.optable[0xef] = function () { self.memmode = self.INDEX; self.STX(); return 5; };
        this.optable[0xff] = function () { self.memmode = self.EXTENDED; self.STX(); return 5; };

        //SUBA	
        this.optable[0x80] = function () { self.memmode = self.IMMEDIATE; self.SUBA(); return 2; };
        this.optable[0x90] = function () { self.memmode = self.DIRECT; self.SUBA(); return 3; };
        this.optable[0xa0] = function () { self.memmode = self.INDEX; self.SUBA(); return 4; };
        this.optable[0xb0] = function () { self.memmode = self.EXTENDED; self.SUBA(); return 4; };

        //SUBB	
        this.optable[0xc0] = function () { self.memmode = self.IMMEDIATE; self.SUBB(); return 2; };
        this.optable[0xd0] = function () { self.memmode = self.DIRECT; self.SUBB(); return 3; };
        this.optable[0xe0] = function () { self.memmode = self.INDEX; self.SUBB(); return 4; };
        this.optable[0xf0] = function () { self.memmode = self.EXTENDED; self.SUBB(); return 4; };

        //SUBD	
        this.optable[0x83] = function () { self.memmode = self.IMMEDIATE; self.SUBD(); return 4; };
        this.optable[0x93] = function () { self.memmode = self.DIRECT; self.SUBD(); return 5; };
        this.optable[0xa3] = function () { self.memmode = self.INDEX; self.SUBD(); return 6; };
        this.optable[0xb3] = function () { self.memmode = self.EXTENDED; self.SUBD(); return 6; };

        //SWI	
        this.optable[0x3f] = function () { self.memmode = self.INHERENT; self.SWI(); return 12; };

        //TAB	
        this.optable[0x16] = function () { self.memmode = self.INHERENT; self.TAB(); return 2; };

        //TAP	
        this.optable[0x06] = function () { self.memmode = self.INHERENT; self.TAP(); return 2; };

        //TBA	
        this.optable[0x17] = function () { self.memmode = self.INHERENT; self.TBA(); return 2; };

        //TPA	
        this.optable[0x07] = function () { self.memmode = self.INHERENT; self.TPA(); return 2; };

        //TST	
        this.optable[0x6d] = function () { self.memmode = self.INDEX; self.TST(); return 6; };
        this.optable[0x7d] = function () { self.memmode = self.EXTENDED; self.TST(); return 6; };

        //TSTA	
        this.optable[0x4d] = function () { self.memmode = self.INHERENT; self.TSTA(); return 2; };

        //TSTB	
        this.optable[0x5d] = function () { self.memmode = self.INHERENT; self.TSTB(); return 2; };

        //TSX	
        this.optable[0x30] = function () { self.memmode = self.INHERENT; self.TSX(); return 3; };

        //TXS 
        this.optable[0x35] = function () { self.memmode = self.INHERENT; self.TXS(); return 3; };

        //WAI 
        this.optable[0x3e] = function () { self.memmode = self.INHERENT; self.WAI(); return 9; };


        this.optable[0x00] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x00); return 2; };
        this.optable[0x02] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x02); return 2; };
        this.optable[0x03] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x03); return 2; };
        this.optable[0x12] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x12); return 2; };
        this.optable[0x13] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x13); return 2; };
        this.optable[0x14] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x14); return 2; };
        this.optable[0x15] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x15); return 2; };
        this.optable[0x18] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x18); return 2; };
        this.optable[0x1a] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x1a); return 2; };
        this.optable[0x1c] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x1c); return 2; };
        this.optable[0x1d] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x1d); return 2; };
        this.optable[0x1e] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x1e); return 2; };
        this.optable[0x1f] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x1f); return 2; };
        this.optable[0x41] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x41); return 2; };
        this.optable[0x45] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x45); return 2; };
        this.optable[0x4b] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x4b); return 2; };
        this.optable[0x4e] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x4e); return 2; };
        this.optable[0x51] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x51); return 2; };
        this.optable[0x55] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x55); return 2; };
        this.optable[0x5b] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x5b); return 2; };
        this.optable[0x5e] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x5e); return 2; };
        this.optable[0x61] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x61); return 2; };
        this.optable[0x65] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x65); return 2; };
        this.optable[0x6b] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x6b); return 2; };
        this.optable[0x71] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x71); return 2; };
        this.optable[0x75] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x75); return 2; };
        this.optable[0x7b] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x7b); return 2; };
        this.optable[0x87] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x87); return 2; };
        this.optable[0x8f] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0x8f); return 2; };
        this.optable[0xc7] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0xc7); return 2; };
        this.optable[0xcd] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0xcd); return 2; };
        this.optable[0xcf] = function () { self.memmode = self.IMMEDIATE; self.ERROR(0xcf); return 2; };
    },

    ERROR: function (op) {
        console.debug("ERROR: unknown opcode: " + op);
    },
    ABA: function () {
        this.REG_A[0] = this.add(this.REG_A[0], this.REG_B[0]);
    },
    ABX: function () {
        this.REG_IP += this.REG_B[0];
        this.REG_IP &= 0xffff;
    },
    ADCA: function () {
        this.REG_A[0] = this.addCarry(this.REG_A[0], this.fetchData());
    },
    ADCB: function () {
        this.REG_B[0] = this.addCarry(this.REG_B[0], this.fetchData());
    },
    ADDA: function () {
        this.REG_A[0] = this.add(this.REG_A[0], this.fetchData());
    },
    ADDB: function () {
        this.REG_B[0] = this.add(this.REG_B[0], this.fetchData());
    },
    ADDD: function () {
        this.REG_D[0] = this.add16(this.REG_D[0], this.fetchData16());
    },
    ANDA: function () {
        this.REG_A[0] = this.and(this.REG_A[0], this.fetchData());
    },
    ANDB: function () {
        this.REG_B[0] = this.and(this.REG_B[0], this.fetchData());
    },
    ASL: function () {
        var scratch = this.arithmeticShiftLeft(this.fetchData());
        this.setLastRead(scratch);
    },
    ASLA: function () {
        this.REG_A[0] = this.arithmeticShiftLeft(this.REG_A[0]);
    },
    ASLB: function () {
        this.REG_B[0] = this.arithmeticShiftLeft(this.REG_B[0]);
    },
    ASLD: function () {
        this.REG_D[0] = this.shiftLeft16(this.REG_D[0]);
    },
    ASR: function () {
        var scratch = this.arithmeticShiftRight(this.fetchData());
        this.setLastRead(scratch);
    },
    ASRA: function () {
        this.REG_A[0] = this.arithmeticShiftRight(this.REG_A[0]);
    },
    ASRB: function () {
        this.REG_B[0] = this.arithmeticShiftRight(this.REG_B[0]);
    },
    BRA: function () {
        var pos = this.signExtend(this.fetchData());
        this.REG_PC += pos;
        this.REG_PC &= 0xffff;
    },
    BRN: function () {
        this.fetchData();
    },
    BCC: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_CARRY == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BCS: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_CARRY == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BEQ: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_ZERO == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BGE: function () {
        var pos = this.signExtend(this.fetchData());
        if ((this.F_SIGN ^ this.F_OVERFLOW) == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BGT: function () {
        var pos = this.signExtend(this.fetchData());
        if ((this.F_ZERO | (this.F_SIGN ^ this.F_OVERFLOW)) == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BHI: function () {
        var pos = this.signExtend(this.fetchData());
        if ((this.F_CARRY | this.F_ZERO) == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BLE: function () {
        var pos = this.signExtend(this.fetchData());
        if ((this.F_ZERO | (this.F_SIGN ^ this.F_OVERFLOW)) == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BLS: function () {
        var pos = this.signExtend(this.fetchData());
        if ((this.F_CARRY | this.F_ZERO) == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BLT: function () {
        var pos = this.signExtend(this.fetchData());
        if ((this.F_SIGN ^ this.F_OVERFLOW) == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BMI: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_SIGN == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BNE: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_ZERO == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BVC: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_OVERFLOW == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BVS: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_OVERFLOW == 1) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BPL: function () {
        var pos = this.signExtend(this.fetchData());
        if (this.F_SIGN == 0) {
            this.REG_PC += pos;
            this.REG_PC &= 0xffff;
        }
    },
    BSR: function () {
        var pos = this.signExtend(this.fetch());
        this.pushStack16(this.REG_PC);
        this.REG_PC += pos;
        this.REG_PC &= 0xffff;
    },
    BITA: function () {
        this.and(this.REG_A[0], this.fetchData());
    },
    BITB: function () {
        this.and(this.REG_B[0], this.fetchData());
    },
    CBA: function () {
        this.subtract(this.REG_A[0], this.REG_B[0]);
    },
    CLC: function () {
        this.F_CARRY = 0;
    },
    CLI: function () {
        this.F_INTERRUPT = 0;
        //this.emulate();
        //this.checkIRQLines();
    },
    CLR: function () {
        this.setMemory(this.fetchAddress(), 0);
        this.F_ZERO = 1;
        this.F_SIGN = 0;
        this.F_OVERFLOW = 0;
        this.F_CARRY = 0;
    },
    CLRA: function () {
        this.REG_A[0] = 0;
        this.F_SIGN = 0;
        this.F_OVERFLOW = 0;
        this.F_CARRY = 0;
        this.F_ZERO = 1;
    },
    CLRB: function () {
        this.REG_B[0] = 0;
        this.F_SIGN = 0;
        this.F_OVERFLOW = 0;
        this.F_CARRY = 0;
        this.F_ZERO = 1;
    },
    CLV: function () {
        this.F_OVERFLOW = 0;
    },
    CMPA: function () {
        this.subtract(this.REG_A[0], this.fetchData());
    },
    CMPB: function () {
        this.subtract(this.REG_B[0], this.fetchData());
    },
    COM: function () {
        var scratch = this.complement(this.fetchData());
        this.setLastRead(scratch);
    },
    COMA: function () {
        this.REG_A[0] = this.complement(this.REG_A[0]);
    },
    COMB: function () {
        this.REG_B[0] = this.complement(this.REG_B[0]);
    },
    CPX: function () {
        this.subtract16(this.REG_IP, this.fetchData16());
    },
    DAA: function () {
        var msn, lsn, t, cf = 0;

        msn = this.REG_A[0] & 0xf0;
        lsn = this.REG_A[0] & 0x0f;

        if (lsn > 0x09 || this.F_HALFCARRY) cf |= 0x06;
        if (msn > 0x80 && lsn > 0x09) cf |= 0x60;
        if (msn > 0x90 || this.F_CARRY) cf |= 0x60;

        t = cf + this.REG_A[0];

        this.F_ZERO = 0;
        this.F_SIGN = 0;
        this.F_OVERFLOW = 0;

        this.set8NZ(t & 0xffff);
        this.set8C(t & 0xffff);

        this.REG_A[0] = t;
    },
    DEC: function () {
        var scratch = this.decrement(this.fetchData());
        this.setLastRead(scratch);
    },
    DECA: function () {
        this.REG_A[0] = this.decrement(this.REG_A[0]);
    },
    DECB: function () {
        this.REG_B[0] = this.decrement(this.REG_B[0]);
    },
    DES: function () {
        this.REG_SP--;
        this.REG_SP &= 0xffff;
    },
    DEX: function () {
        this.REG_IP--;
        this.REG_IP &= 0xffff;
        this.set16Z(this.REG_IP);
    },
    EORA: function () {
        this.REG_A[0] = this.eor(this.REG_A[0], this.fetchData());
    },
    EORB: function () {
        this.REG_B[0] = this.eor(this.REG_B[0], this.fetchData());
    },
    INC: function () {
        var scratch = this.increment(this.fetchData());
        this.setLastRead(scratch);
    },
    INCA: function () {
        this.REG_A[0] = this.increment(this.REG_A[0]);
    },
    INCB: function () {
        this.REG_B[0] = this.increment(this.REG_B[0]);
    },
    INS: function () {
        this.REG_SP++;
        this.REG_SP &= 0xffff;
    },
    INX: function () {
        this.REG_IP++;
        this.REG_IP &= 0xffff;
        this.set16Z(this.REG_IP);
    },
    JMP: function () {
        var pos;
        if (this.memmode == this.INDEX) {
            pos = this.REG_IP + this.fetch();
        } else {
            pos = this.fetchAddress();
        }
        this.REG_PC = pos;
    },
    JSR: function () {
        var pos = this.fetchAddress();
        this.pushStack16(this.REG_PC);
        this.REG_PC = pos;
    },
    LDAA: function () {
        this.REG_A[0] = this.fetchData();
        this.set8NZ(this.REG_A[0]);
        this.F_OVERFLOW = 0;
    },
    LDAB: function () {
        this.REG_B[0] = this.fetchData();
        this.set8NZ(this.REG_B[0]);
        this.F_OVERFLOW = 0;
    },
    LDD: function () {
        this.REG_D[0] = this.fetchData16();
        this.set16NZ(this.REG_D[0]);
        this.F_OVERFLOW = 0;
    },
    LDS: function () {
        this.REG_SP = this.fetchData16();
        this.set16NZ(this.REG_SP);
        this.F_OVERFLOW = 0;
    },
    LDX: function () {
        var scratch = this.fetchData16();
        this.REG_IP = scratch;
        this.set16NZ(this.REG_IP);
        this.F_OVERFLOW = 0;
    },
    LSR: function () {
        var scratch = this.logicalShiftRight(this.fetchData());
        this.setLastRead(scratch);
    },
    LSRA: function () {
        this.REG_A[0] = this.logicalShiftRight(this.REG_A[0]);
    },
    LSRB: function () {
        this.REG_B[0] = this.logicalShiftRight(this.REG_B[0]);
    },
    LSRD: function () {
        this.REG_D[0] = this.shiftRight16(this.REG_D[0]);
    },
    MUL: function () {
        this.REG_D[0] = (this.REG_A[0] * this.REG_B[0]) & 0xffff;
        if ((this.REG_A[0] * this.REG_B[0]) > 0xffff) {
            this.F_CARRY = 1;
        } else {
            this.F_CARRY = 0;
        }
    },
    NEG: function () {
        var scratch = this.negate(this.fetchData());
        this.setLastRead(scratch);
    },
    NEGA: function () {
        this.REG_A[0] = this.negate(this.REG_A[0]);
    },
    NEGB: function () {
        this.REG_B[0] = this.negate(this.REG_B[0]);
    },
    NGC: function () {
        var scratch = this.negateCarry(this.fetchData());
        this.setLastRead(scratch);
    },
    NGCA: function () {
        this.REG_A[0] = this.negateCarry(this.REG_A[0]);
    },
    NGCB: function () {
        this.REG_B[0] = this.negateCarry(this.REG_B[0]);
    },
    NOP: function () {
    },
    ORAA: function () {
        this.REG_A[0] = this.or(this.REG_A[0], this.fetchData());
    },
    ORAB: function () {
        this.REG_B[0] = this.or(this.REG_B[0], this.fetchData());
    },
    PSHA: function () {
        this.pushStack(this.REG_A[0]);
    },
    PSHB: function () {
        this.pushStack(this.REG_B[0]);
    },
    PSHX: function () {
        this.pushStack16(this.REG_IP);
    },
    PULA: function () {
        this.REG_A[0] = this.popStack();
    },
    PULB: function () {
        this.REG_B[0] = this.popStack();
    },
    PULX: function () {
        this.REG_IP = this.popStack16();
    },
    ROL: function () {
        var scratch = this.rotateLeft(this.fetchData());
        this.setLastRead(scratch);
    },
    ROLA: function () {
        this.REG_A[0] = this.rotateLeft(this.REG_A[0]);
    },
    ROLB: function () {
        this.REG_B[0] = this.rotateLeft(this.REG_B[0]);
    },
    ROR: function () {
        var scratch = this.rotateRight(this.fetchData());
        this.setLastRead(scratch);
    },
    RORA: function () {
        this.REG_A[0] = this.rotateRight(this.REG_A[0]);
    },
    RORB: function () {
        this.REG_B[0] = this.rotateRight(this.REG_B[0]);
    },
    RTI: function () {
        this.variableToFlags(this.popStack());
        this.REG_B[0] = this.popStack();
        this.REG_A[0] = this.popStack();
        this.REG_IP = this.popStack16();
        this.REG_PC = this.popStack16();
        //this.checkIRQLines();
    },
    RTS: function () {
        this.REG_PC = this.popStack16();
    },
    SBA: function () {
        this.REG_A[0] = this.subtract(this.REG_A[0], this.REG_B[0]);
    },
    SBCA: function () {
        this.REG_A[0] = this.subtractCarry(this.REG_A[0], this.fetchData());
    },
    SBCB: function () {
        this.REG_B[0] = this.subtractCarry(this.REG_B[0], this.fetchData());
    },
    SCC: function () {
        this.F_CARRY = 1;
    },
    SEI: function () {
        this.F_INTERRUPT = 1;
        //this.emulate();
        //this.history = [];
        //this.checkIRQLines();
    },
    SEV: function () {
        this.F_OVERFLOW = 1;
    },
    STAA: function () {
        this.setMemory(this.fetchAddress(), this.REG_A[0]);
        this.F_OVERFLOW = 0;
        this.set8NZ(this.REG_A[0]);
    },
    STAB: function () {
        this.setMemory(this.fetchAddress(), this.REG_B[0]);
        this.F_OVERFLOW = 0;
        this.set8NZ(this.REG_B[0]);
    },
    STD: function () {
        var scratch = this.fetchAddress();
        this.setMemory16(scratch, this.REG_D[0]);
        this.F_OVERFLOW = 0;
        this.set16NZ(this.REG_D[0]);
    },
    STS: function () {
        var scratch = this.fetchAddress();
        this.setMemory16(scratch, this.REG_SP);
        this.F_OVERFLOW = 0;
        this.set16NZ(this.REG_SP);
    },
    STX: function () {
        var scratch = this.fetchAddress();
        this.setMemory16(scratch, this.REG_IP);
        this.F_OVERFLOW = 0;
        this.set16NZ(this.REG_IP);
    },
    SUBA: function () {
        this.REG_A[0] = this.subtract(this.REG_A[0], this.fetchData());
    },
    SUBB: function () {
        this.REG_B[0] = this.subtract(this.REG_B[0], this.fetchData());
    },
    SUBD: function () {
        this.REG_D[0] = this.subtract16(this.REG_D[0], this.fetchData16());
    },
    SWI: function () {
        console.debug("SWI Called - Exit");

        this.pushStack16(this.REG_PC);
        this.pushStack16(this.REG_IP);
        this.pushStack(this.REG_A[0]);
        this.pushStack(this.REG_B[0]);
        this.pushStack(this.flagsToVariable());

        this.SEI();

        this.REG_PC = this.fetchMemory(0xfffa) & 0xffff;
        this.REG_PC &= 0xffff;

        //                    return;
        //                    this.F_INTERRUPT = 1;
        //                    this.pushStack16(this.REG_PC);
        //                    this.pushStack16(this.REG_IP);
        //                    this.pushStack16(this.REG_A[0]);
        //                    this.pushStack16(this.REG_B[0]);
        //                    this.pushStack16(this.flagsToVariable());
        //                    this.REG_PC = (this.fetchMemory(0xfffa) << 8) + this.fetchMemory(0xfffb);
    },
    TAB: function () {
        this.REG_B[0] = this.REG_A[0];
        this.set8NZ(this.REG_B[0]);
        this.F_OVERFLOW = 0;
    },
    TAP: function () {
        this.variableToFlags(this.REG_A[0]);
        //this.emulate();
        //this.checkIRQLines();
    },
    TBA: function () {
        this.REG_A[0] = this.REG_B[0];
        this.set8NZ(this.REG_A[0]);
        this.F_OVERFLOW = 0;
    },
    TPA: function () {
        this.REG_A[0] = this.flagsToVariable();
    },
    TST: function () {
        this.F_OVERFLOW = 0;
        this.F_CARRY = 0;
        this.set8NZ(this.fetchData());
    },
    TSTA: function () {
        this.F_OVERFLOW = 0;
        this.F_CARRY = 0;
        this.set8NZ(this.REG_A[0]);
    },
    TSTB: function () {
        this.F_OVERFLOW = 0;
        this.F_CARRY = 0;
        this.set8NZ(this.REG_B[0]);
    },
    TSX: function () {
        this.REG_IP = this.REG_SP + 1;
    },
    TXS: function () {
        this.REG_SP = this.REG_IP - 1;
    },
    WAI: function () {
        this.waiState |= this.WAI_;
        this.pushStack16(this.REG_PC);
        this.pushStack16(this.REG_IP);
        this.pushStack(this.REG_A[0]);
        this.pushStack(this.REG_B[0]);
        this.pushStack(this.flagsToVariable());
        //this.checkIRQLines();

        if ((this.waiState & this.WAI_) != 0) {
            console.debug("eat cycles");
            this.cycleCount = (this.cycleCount + 1) & 0xffff;
            this.checkTimer();
        }
        console.debug("WAI called");
    },

    flagsToVariable: function () {
        var ret =
            this.F_CARRY * 0x01 +
            this.F_OVERFLOW * 0x02 +
            this.F_ZERO * 0x04 +
            this.F_SIGN * 0x08 +
            this.F_INTERRUPT * 0x10 +
            this.F_HALFCARRY * 0x20;
        return ret;
    },

    variableToFlags: function (CCR) {
        this.F_CARRY = (CCR & 0x01);
        this.F_OVERFLOW = (CCR & 0x02) >> 1;
        this.F_ZERO = (CCR & 0x04) >> 2;
        this.F_SIGN = (CCR & 0x08) >> 3;
        this.F_INTERRUPT = (CCR & 0x10) >> 4;
        this.F_HALFCARRY = (CCR & 0x20) >> 5;
    },

    fetch: function () {
        var scratch = this.fetchMemory(this.REG_PC);
        this.REG_PC++;
        this.REG_PC &= 0xffff;
        return scratch;
    },

    fetchOpCode: function () {
        return this.fetch();
    },

    fetchMemory: function (address) {
        address &= 0xffff;

        //was it chip or internal ram or external ram?
        if (((address >= 0x0080) && (address <= 0x00ff)) || ((address >= 0x4200) && (address <= this.mc10.maxRam))) {
            return this.memory[address];
        }

        //was it the BASIC ROM?
        if ((address >= 0xe000) && (address <= 0xffff)) {
            return MC10.ROM[address - 0xe000];
        }

        //was it the EXTERNAL ROM EXPANSION?
        //for this we'll just mirror the BASIC ROM..   
        if ((address >= 0xc000) && (address <= 0xdfff)) {
            return MC10.ROM[address - 0xc000];
        }

        //is it the video ram?
        if ((address >= 0x4000) && (address < 0x4200)) {
            return this.memory[address];
        }

        // is it the keybord input?  [partial emulation here, normally read from 0xbfff]
        // - to see this on a real MC-10, POKE 17032,0 will provide a memory dump.
        // - to see this on the emulator, POKE 17032,95
        // pressing the keys affect the video display of reads from 0x9000-0xbfff with 16K RAM.  
        // Note that we haven't completely emulated the return yet.
                
        if (0x9000 <= address && address <= 0xbfff) {
            var enb = this.memory[0x00] & ~this.memory[0x02];
            var ret =
                (enb & 0x01 ? this.port1[0] : 0xff) &
                (enb & 0x02 ? this.port1[1] : 0xff) &
                (enb & 0x04 ? this.port1[2] : 0xff) &
                (enb & 0x08 ? this.port1[3] : 0xff) &
                (enb & 0x10 ? this.port1[4] : 0xff) &
                (enb & 0x20 ? this.port1[5] : 0xff) &
                (enb & 0x40 ? this.port1[6] : 0xff) &
                (enb & 0x80 ? this.port1[7] : 0xff);
            return ret;
        }
        //is it an internal register?
        if (address <= 0x1f) {
            switch (address) {
                case 0x00: //Port 1 Data Direction Register
                case 0x01: //Port 2 Data Direction Register
                    return this.memory[address];

                case 0x02: //Port 1 Data Register (Keyboard Scan Strobe - Columns)
                    return this.memory[address];

                case 0x03: //Port 2 Data Register (Printer/Cassette and Keyboard)
                    {
                        var enb = this.memory[0x01];
                        var ret =
                            (~this.memory[0x02] & 0x01 ? this.port2[0] : 0xff) &
                            (                     0x02 ? this.port2[1] : 0xff) &
                            (~this.memory[0x02] & 0x04 ? this.port2[2] : 0xff) &
                            (                     0x08 ? this.port2[3] : 0xff) &
                            (                     0x10 ? this.port2[4] : 0xff) &
                            (                     0x20 ? this.port2[5] : 0xff) &
                            (                     0x40 ? this.port2[6] : 0xff) &
                            (~this.memory[0x02] & 0x80 ? this.port2[7] : 0xff);
                        return ret;
                    }
                case 0x04: //External Memory
                case 0x05: //External Memory
                case 0x06: //External Memory
                case 0x07: //External Memory
                    return this.memory[address];

                case 0x08: //Timer Control and Status Register (TCSR)
                    //this.clearTOF = this.memory[0x08] & this.TCSR_TOF;
                    //this.clearOCF = this.memory[0x08] & this.TCSR_OCF;
                    this.pendingTCSR = 0;
                    return this.memory[address];

                case 0x09: //Counter (High byte)
                    if ((this.pendingTCSR & this.TCSR_TOF) == 0) {
                        this.memory[0x08] &= ~(this.TCSR_TOF); // clear TOF flag on read
                        this.modifiedTCSR();
                    }
                    return (this.cycleCount >> 8) & 0xff;
                case 0x0a: //Counter (Low byte)
                    return this.cycleCount & 0xff;

                case 0x0b: //Output Compare Register (High byte)
                case 0x0c: //Output Compare Register (Low byte)
                    if (this.pendingTCSR & this.TCSR_OCF) {
                        this.memory[0x08] &= ~(this.TCSR_OCF); // clear OCF flag on read
                        this.modifiedTCSR();
                    }
                    //return (this.cycleCount >> 8) & 0xff;
                    //if (this.pendingTCSR & this.TCSR_OCF) {
                    //    this.memory[0x08] &= ~(this.TCSR_OCF); // clear OCF flag on read
                    //    this.modifiedTCSR();
                    //}
                    //return this.cycleCount & 0xff;
                    return this.memory[address];

                case 0x0d: //Input Capture Register (High byte)
                    if (this.pendingTCSR & this.TCSR_ICF) {
                        this.memory[0x08] &= ~(this.TCSR_ICF); // clear ICF flag on read
                        this.modifiedTCSR();
                    }
                    return this.memory[address];
                case 0x0e: //Input Capture Register (Low byte)
                case 0x0f: //External Memory
                    return this.memory[address];

                case 0x10: //Rate and Mode Control Register
                    break;

                case 0x11: //Transmit/Recieve Control and Status Register
                    return this.memory[address];

                case 0x12: //Recieve Data Register
                    return this.memory[address];

                case 0x13: //Transmit Data Register
                    return this.memory[address];

                case 0x14: //RAM Control Register
                    return this.memory[address];

                default:
                    console.debug("FATAL: Attempted to read to reserved internal register area:" + address);
                    //           printf("(%x) Attempted to read to reserved internal register area %x.\n",optable[0x00]->Program_Counter-1,address);
                    return 0x00;
            }
        }

        // nothing on the bus.  Just let it grab back the address line.
        return 0xff & address;
    },

    fetchAddress: function () {
        switch (this.memmode) {
            case this.DIRECT:
                return this.fetch();
            case this.INDEX:
                return this.fetch() + this.REG_IP;
            case this.EXTENDED:
                return (this.fetch() << 8) + this.fetch();
            default:
                console.debug("Tried FetchAddress with mode" + this.memmode);
                return 0;
        }
    },

    fetchData: function () {
        switch (this.memmode) {
            case this.IMMEDIATE:
            case this.RELATIVE:
                return this.fetch();
            case this.INDEX:
                return this.fetchMemory(this.fetch() + this.REG_IP);
            case this.DIRECT:
                return this.fetchMemory(this.fetch());
            case this.EXTENDED:
                return this.fetchMemory((this.fetch() << 8) + this.fetch());
            default:
                console.debug("Invalid mode in fetchData");
                return 0;
        }
    },

    fetchData16: function () {
        var scratch;
        switch (this.memmode) {
            case this.IMMEDIATE:
                return (this.fetch() << 8) + this.fetch();
            case this.INDEX:
                scratch = this.fetch() + this.REG_IP;
                break;
            case this.DIRECT:
                scratch = this.fetch();
                break;
            case this.EXTENDED:
                scratch = (this.fetch() << 8) + this.fetch();
                break;
            default:
                console.debug("Invalid mode in fetchData16");
                return 0;
        }
        //return ((this.fetchMemory(scratch) << 8) + this.fetchMemory(scratch + 1)) & 0xffff;
        return ((this.fetchMemory(scratch) << 8) + this.fetchMemory(scratch + 1));
    },

    setMemory: function (address, value) {
        address &= 0xffff;
        value &= 0xff;

        //is it video ram?
        if ((address >= 0x4000) && (address < 0x5800)) {
            this.memory[address] = value;
            if (this.mc10.vdg.vramIs4k) {
                if (address < 0x5000) {
                   this.mc10.vdg.updateDisplay(address & 0x0fff, value);
                   if (this.mc10.vdg.graphicsMode == 11 || this.mc10.vdg.graphicsMode == 15) {
                       this.mc10.vdg.updateDisplay(address & 0x0fff | 0x1000, value);
                   }
                }
            } else {
                this.mc10.vdg.updateDisplay(address - 0x4000, value);
            }
            return;
        }

        //is it writable ram?
        //!!!!!!!!!!!!!! < or <= 0x8fff
        if (((address >= 0x0080) && (address < 0x0100)) || ((address >= 0x4200) && (address <= this.mc10.maxRam))) {
            this.memory[address] = value;
            return;
        }

        //is it VDG and SOUND O/P? [normally written to 0xbfff]
        if (address >= 0x9000 && address < 0xc000) {
            if (this.mc10.vdg.updateChip(value)) {
                //redraw entire framebuffer on change of palette or video mode
                if (this.mc10.vdg.vramIs4k) {
                    for (var i = 0; i < 0x1800; i++) {
                        this.mc10.vdg.updateDisplay(i, this.memory[0x4000 + (i & 0x0fff)]);
                    }
                } else {
                    for (var i = 0; i < 0x1800; i++) {
                        this.mc10.vdg.updateDisplay(i, this.memory[0x4000 + i]);
                    }
                }
            }
            return;
        }

        //is it an internal register?
        if (address <= 0x1f) {
            switch (address) {
                case 0x00: //port 1 direction register
                case 0x01: //port 2 direction register
                    this.memory[address] = value;
                    return;

                case 0x02: //port 1 Data Register
                    this.memory[address] = value;
                    return;

                case 0x03: //port 2 Data Register
                    this.memory[address] = value;
                    //
                    // printer emulation (push output to console)
                    //
                    this.printBuffer.push(value & 0x01);
                    var len = this.printBuffer.length;
                    if ((len % 11) == 0) {
                        var char = 0x00;
                        for (var i = 0; i < 8; i++) {
                            char |= (this.printBuffer[len - 9 + i] ? 1 << i : 0);
                        }
                        console.log(String.fromCharCode(char));
                    }
                    clearTimeout(this.idleTimer);
                    var self = this;
                    this.idleTimer = setTimeout(function () {
                        self.printBuffer = [];
                    }, 100); // idle timer
                    return;

                case 0x04: //external memory
                case 0x05:
                case 0x06:
                case 0x07:
                    this.memory[address] = value;
                    return;

                case 0x08: //timer control register
                    //   if (value > 31) //only bits 0-4 are writable
                    //       break;
                    this.memory[0x08] = (this.memory[0x08] & 0xe0) + (value & 0x1f);
                    this.pendingTCSR &= this.memory[0x08];
                    this.modifiedTCSR();
                    if (this.F_INTERRUPT == 0) {
                        //                        this.checkIRQ2();
                    }
                    return;

                case 0x09: //preset timer counter on write
                    this.cycleCount = (0xfff8);
                case 0x0a:
                    return;

                case 0x0b: //output compare register
                case 0x0c:
                    //if (this.clearOCF) {
                    //    this.memory[0x08] &= ~(0x40); // clear OCF flag on read
                    //    this.clearOCF = false;
                    //}
                    if ((this.pendingTCSR & this.TCSR_OCF) == 0) {
                        this.memory[0x08] &= ~this.TCSR_OCF;
                    }

                    this.memory[address] = value;
                    return;

                case 0x0d: //input capture register (readonly)
                case 0x0e:
                    break;

                case 0x0f: //external memory
                    this.memory[0x0f] = value;
                    return;

                case 0x10:
                case 0x11:
                case 0x12:
                case 0x13:
                case 0x14:

                default:
                    console.debug("Attempted to write to reserved internal register area." + address);
            }
        }
    },

    setMemory16: function (address, value) {
        address &= 0xffff;
        value &= 0xffff;
        this.setMemory(address, value >> 8);
        this.setMemory(address + 1, value & 0xff);
    },

    setLastRead: function (value) {
        value &= 0xff;
        var position;
        switch (this.memmode) {
            case this.DIRECT:
                position = this.fetchMemory(this.REG_PC - 1);
                break;
            case this.INDEX:
                position = this.fetchMemory(this.REG_PC - 1) + this.REG_IP;
                break;
            case this.EXTENDED:
                position = (this.fetchMemory(this.REG_PC - 2) << 8) + this.fetchMemory(this.REG_PC - 1);
                break;
            default:
                console.debug("Tried to set last read with mode " + this.memmode);
                position = 0;
        }
        this.setMemory(position, value);
    },

    pushStack: function (value) {
        this.setMemory(this.REG_SP, value);
        this.REG_SP--;
        this.REG_SP &= 0xffff;
    },

    pushStack16: function (value) {
        this.setMemory16(this.REG_SP - 1, value);
        this.REG_SP -= 2;
        this.REG_SP &= 0xffff;
    },

    popStack: function () {
        this.REG_SP++;
        this.REG_SP &= 0xffff;
        return this.fetchMemory(this.REG_SP);
    },

    popStack16: function () {
        this.REG_SP += 2;
        this.REG_SP &= 0xffff;
        return this.fetchMemory(this.REG_SP) + (this.fetchMemory(this.REG_SP - 1) << 8);
    },

    add: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var scratch = first + second;
        this.set8HNZVC(first, second, (scratch & 0xffff));
        return (scratch & 0xff);
    },

    addCarry: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var scratch = first + second + this.F_CARRY;
        this.set8HNZVC(first, second, (scratch & 0xffff));
        return (scratch & 0xff);
    },

    add16: function (first, second) {
        first &= 0xffff;
        second &= 0xffff;
        var scratch = first + second;
        this.set16NZVC(first, second, (scratch & 0xffffffff));
        return (scratch & 0xffff);
    },

    subtract: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var scratch = first - second;
        this.set8NZVC(first, second, (scratch & 0xffff));
        return (scratch & 0xff);
    },

    subtract16: function (first, second) {
        first &= 0xffff;
        second &= 0xffff;
        var scratch = first - second;
        this.set16NZVC(first, second, (scratch & 0xffffffff));
        return (scratch & 0xffff);
    },

    subtractCarry: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var scratch = first - second - this.F_CARRY;
        this.set8NZVC(first, second, (scratch & 0xffff));
        return (scratch & 0xff);
    },

    and: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var result = first & second;
        this.set8NZ(result & 0xff);
        this.F_OVERFLOW = 0;
        //this.F_CARRY = 0; // Why do you carry with and? surely 0xff & 0xff is just 0xff.... (no carry?)
        return (result & 0xff);
    },

    complement: function (first) {
        first &= 0xff;
        var result = first ^ 0xff;
        this.set8NZ(result & 0xff);
        this.F_OVERFLOW = 0;
        this.F_CARRY = 1;
        return (result & 0xff);
    },

    eor: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var result = first ^ second;
        this.set8NZ(result & 0xff);
        this.F_OVERFLOW = 0;
        return (result & 0xff);
    },

    negate: function (first) {
        return this.subtract(0,first);
    },

    negateCarry: function (first) {
        return this.subtractCarry(0,first);
    },

    or: function (first, second) {
        first &= 0xff;
        second &= 0xff;
        var result = first | second;
        this.set8NZ(result & 0xff);
        this.F_OVERFLOW = 0;
        return (result & 0xff);
    },

    decrement: function (first) {
        first &= 0xff;
        this.F_OVERFLOW = (first == 0x80) ? 1 : 0;
        var result = (first - 1) & 0xff;
        this.set8NZ(result);
        return (result);
    },

    increment: function (first) {
        first &= 0xff;
        this.F_OVERFLOW = (first == 0x7f) ? 1 : 0;
        var result = (first + 1) & 0xff;
        this.set8NZ(result);
        return (result);
    },

    shiftLeft: function (first, mode) {
        first &= 0xff;
        var result = (first << 1) & 0xff;
        if (mode == 3) {
            result += this.F_CARRY;
        }
        this.F_CARRY = ((first & 0x80) >> 7);
        this.set8NZ(result);
        this.F_OVERFLOW = (this.F_SIGN ^ this.F_CARRY);
        return (result & 0xff);
    },

    arithmeticShiftLeft: function (first) {
        return this.shiftLeft(first, 1);
    },

    rotateLeft: function (first) {
        return this.shiftLeft(first, 3);
    },

    shiftLeft16: function (first) {
        first &= 0xffff;
        var result = (first << 1) & 0xffff;
        this.F_CARRY = ((first & 0x8000) >> 15);
        this.set16NZ(result);
        this.F_OVERFLOW = (this.F_SIGN ^ this.F_CARRY);
        return (result & 0xffff);
    },

    shiftRight16: function (first) {
        first &= 0xffff;
        var result = (first >> 1) & 0xffff;
        this.F_CARRY = (first & 0x01);
        this.set16NZ(result);
        this.F_OVERFLOW = (this.F_SIGN ^ this.F_CARRY);
        return (result & 0xffff);
    },

    shiftRight: function (first, mode) {
        first &= 0xff;
        var result = (first >> 1) & 0xff;
        switch (mode) {
            case 1:
                result |= (first & 0x80);
                break;
            case 3:
                result |= (this.F_CARRY << 7);
                break;
            case 2:
                break;
            default:
                console.debug("Bad shift");
        }
        this.F_CARRY = (first & 0x01);
        this.set8NZ(result);
        this.F_OVERFLOW = (this.F_SIGN ^ this.F_CARRY);
        return (result & 0xff);
    },

    arithmeticShiftRight: function (first) {
        return this.shiftRight(first, 1);
    },

    logicalShiftRight: function (first) {
        return this.shiftRight(first, 2);
    },

    rotateRight: function (first) {
        return this.shiftRight(first, 3);
    },

    set8N: function (value) {
        this.F_SIGN = (value & 0x80) >> 7;
    },

    set16N: function (value) {
        this.F_SIGN = (value & 0x8000) >> 15;
    },

    set8Z: function (value) {
        this.F_ZERO = (value & 0xff) == 0 ? 1 : 0;
    },

    set16Z: function (value) {
        this.F_ZERO = (value & 0xffff) == 0 ? 1 : 0;
    },

    set8H: function (first, second, result) {
        this.F_HALFCARRY = ((first ^ second ^ result) & 0x10) >> 4;
    },

    set8C: function (value) {
        this.F_CARRY = (value & 0x100) >> 8;
    },

    set16C: function (value) {
        this.F_CARRY = (value & 0x10000) >> 16;
    },

    set8V: function (first, second, result) {
        this.F_OVERFLOW = ((first ^ second ^ result ^ (result >> 1)) & 0x80) >> 7;
    },

    set16V: function (first, second, result) {
        this.F_OVERFLOW = ((first ^ second ^ result ^ (result >> 1)) & 0x8000) >> 15;
    },

    set8NZ: function (value) {
        this.set8N(value);
        this.set8Z(value);
    },

    set16NZ: function (value) {
        this.set16N(value);
        this.set16Z(value);
    },

    set8HNZVC: function (first, second, result) {
        this.set8NZVC(first, second, result);
        this.set8H(first, second, result);
    },

    set8NZVC: function (first, second, result) {
        this.set8NZ(result & 0xff);
        this.set8V(first, second, result);
        this.set8C(result);
    },

    set16NZVC: function (first, second, result) {
        this.set16NZ(result & 0xffff);
        this.set16V(first, second, result);
        this.set16C(result);
    },

    signExtend: function (value) {
        return value < 128 ? value : value - 256;
    },

    mnemonics: ['.CLB', 'NOP ', '.CEA', '.SEA', 'LSRD', 'ASLD', 'TAP ', 'TPA ', 'INX ', 'DEX ', 'CLV ', 'SEV ', 'CLC ', 'SEC ', 'CLI ', 'SEI ',
        'SBA ', 'CBA ', '.12 ', '.13 ', '.14 ', '.15 ', 'TAB ', 'TBA ', '.18 ', 'DAA ', '.1A ', 'ABA ', '.1C ', '.1D ', '.1E ', '.1F ',
        'BRA ', 'BRN ', 'BHI ', 'BLS ', 'BCC ', 'BCS ', 'BNE ', 'BEQ ', 'BVC ', 'BVS ', 'BPL ', 'BMI ', 'BGE ', 'BLT ', 'BGT ', 'BLE ',
        'TSX ', 'INS ', 'PULA', 'PULB', 'DES ', 'TXS ', 'PHSA', 'PSHB', 'PULX', 'RTS ', 'ABX ', 'RTI ', 'PSHX', 'MUL ', 'WAI ', 'SWI ',
        'NEGA', '.41 ', '.42 ', 'COMA', 'LSRA', '.45 ', 'RORA', 'ASRA', 'ASLA', 'ROLA', 'DECA', '.4B ', 'INCA', 'TSTA', 'T4E ', 'CLRA',
        'NEGB', '.51 ', '.52 ', 'COMB', 'LSRB', '.55 ', 'RORB', 'ASRB', 'ASLB', 'ROLB', 'DECB', '.5B ', 'INCB', 'TSTB', 'T5E ', 'CLRB',
        'NEG ', '.61 ', '.62 ', 'COM ', 'LSR ', '.65 ', 'ROR ', 'ASR ', 'ASL ', 'ROL ', 'DEC ', '.6B ', 'INC ', 'TST ', 'JMP ', 'CLR ',
        'NEG ', '.71 ', '.72 ', 'COM ', 'LSR ', '.75 ', 'ROR ', 'ASR ', 'ASL ', 'ROL ', 'DEC ', '.7B ', 'INC ', 'TST ', 'JMP ', 'CLR ',
        'SUBA', 'CMPA', 'SBCA', 'SUBD', 'ANDA', 'BITA', 'LDAA', '.87 ', 'EORA', 'ADCA', 'ORAA', 'ADDA', 'CMPX', 'BSR ', 'LDS ', '.8F ',
        'SUBA', 'CMPA', 'SBCA', 'SUBD', 'ANDA', 'BITA', 'LDAA', 'STAA', 'EORA', 'ADCA', 'ORAA', 'ADDA', 'CMPX', 'JSR ', 'LDS ', 'STS ',
        'SUBA', 'CMPA', 'SBCA', 'SUBD', 'ANDA', 'BITA', 'LDAA', 'STAA', 'EORA', 'ADCA', 'ORAA', 'ADDA', 'CMPX', 'JSR ', 'LDS ', 'STS ',
        'SUBA', 'CMPA', 'SBCA', 'SUBD', 'ANDA', 'BITA', 'LDAA', 'STAA', 'EORA', 'ADCA', 'ORAA', 'ADDA', 'CMPX', 'JSR ', 'LDS ', 'STS ',
        'SUBB', 'CMPB', 'SBCB', 'ADDD', 'ANDB', 'BITB', 'LDAB', '.C7 ', 'EORB', 'ADCB', 'ORAB', 'ADDB', 'LDD ', '.CD ', 'LDX ', '.CF ',
        'SUBB', 'CMPB', 'SBCB', 'ADDD', 'ANDB', 'BITB', 'LDAB', 'STAB', 'EORB', 'ADCB', 'ORAB', 'ADDB', 'LDD ', 'STD ', 'LDX ', 'STX ',
        'SUBB', 'CMPB', 'SBCB', 'ADDD', 'ANDB', 'BITB', 'LDAB', 'STAB', 'EORB', 'ADCB', 'ORAB', 'ADDB', 'LDD ', 'STD ', 'LDX ', 'STX ',
        'SUBB', 'CMPB', 'SBCB', 'ADDD', 'ANDB', 'BITB', 'LDAB', 'STAB', 'EORB', 'ADCB', 'ORAB', 'ADDB', 'LDD ', 'STD ', 'LDX ', 'STX ',
    ],

    disassemble: function (address) {
        var op = this.fetchMemory(address);
        var opstr = this.mnemonics[op];
        if ((op & 0xf0) == 0x20 || op == 0x8d) { //relative
            var dest = this.fetchMemory((address + 1) & 0xffff);
            dest = dest & 0x80 ? dest | 0xff00 : dest;
            dest = (address + 2 + dest) & 0xffff;
            console.debug(address.toString(16) + " " + opstr + "  " + dest.toString(16));
        } else if ((op & 0xf0) == 0x60 | (op & 0xf0) == 0xa0 | (op & 0xf0) == 0xe0) { //indexed
            var offset = this.fetchMemory((address + 1) & 0xffff);
            console.debug(address.toString(16) + " " + opstr + "  " + offset.toString(16) + ",X");
        } else if ((op & 0xf0) == 0x70 | (op & 0xf0) == 0xb0 | (op & 0xf0) == 0xf0) { // extended
            var mem16 = (this.fetchMemory((address + 1) & 0xffff) << 8) + this.fetchMemory((address + 2) & 0xffff);
            console.debug(address.toString(16) + " " + opstr + "  " + mem16.toString(16));
        } else if ((op & 0xf0) == 0x90 | (op & 0xf0) == 0xd0) { // direct
            var mem8 = this.fetchMemory((address + 1) & 0xffff);
            console.debug(address.toString(16) + " " + opstr + "  " + mem8.toString(16));
        } else if ((op & 0xf0) == 0x80 | (op & 0xf0) == 0xc0) {
            var imm = this.fetchMemory((address + 1) & 0xffff);
            if ((op & 0xf) == 0x3 | (op & 0xf) > 0xb) {
                imm = (imm << 8) + this.fetchMemory((address + 2) & 0xffff);
            }
            console.debug(address.toString(16) + " " + opstr + " #" + imm.toString(16));
        } else {
            console.debug(address.toString(16) + " " + opstr);
        }
    }
}

MC10.MC6847 = function (mc10) {
    this.mc10 = mc10;

    this.graphicsMode = null;
    this.palette = null;
    this.audio = null;
    this.canvas = null;
    this.screen = null;
    this.ctx = null;
    this.imageData = null;
    this.toggleSpeaker = null;
    this.sample = null;
    this.audioInterval = null;

    this.init();
};

MC10.MC6847.SG4Rectangle = [
    //empty block
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //lower right
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    //lower left
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    //bottom row
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],
    //upper right
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //right side
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    //bottom left, upper right
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    //upper left empty
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],
    //upper left
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //upper left, lower right
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    //left side
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    //upper right empty
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],
    //top
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //lower left empty
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    //lwoer right empty
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    //all full
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]
]; //SG4Rectangle

MC10.MC6847.SG6Rectangle = [
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff],
    [0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00],
    [0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff],
    [0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00],
    [0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff],
    [0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00],
    [0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0],
    [0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],
    [0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff],
    [0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00],
    [0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff],
    [0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00],
    [0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff],
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00],
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0x0f, 0x0f],
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0xf0],
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]
]; //SG6Rectangle

MC10.MC6847.SG4CharacterSet = [
    //@
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x02, 0x12, 0x2a, 0x2a, 0x1e, 0x00, 0x00],
    //A
    [0x00, 0x00, 0x00, 0x08, 0x14, 0x22, 0x22, 0x3e, 0x22, 0x22, 0x00, 0x00],
    //B
    [0x00, 0x00, 0x00, 0x3c, 0x12, 0x12, 0x1c, 0x12, 0x12, 0x3c, 0x00, 0x00],
    //C
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x20, 0x20, 0x20, 0x22, 0x1c, 0x00, 0x00],
    //D
    [0x00, 0x00, 0x00, 0x3c, 0x12, 0x12, 0x12, 0x12, 0x12, 0x3c, 0x00, 0x00],
    //E
    [0x00, 0x00, 0x00, 0x3e, 0x20, 0x20, 0x3c, 0x20, 0x20, 0x3e, 0x00, 0x00],
    //F
    [0x00, 0x00, 0x00, 0x3e, 0x20, 0x20, 0x3c, 0x20, 0x20, 0x20, 0x00, 0x00],
    //G
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x20, 0x2c, 0x22, 0x22, 0x1c, 0x00, 0x00],
    //H
    [0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x3e, 0x22, 0x22, 0x22, 0x00, 0x00],
    //I
    [0x00, 0x00, 0x00, 0x1c, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1c, 0x00, 0x00],
    //J
    [0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x22, 0x1c, 0x00, 0x00],
    //K
    [0x00, 0x00, 0x00, 0x22, 0x24, 0x28, 0x30, 0x28, 0x24, 0x22, 0x00, 0x00],
    //L
    [0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3e, 0x00, 0x00],
    //M
    [0x00, 0x00, 0x00, 0x22, 0x36, 0x2a, 0x2a, 0x22, 0x22, 0x22, 0x00, 0x00],
    //N
    [0x00, 0x00, 0x00, 0x22, 0x32, 0x2a, 0x26, 0x22, 0x22, 0x22, 0x00, 0x00],
    //O
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1c, 0x00, 0x00],
    //P
    [0x00, 0x00, 0x00, 0x3c, 0x22, 0x22, 0x3c, 0x20, 0x20, 0x20, 0x00, 0x00],
    //Q
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x22, 0x22, 0x2a, 0x24, 0x1a, 0x00, 0x00],
    //R
    [0x00, 0x00, 0x00, 0x3c, 0x22, 0x22, 0x3c, 0x28, 0x24, 0x22, 0x00, 0x00],
    //S
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x10, 0x08, 0x04, 0x22, 0x1c, 0x00, 0x00],
    //T
    [0x00, 0x00, 0x00, 0x3e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00],
    //U
    [0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1c, 0x00, 0x00],
    //V
    [0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x00, 0x00],
    //W
    [0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x2a, 0x2a, 0x36, 0x22, 0x00, 0x00],
    //X
    [0x00, 0x00, 0x00, 0x22, 0x22, 0x14, 0x08, 0x14, 0x22, 0x22, 0x00, 0x00],
    //Y
    [0x00, 0x00, 0x00, 0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00],
    //Z
    [0x00, 0x00, 0x00, 0x3e, 0x02, 0x04, 0x08, 0x10, 0x20, 0x3e, 0x00, 0x00],
    //[
    [0x00, 0x00, 0x00, 0x1c, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1c, 0x00, 0x00],
    //\ -- We need extra stuff after just in case we escape the next line
    [0x00, 0x00, 0x00, 0x20, 0x20, 0x10, 0x08, 0x04, 0x02, 0x02, 0x00, 0x00],
    //]
    [0x00, 0x00, 0x00, 0x1c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1c, 0x00, 0x00],
    //Up Arrow
    [0x00, 0x00, 0x00, 0x08, 0x1c, 0x2a, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00],
    //Left Arrow
    [0x00, 0x00, 0x00, 0x08, 0x10, 0x3e, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00],
    //Space
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //!
    [0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00, 0x00],
    //"
    [0x00, 0x00, 0x00, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //#
    [0x00, 0x00, 0x00, 0x14, 0x14, 0x36, 0x00, 0x36, 0x14, 0x14, 0x00, 0x00],
    //$
    [0x00, 0x00, 0x00, 0x08, 0x1e, 0x20, 0x1c, 0x02, 0x3c, 0x08, 0x00, 0x00],
    //%
    [0x00, 0x00, 0x00, 0x32, 0x32, 0x04, 0x08, 0x10, 0x26, 0x26, 0x00, 0x00],
    //&
    [0x00, 0x00, 0x00, 0x10, 0x28, 0x28, 0x10, 0x2a, 0x24, 0x1a, 0x00, 0x00],
    //`   -- should this be raised up by one? I don't believe so..
    [0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    //(
    [0x00, 0x00, 0x00, 0x04, 0x08, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00, 0x00],
    //)
    [0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00, 0x00],
    //*
    [0x00, 0x00, 0x00, 0x00, 0x08, 0x1c, 0x3e, 0x1c, 0x08, 0x00, 0x00, 0x00],
    //+
    [0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00, 0x00],
    //,
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00],
    //-
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00],
    //.
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00],
    ///
    [0x00, 0x00, 0x00, 0x02, 0x02, 0x04, 0x08, 0x10, 0x20, 0x20, 0x00, 0x00],
    //0
    [0x00, 0x00, 0x00, 0x08, 0x14, 0x22, 0x22, 0x22, 0x14, 0x08, 0x00, 0x00],
    //1
    [0x00, 0x00, 0x00, 0x08, 0x18, 0x08, 0x08, 0x08, 0x08, 0x1c, 0x00, 0x00],
    //2
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x02, 0x1e, 0x20, 0x20, 0x3e, 0x00, 0x00],
    //3
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x02, 0x0c, 0x02, 0x22, 0x1c, 0x00, 0x00],
    //4
    [0x00, 0x00, 0x00, 0x04, 0x0c, 0x14, 0x3e, 0x04, 0x04, 0x04, 0x00, 0x00],
    //5
    [0x00, 0x00, 0x00, 0x3e, 0x20, 0x3c, 0x02, 0x02, 0x22, 0x1c, 0x00, 0x00],
    //6
    [0x00, 0x00, 0x00, 0x1c, 0x20, 0x20, 0x3c, 0x22, 0x22, 0x1c, 0x00, 0x00],
    //7
    [0x00, 0x00, 0x00, 0x3e, 0x02, 0x04, 0x08, 0x10, 0x20, 0x20, 0x00, 0x00],
    //8
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x22, 0x1c, 0x22, 0x22, 0x1c, 0x00, 0x00],
    //9
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x22, 0x1c, 0x02, 0x02, 0x1c, 0x00, 0x00],
    //:
    [0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00],
    //;
    [0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00],
    //<
    [0x00, 0x00, 0x00, 0x04, 0x08, 0x10, 0x20, 0x10, 0x08, 0x04, 0x00, 0x00],
    //=
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00],
    //>
    [0x00, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00],
    //?
    [0x00, 0x00, 0x00, 0x1c, 0x22, 0x02, 0x04, 0x08, 0x00, 0x08, 0x00, 0x00]
]; //SG4CharacterSet

MC10.MC6847.Palette = [
    [0x28, 0xE0, 0x28], // CSS0 Green
    [0xF0, 0xF0, 0x70], // CSS0 Yellow
    [0x20, 0x20, 0xD8], // CSS0 Blue
    [0xA8, 0x20, 0x20], // CSS0 Red
    [0xF0, 0xF0, 0xF0], // CSS1 Buff
    [0x28, 0xA8, 0xA8], // CSS1 Cyan
    [0xD3, 0x61, 0xFA], // CSS1 Magenta
    [0xF0, 0x88, 0x28], // CSS1 Orange
    [0x00, 0x00, 0x00], // Black
    [0x10, 0x60, 0x10], // Dark  Green Text
    [0x78, 0x50, 0x20], // Dark  Orange Text
    [0x28, 0xE0, 0x28], // Light Green Text
    [0xF0, 0xB0, 0x40], // Light Orange Text
];

MC10.MC6847.prototype = {
    init: function () {
        this.graphicsMode = 0;
        this.palette = 0;
        this.screen = document.getElementById("screen");
        this.canvas = document.getElementById("canvas");
        this.ctx = this.screen.getContext("2d");
        this.ctx.fillStyle = "black";
        this.ctx.fillRect(0, 0, 512, 384);
        this.imageData = this.ctx.getImageData(0, 0, 512, 384);
        try {
            // Fix up for prefixing
            window.AudioContext = window.AudioContext || window.webkitAudioContext;
            this.audioCtx = new AudioContext();
        }
        catch (e) {
            console.log('Web Audio API is not supported in this browser');
        }
        this.audioNode = null;
        this.audioBuffer = null;
        this.audioTimer;
        this.toggleSpeaker = 0;
        this.abuf = new FiniteBuffer(100000); // really only need 41,000 samples for 60 Hz rate
        this.sampleRate = 48000;
        this.sample = 0;
        this.sampleValue = 0;
        this.sampleCount = 0;
        this.vramIs4k = true;
    },

    reset: function () {
        this.graphicsMode = 0;
        this.palette = 0;
        this.ctx.fillStyle = "black";
        this.ctx.fillRect(0, 0, 512, 384);

        var self = this;
        if (this.audioCtx != null) {
            this.sampleRate = this.audioCtx.sampleRate;
            if (this.audioCtx.createScriptProcessor) {
                this.audioNode = this.audioCtx.createScriptProcessor(2048, 1, 1);
            } else {
                this.audioNode = this.audioCtx.createJavaScriptNode(2048, 1, 1);
            }
            this.audioNode.onaudioprocess = function (e) { self.processAudio(e); }
            this.audioNode.connect(this.audioCtx.destination);
        }
    },

    scaleImageData: function (imageData, scale) {
        var scaled = this.ctx.createImageData(imageData.width * scale, imageData.height * scale);
        for (var row = 0; row < imageData.height; row++) {
            for (var col = 0; col < imageData.width; col++) {
                var sourcePixel = [
                    imageData.data[(row * imageData.width + col) * 4 + 0],
                    imageData.data[(row * imageData.width + col) * 4 + 1],
                    imageData.data[(row * imageData.width + col) * 4 + 2],
                    imageData.data[(row * imageData.width + col) * 4 + 3]
                ];
                for (var y = 0; y < scale; y++) {
                    var destRow = row * scale + y;
                    for (var x = 0; x < scale; x++) {
                        var destCol = col * scale + x;
                        for (var i = 0; i < 4; i++) {
                            scaled.data[(destRow * scaled.width + destCol) * 4 + i] = sourcePixel[i];
                        }
                    }
                }
            }
        }
        return scaled;
    },

    paintFrame: function () {
        this.ctx.putImageData(this.imageData, 0, 0);
    },

    updateDisplay: function (pos, val) {
        // graphics modes
        // 8    64x64x4 (CG1)
        // 12   128x64x2 (RG1)
        // 10   128x64x4 (CG2)
        // 14   128x96x2 (RG2)
        // 9    128x96x4 (CG3)
        // 13   128x192x2 (RG3)
        // 11   128x192x4 (CG6)
        // 15   256x192x2 (RG6)
        if (this.graphicsMode < 8)
            this.updateSemiGraphics(pos, val);
        else if (this.graphicsMode < 12)
            this.updateColorGraphics(pos, val);
        else
            this.updateResolutionGraphics(pos, val);
    },

    updateResolutionGraphics: function (pos, val) {
        // graphics modes
        // 12   128x64x2 (RG1)
        // 14   128x96x2 (RG2)
        // 13   128x192x2 (RG3)
        // 15   256x192x2 (RG6)

        var pixPerByte  = 8;
        var hPixSize    = this.graphicsMode == 15 ? 2 : 4;
        var bytesPerRow = this.graphicsMode == 15 ? 32 : 16;
        var vPixSize    = this.graphicsMode == 12 ? 6 :
                          this.graphicsMode == 14 ? 4 :
                                                    2;

        var screenX = (pos % bytesPerRow) * hPixSize * pixPerByte;
        var screenY = (pos - pos % bytesPerRow) / bytesPerRow * vPixSize;

        var data = this.imageData.data;
        var fgColor = this.palette ? 8 : 9; // black or dark green
        var bgColor = this.palette ? 4 : 0; // white or light green (matches background border pix)

        var tval = val & 0xff;

        for (var i = 0; i < pixPerByte; i++) {
            var color = tval&0x80 ? bgColor : fgColor;
            tval <<= 1;
            for (var x = 0; x < hPixSize; x++) {
                for (var y = 0; y < vPixSize; y++) {
                    var idx0 = ((screenY + y) * 512 + screenX + x + i*hPixSize) * 4;
                    data[idx0] = MC10.MC6847.Palette[color][0];
                    data[idx0 + 1] = MC10.MC6847.Palette[color][1];
                    data[idx0 + 2] = MC10.MC6847.Palette[color][2];
                }
            }
        }
    },

    updateColorGraphics: function (pos, val) {
        // 8    64x64x4 (CG1)
        // 10   128x64x4 (CG2)
        // 9    128x96x4 (CG3)
        // 11   128x192x4 (CG6)

        var pixPerByte  = 4;
        var hPixSize    = this.graphicsMode == 8 ? 8 : 4;
        var bytesPerRow = this.graphicsMode == 8 ? 16 : 32;
        var vPixSize    = this.graphicsMode == 11 ? 2 :
                          this.graphicsMode ==  9 ? 4 :
                                                    6;

        var screenX = (pos % bytesPerRow) * hPixSize * pixPerByte;
        var screenY = (pos - pos % bytesPerRow) / bytesPerRow * vPixSize;

        var data = this.imageData.data;
        var tval = val & 0xff;
        var altcolor = this.palette ? 0x4 : 0x0;

        for (var i = 0; i < pixPerByte; i++) {
            var color = ((tval >> 6) & 0x03) | altcolor;
            tval <<= 2;
            for (var x = 0; x < hPixSize; x++) {
                for (var y = 0; y < vPixSize; y++) {
                    var idx0 = ((screenY + y) * 512 + screenX + x + i*hPixSize) * 4;
                    data[idx0] = MC10.MC6847.Palette[color][0];
                    data[idx0 + 1] = MC10.MC6847.Palette[color][1];
                    data[idx0 + 2] = MC10.MC6847.Palette[color][2];
                }
            }
        }
    },

    updateSemiGraphics: function (pos, val) {
        var screenX, screenY;
        var block = new Array(12);
        var fgColorIndex;
        var bgColorIndex;
        var color;

        if (val <= 0x7f) {
            bgColorIndex =  9 + this.palette + ((val & 0x40)>>5);
            fgColorIndex = 11 + this.palette - ((val & 0x40)>>5);
            
            for (var i = 0; i < 12; i++) {
                block[i] = this.graphicsMode & 1 ? val & 0x7f : 
                                                   MC10.MC6847.SG4CharacterSet[val & 0x3f][i];
            }
        } else if (this.graphicsMode & 1) {
            bgColorIndex = 8;
            fgColorIndex = ((val & 0x40) >> 6) + (this.palette ? 6 : 2);

            for (var i = 0; i < 12; i++) {
                block[i] = MC10.MC6847.SG6Rectangle[val & 0x3f][i];
            }
        } else {
            bgColorIndex = 8;
            fgColorIndex = ((val & 0x70) >> 4);

            for (var i = 0; i < 12; i++) {
                block[i] = MC10.MC6847.SG4Rectangle[val & 0x0f][i];
            }
        }

        screenX = (pos % 32);
        screenY = ((pos - screenX) / 32);
        screenX *= 16;
        screenY *= 24;

        var data = this.imageData.data;

        for (var i = 0; i < 12; i++) {

            var cpos = 0x80;
            for (var j = 0; j < 8; j++) {
                if (block[i] & cpos) {
                    color = fgColorIndex;
                } else {
                    color = bgColorIndex;
                }
                for (var x = 0; x < 2; x++) {
                    for (var y = 0; y < 2; y++) {
                        var idx0 = ((screenY * 512) + (y * 512) + x + screenX) * 4;
                        data[idx0] = MC10.MC6847.Palette[color][0];
                        data[idx0 + 1] = MC10.MC6847.Palette[color][1];
                        data[idx0 + 2] = MC10.MC6847.Palette[color][2];
                    }
                }
                cpos >>= 1;
                screenX += 2;
            }
            screenX -= 16;
            screenY += 2;
        }
    },

    processAudio: function (e) {
        var data = e.outputBuffer.getChannelData(0);
        var abufRate = this.mc10.clockRate;
        var cutoffFreq = 8000; // 8 kHz cutoff
        var droop = Math.exp(-cutoffFreq / abufRate);
        var sampleValue = this.sampleValue;

        var iData = 0;
        var iBuf = 0;
        while (this.abuf.length > 0) {
            var bufValue = this.abuf.pull() != 0 ? 0.1 : 0;
            sampleValue = (sampleValue - bufValue) * droop + bufValue;
            iData = Math.floor(iBuf++ * this.sampleRate / abufRate);
            if (iData < data.length)
                data[iData] = sampleValue;
            else
                break;
        }

        while (iData < data.length) {
            data[iData] = sampleValue;
            ++iData;
        }

        this.sampleValue = sampleValue;
    },


    updateAudio: function () {
        this.abuf.push(this.toggleSpeaker);
    },

    updateChip: function (val) {
        this.toggleSpeaker = (val & 0x80);

        var dirty = false;
        var mode = this.graphicsMode;
        this.graphicsMode = ((val >> 2) & 0xf);
        if (mode != this.graphicsMode) {
            dirty = true;
        }
        var pal = this.palette;
        this.palette = (val >> 6) & 0x01;
        if (pal != this.palette) {
            dirty = true;
        }
        return dirty;
    }
}

MC10.KBD = function (mc10) {
    this.mc10 = mc10;
    this.init();
};

MC10.KBD.prototype = {

    init: function () {
        var self = this;
        document.onkeyup = function (evt) { self.keyUp(evt); };
        document.onkeydown = function (evt) { self.keyDown(evt); };
        document.onkeypress = function (evt) { self.keyPress(evt) };
    },

    keyUp: function (evt) {
        var ks = evt.keyCode;

        if (ks >= 65 && ks <= 90) {
            this.mc10.cpu.port1[ks % 8] |= (1 << ((ks - 64) / 8));
        } else if (ks == 13) {
            this.mc10.cpu.port1[6] |= (1 << 3);
        } else if (ks == 16) { // Shift
            this.mc10.cpu.port2[7] |= (0x02);
        } else if (ks == 17) { // Ctrl
            this.mc10.cpu.port2[0] |= (0x02);
        } else if (ks == 27) { // Break
            this.mc10.cpu.port2[2] |= (0x02);
        } else if (ks == 32) {
            this.mc10.cpu.port1[7] |= (1 << 3);
        } else if (ks >= 48 && ks <= 55) {
            this.mc10.cpu.port1[ks - 48] |= (1 << 4);
        } else if (ks == 189 || ks == 109) {
            this.mc10.cpu.port1[2] |= (1 << 5);
        } else if (ks == 187 || ks == 107) {
            this.mc10.cpu.port1[5] |= (1 << 5);
        } else if (ks == 219) {
            this.mc10.cpu.port1[0] |= (1 << 0);
        } else if (ks >= 56 && ks <= 185) {
            this.mc10.cpu.port1[ks - 56] |= (1 << 5);
        } else if (ks == 186) { // +
            this.mc10.cpu.port1[3] |= (1 << 5);
        } else if (ks == 188) { // ,
            this.mc10.cpu.port1[4] |= (1 << 5);
        } else if (ks >= 190 && ks <= 191) { // ./
            this.mc10.cpu.port1[ks - 184] |= (1 << 5);
        } else if (ks == 226 || ks == 225) {
            this.mc10.cpu.port2[7] |= (0x02);
        } else if (ks == 255) {
            this.mc10.cpu.port2[2] |= (0x02);
        } else if (ks == 8) { // Simulate Ctrl-A
            this.mc10.cpu.port2[0] |= (0x02);
            this.mc10.cpu.port1[1] |= (0x01);
        } else {
            console.debug("Unrecognized keycode: " + ks);
        }
    },

    keyDown: function (evt) {
        var ks = evt.keyCode;

        if (ks >= 65 && ks <= 90) {
            this.mc10.cpu.port1[ks % 8] &= ~(1 << ((ks - 64) / 8)); // A - Z
        } else if (ks == 13) {
            this.mc10.cpu.port1[6] &= ~(1 << 3);
        } else if (ks == 16) { // Shift
            this.mc10.cpu.port2[7] &= ~(0x02);
        } else if (ks == 17) { // Ctrl
            this.mc10.cpu.port2[0] &= ~(0x02);
        } else if (ks == 27) { // Break
            this.mc10.cpu.port2[2] &= ~(0x02);
        } else if (ks == 32) {
            this.mc10.cpu.port1[7] &= ~(1 << 3);
        } else if (ks >= 48 && ks <= 55) {
            this.mc10.cpu.port1[ks - 48] &= ~(1 << 4);
        } else if (ks == 189 || ks == 109) {
            this.mc10.cpu.port1[2] &= ~(1 << 5);
        } else if (ks == 187 || ks == 107) {
            this.mc10.cpu.port1[5] &= ~(1 << 5);
        } else if (ks == 219) {
            this.mc10.cpu.port1[0] &= ~(1 << 0);
        } else if (ks >= 56 && ks <= 185) {
            this.mc10.cpu.port1[ks - 56] &= ~(1 << 5);
        } else if (ks == 186) { // +
            this.mc10.cpu.port1[3] &= ~(1 << 5);
        } else if (ks == 188) { // ,
            this.mc10.cpu.port1[4] &= ~(1 << 5);
        } else if (ks >= 190 && ks <= 191) { // ./
            this.mc10.cpu.port1[ks - 184] &= ~(1 << 5);
        } else if (ks == 226 || ks == 225) {
            this.mc10.cpu.port2[7] &= ~(0x02);
        } else if (ks == 255) {
            this.mc10.cpu.port2[2] &= ~(0x02);
        } else if (ks == 8) { // Simulate Ctrl-A
            this.mc10.cpu.port2[0] &= ~(0x02);
            this.mc10.cpu.port1[1] &= ~(0x01);
        } else {
            console.debug("Unrecognized keycode: " + ks);
        }
        evt.preventDefault();
        evt.stopPropagation();
        return false;
    },

    keyPress: function (evt) {

    }
}

MC10.Cassette = function (mc10) {
    this.mc10 = mc10;
    this.recording = false;
    this.sampleRate = 44100;
    this.sampleBuffer = new Float32Array(0);
    this.sampleTime = 0;
    this.c10buffer = new Array(0);
    this.patchROM = false;
}

MC10.Cassette.prototype = {
    playAudio: function (sampleRate, pcmSamples) {
        console.log("loading " + pcmSamples.length + " samples at " + sampleRate + " Hz")
        this.sampleRate = sampleRate;
        this.sampleBuffer = pcmSamples.slice();
        this.sampleTime = 0;
        this.acfilter();
    },

    acfilter: function () {
        var lastLevel = 0;
        var droop = Math.exp(-100 / this.sampleRate);
        for (var i=0; i<this.sampleBuffer.length; i++) {
            lastLevel = droop*(this.sampleBuffer[i] - lastLevel) + lastLevel;
            this.sampleBuffer[i] -= lastLevel;
        }
    },

    advance: function (numCycles) {
        this.sampleTime += numCycles / this.mc10.clockRate;
        var bufferLen = this.sampleBuffer.length;
        var sampleValue = 0;
        if (bufferLen > 0) {
            var index = Math.round(this.sampleTime * this.sampleRate);
            if (index < bufferLen) {
                sampleValue = this.sampleBuffer[index];
            } else {
                this.sampleBuffer = new Float32Array(0);
                this.stop();
            }
        }
        if (sampleValue>0) {
           this.mc10.cpu.port2[4] = 0xff;
        } else {
           this.mc10.cpu.port2[4] = 0xef;
        }
    },

    // callback function for stop event
    stop: function() {
        console.log("Auto-stop")
    },

    playC10: function (c10data) {
        this.c10data = new Uint8Array(c10data);
        this.c10bitsRemaining = 0;
        this.c10byte = 0;
        this.c10index = 0;
        this.patchROM = true;
        this.recording = false;
        console.log('loading ' + this.c10data.length + ' raw bytes.')
    },

    getC10bit: function () {
        var bit = 0;
        if (this.c10bitsRemaining == 0) {
            if (this.c10index < this.c10data.length) {
                this.c10byte = this.c10data[this.c10index++];
                bit = this.c10byte & 1;
                this.c10byte >>= 1;
                this.c10bitsRemaining = 7;
            } else {
                this.patchROM = false;
                this.stop();
            } 
        } else {
            bit = this.c10byte & 1;
            this.c10byte >>= 1;
            this.c10bitsRemaining --;
        }

        return bit;
    },

    recordC10: function (autostop) {
        this.patchROM = true;
        this.recording = true;
        this.autoStop = autostop;
        this.recBuffer = new Uint8Array(0xffff+1);
        this.recIndex = 0;
    },

    recordC10byte: function (byte) {
        this.recBuffer[this.recIndex] = byte;
        console.log(byte.toString(16))
        this.recIndex = (this.recIndex + 1) & 0xffff;
    },

    saveRecord: function () {
        this.patchROM = false;
        this.recording = false;
        this.autoStop(this.recBuffer.slice(0,this.recIndex));
    }
}